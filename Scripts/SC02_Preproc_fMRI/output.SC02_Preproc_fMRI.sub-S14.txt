echo auto-generated by afni_proc.py, Mon Nov 16 13:26:14 2020
auto-generated by afni_proc.py, Mon Nov 16 13:26:14 2020
echo (version 7.12, April 14, 2020)
(version 7.12, April 14, 2020)
echo execution started: `date`
date
execution started: Mon Nov 16 14:01:34 EST 2020
afni -ver
Precompiled binary linux_centos_7_64: Nov 12 2020 (Version AFNI_20.3.02 'Vespasian')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   12 Nov 2020
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-S14
endif
set output_dir = /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI
if ( -d /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/stimuli
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D01_Anatomical/anatSS.sub-S14.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/anatSS.sub-S14
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D01_Anatomical/anatUAC.sub-S14.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/copy_af_anat_w_skull
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S14/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S14/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S14/SUMA/fs_ap_latvent.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S14/SUMA/fs_ap_wm.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D01_Anatomical/anatQQ.sub-S14.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/anatQQ.sub-S14
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D01_Anatomical/anatQQ.sub-S14.aff12.1D /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/anatQQ.sub-S14.aff12.1D
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D01_Anatomical/anatQQ.sub-S14_WARP.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/anatQQ.sub-S14_WARP.nii
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/pb00.sub-S14.r01.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D00_OriginalData/sub-S14_SleepAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.9 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/pb00.sub-S14.r02.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D00_OriginalData/sub-S14_SleepDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/pb00.sub-S14.r03.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D00_OriginalData/sub-S14_SleepRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/pb00.sub-S14.r04.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D00_OriginalData/sub-S14_WakeAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/pb00.sub-S14.r05.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D00_OriginalData/sub-S14_WakeDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI/pb00.sub-S14.r06.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D00_OriginalData/sub-S14_WakeRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
set tr_counts = ( 412 412 295 412 412 295 )
cd /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S14/D02_Preproc_fMRI
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.sub-S14.r01.tcat+orig.HEAD pb00.sub-S14.r02.tcat+orig.HEAD pb00.sub-S14.r03.tcat+orig.HEAD pb00.sub-S14.r04.tcat+orig.HEAD pb00.sub-S14.r05.tcat+orig.HEAD pb00.sub-S14.r06.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 5.175778 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r01.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r01.automask+orig.BRIK is 5.175778 degrees from plumb.

-- running correlation on dataset pb00.sub-S14.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 5.175778 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r01+orig.BRIK is 5.175778 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r01+orig.BRIK is 5.175778 degrees from plumb.
++ Oblique dataset:./epi.r01+orig.BRIK is 5.175778 degrees from plumb.
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 5.175778 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r02.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r02.automask+orig.BRIK is 5.175778 degrees from plumb.

-- running correlation on dataset pb00.sub-S14.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 5.175778 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r02+orig.BRIK is 5.175778 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r02+orig.BRIK is 5.175778 degrees from plumb.
++ Oblique dataset:./epi.r02+orig.BRIK is 5.175778 degrees from plumb.
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 5.175362 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r03.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r03.automask+orig.BRIK is 5.175362 degrees from plumb.

-- running correlation on dataset pb00.sub-S14.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 5.175362 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r03+orig.BRIK is 5.175362 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r03+orig.BRIK is 5.175362 degrees from plumb.
++ Oblique dataset:./epi.r03+orig.BRIK is 5.175362 degrees from plumb.
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 5.361766 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r04.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r04.automask+orig.BRIK is 5.361766 degrees from plumb.

-- running correlation on dataset pb00.sub-S14.r04.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 5.361766 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r04+orig.BRIK is 5.361766 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r04+orig.BRIK is 5.361766 degrees from plumb.
++ Oblique dataset:./epi.r04+orig.BRIK is 5.361766 degrees from plumb.
++ Wrote dataset: ./radcor.20.r04.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 5.361766 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r05.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r05.automask+orig.BRIK is 5.361766 degrees from plumb.

-- running correlation on dataset pb00.sub-S14.r05.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 5.361766 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r05+orig.BRIK is 5.361766 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r05+orig.BRIK is 5.361766 degrees from plumb.
++ Oblique dataset:./epi.r05+orig.BRIK is 5.361766 degrees from plumb.
++ Wrote dataset: ./radcor.20.r05.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 5.361766 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r06.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r06.automask+orig.BRIK is 5.361766 degrees from plumb.

-- running correlation on dataset pb00.sub-S14.r06.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 5.361766 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r06+orig.BRIK is 5.361766 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r06+orig.BRIK is 5.361766 degrees from plumb.
++ Oblique dataset:./epi.r06+orig.BRIK is 5.361766 degrees from plumb.
++ Wrote dataset: ./radcor.20.r06.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S14.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r01.tcat+orig.BRIK is 5.175778 degrees from plumb.
++ 36697 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S14.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r02.tcat+orig.BRIK is 5.175778 degrees from plumb.
++ 36692 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S14.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r03.tcat+orig.BRIK is 5.175362 degrees from plumb.
++ 36687 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S14.r04.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r04.tcat+orig.BRIK is 5.361766 degrees from plumb.
++ 36611 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S14.r05.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r05.tcat+orig.BRIK is 5.361766 degrees from plumb.
++ 36612 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S14.r06.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r06.tcat+orig.BRIK is 5.361766 degrees from plumb.
++ 36618 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dDespike -NEW -nomask -prefix pb01.sub-S14.r01.despike pb00.sub-S14.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r01.tcat+orig.BRIK is 5.175778 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S14.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #9
++ start OpenMP thread #2
++ start OpenMP thread #10
++ start OpenMP thread #6
++ start OpenMP thread #3
++ start OpenMP thread #12
++ start OpenMP thread #5
++ start OpenMP thread #4
++ start OpenMP thread #14
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #1
++ start OpenMP thread #11
++ start OpenMP thread #7
........................................................
++ Elapsed despike time =  987ms

++ FINAL: 53157888 data points, 1965135 edits [3.697%], 123716 big edits [0.233%]
++ Output dataset ./pb01.sub-S14.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S14.r02.despike pb00.sub-S14.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r02.tcat+orig.BRIK is 5.175778 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S14.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #8
++ start OpenMP thread #11
++ start OpenMP thread #10
++ start OpenMP thread #14
++ start OpenMP thread #6
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #7
........................................................
++ Elapsed despike time =  1s 83ms

++ FINAL: 53157888 data points, 1911771 edits [3.596%], 93842 big edits [0.177%]
++ Output dataset ./pb01.sub-S14.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S14.r03.despike pb00.sub-S14.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r03.tcat+orig.BRIK is 5.175362 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S14.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #7
++ start OpenMP thread #3
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #0
++ start OpenMP thread #9
++ start OpenMP thread #10
++ start OpenMP thread #2
++ start OpenMP thread #11
++ start OpenMP thread #4
++ start OpenMP thread #14
........................................................
++ Elapsed despike time =  665ms

++ FINAL: 38062080 data points, 1360915 edits [3.576%], 58848 big edits [0.155%]
++ Output dataset ./pb01.sub-S14.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S14.r04.despike pb00.sub-S14.r04.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r04.tcat+orig.BRIK is 5.361766 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S14.r04.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #13
++ start OpenMP thread #11
++ start OpenMP thread #8
++ start OpenMP thread #5
++ start OpenMP thread #10
++ start OpenMP thread #2
++ start OpenMP thread #7
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #14
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 160ms

++ FINAL: 53157888 data points, 1958240 edits [3.684%], 107646 big edits [0.203%]
++ Output dataset ./pb01.sub-S14.r04.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S14.r05.despike pb00.sub-S14.r05.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r05.tcat+orig.BRIK is 5.361766 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S14.r05.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #12
++ start OpenMP thread #4
++ start OpenMP thread #6
++ start OpenMP thread #3
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #8
++ start OpenMP thread #7
++ start OpenMP thread #9
++ start OpenMP thread #13
........................................................
++ Elapsed despike time =  940ms

++ FINAL: 53157888 data points, 1997931 edits [3.758%], 128029 big edits [0.241%]
++ Output dataset ./pb01.sub-S14.r05.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S14.r06.despike pb00.sub-S14.r06.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S14.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S14.r06.tcat+orig.BRIK is 5.361766 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S14.r06.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #11
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #14
++ start OpenMP thread #13
++ start OpenMP thread #1
++ start OpenMP thread #7
++ start OpenMP thread #10
++ start OpenMP thread #4
++ start OpenMP thread #12
++ start OpenMP thread #6
++ start OpenMP thread #8
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  692ms

++ FINAL: 38062080 data points, 1373225 edits [3.608%], 60885 big edits [0.160%]
++ Output dataset ./pb01.sub-S14.r06.despike+orig.BRIK
end
foreach run ( 01 02 03 04 05 06 )
3dTshift -tzero 0 -quintic -prefix pb02.sub-S14.r01.tshift pb01.sub-S14.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S14.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S14.r01.despike+orig.BRIK is 5.175778 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S14.r02.tshift pb01.sub-S14.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S14.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S14.r02.despike+orig.BRIK is 5.175778 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S14.r03.tshift pb01.sub-S14.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S14.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S14.r03.despike+orig.BRIK is 5.175362 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S14.r04.tshift pb01.sub-S14.r04.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S14.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S14.r04.despike+orig.BRIK is 5.361766 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S14.r05.tshift pb01.sub-S14.r05.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S14.r05.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S14.r05.despike+orig.BRIK is 5.361766 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S14.r06.tshift pb01.sub-S14.r06.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S14.r06.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S14.r06.despike+orig.BRIK is 5.361766 degrees from plumb.
end
3dbucket -prefix vr_base pb02.sub-S14.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
align_epi_anat.py -anat2epi -anat anatSS.sub-S14+orig -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S14+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S14*
#Script is running (command trimmed):
  3dcopy ./anatSS.sub-S14+orig ./anatSS.sub-S14_unflipped+orig
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#Script is running (command trimmed):
  3dinfo ./anatSS.sub-S14_unflipped+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D02_Preproc_fMRI/anatSS.sub-S14_unflipped+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D02_Preproc_fMRI/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S14_unflipped+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./anatSS.sub-S14_unflipped_ob -newgrid 1.000000 ./anatSS.sub-S14_unflipped+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./anatSS.sub-S14_unflipped_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./anatSS.sub-S14_unflipped_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 5.175778 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 326.889771
 + Used gradual clip level = 300.140686 .. 363.838013
 + Number voxels above clip level = 36787
 + Clustering voxels ...
 + Largest cluster has 36565 voxels
 + Clustering voxels ...
 + Largest cluster has 36296 voxels
 + Filled   397 voxels in small holes; now have 36693 voxels
 + Clustering voxels ...
 + Largest cluster has 36692 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 94380 voxels
 + Mask now has 36692 voxels
++ 36692 voxels in the mask [out of 131072: 27.99%]
++ first  10 x-planes are zero [from R]
++ last   10 x-planes are zero [from L]
++ first   2 y-planes are zero [from P]
++ last    4 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_ts_ns+orig
#++ Applying threshold of 818.277649 on /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S14/D02_Preproc_fMRI/vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_ts_ns_wt -a ./vr_base_ts_ns+orig -expr 'min(1,(a/818.277649))'
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./anatSS.sub-S14_unflipped_ob_al_junk_wtal -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S14_unflipped_ob+orig -prefix ./anatSS.sub-S14_unflipped_ob_temp_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S14_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 5.175778 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 5.175778 degrees from plumb.
++ Source dataset: ./anatSS.sub-S14_unflipped_ob+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1385544 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 36692 voxels [16.1%] in weight mask
++ Output dataset ./anatSS.sub-S14_unflipped_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 36692
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.434 36.879 23.784 (index)
 + source center of mass = 136.599 151.830 172.552 (index)
 + source-target CM = -1.302 5.050 -2.890 (xyz)
 + estimated center of mass shifts = -1.302 5.050 -2.890
++ shift param auto-range: -62.0..59.4 -65.2..75.3 -59.5..53.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.302399 .. 8.697601  center = -1.302399
 + Range param#2 [y-shift] = -4.949577 .. 15.050423  center = 5.050423
 + Range param#3 [z-shift] = -12.889977 .. 7.110023  center = -2.889977
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.302399 .. 38.697601  center = -1.302399
 + Range param#2 [y-shift] = -34.949577 .. 45.050423  center = 5.050423
 + Range param#3 [z-shift] = -42.889977 .. 37.110023  center = -2.889977
 + 12 free parameters
++ Normalized convergence radius = 0.0000093
++ Final parameter search ranges:
 +       x-shift =  -41.302 ..   38.698
 +       y-shift =  -34.950 ..   45.050
 +       z-shift =  -42.890 ..   37.110
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1385544 [out of 21621888] voxels
 + base mask has 49294 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - copying weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 270.121 .. 1038.15; base clip 223.932 .. 837.198
 +  - versus source range 0.936654 .. 950.963; base range 0 .. 1035.93
 + 32181 total points stored in 294 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o++.o---+--o+-+-$o. + - best 45 costs found:
    0 v= 0.578279:  -1.30   5.05  -2.89   0.00   0.00   0.00  [grid]
    1 v= 0.731781:  12.90  -4.40   1.95 -15.99 -13.53 -29.93  [rand]
    2 v= 0.749300: -27.97  -8.28  10.44 -15.00 -15.00  15.00  [grid]
    3 v= 0.752805: -14.64  -8.28  10.44  15.00 -15.00  30.00  [grid]
    4 v= 0.782081:  -9.94 -15.38  14.58 -25.20 -18.50 -13.54  [rand]
    5 v= 0.782418:  12.03  -8.28  10.44 -15.00 -15.00 -30.00  [grid]
    6 v= 0.785169:   7.34 -15.38  14.58  25.20 -18.50  13.54  [rand]
    7 v= 0.803676:  31.18  -9.64 -14.70  11.16  -9.40 -34.39  [rand]
    8 v= 0.826094: -35.63 -11.53 -11.49 -16.34  -8.64  40.54  [rand]
    9 v= 0.826716:  25.36  -8.28  10.44  15.00 -15.00 -15.00  [grid]
   10 v= 0.828566: -14.64  -8.28  10.44 -30.00 -15.00 -15.00  [grid]
   11 v= 0.834629:  17.03 -21.09   3.16   6.51 -20.18  -7.56  [rand]
   12 v= 0.837195:  14.68 -14.44  -8.61  20.53  -3.14 -10.08  [rand]
   13 v= 0.841912: -14.64  18.38 -16.22 -15.00  15.00  15.00  [grid]
   14 v= 0.865709:  12.03 -21.62  10.44  30.00 -15.00  15.00  [grid]
   15 v= 0.870685:  33.02 -11.53 -11.49  16.34  -8.64 -40.54  [rand]
   16 v= 0.873229: -15.51  -4.40   1.95  15.99 -13.53  29.93  [rand]
   17 v= 0.895502: -27.97 -21.62  10.44 -15.00 -30.00  15.00  [grid]
   18 v= 0.897134:  14.68 -14.44   2.83  20.53  -3.14 -10.08  [rand]
   19 v= 0.909030:  21.55 -18.52   7.53  -5.91 -29.74 -29.45  [rand]
   20 v= 0.910791: -14.64 -21.62  10.44  15.00 -30.00  30.00  [grid]
   21 v= 0.916639:  12.03 -21.62  10.44 -15.00 -30.00 -30.00  [grid]
   22 v= 0.916786: -24.15 -18.52   7.53   5.91 -29.74  29.45  [rand]
   23 v= 0.924101: -19.63 -21.09   3.16  -6.51 -20.18   7.56  [rand]
   24 v= 0.925356: -14.64  -8.28  10.44 -15.00 -15.00  15.00  [grid]
   25 v= 0.935486: -14.64 -21.62  10.44  15.00 -15.00  30.00  [grid]
   26 v= 0.945705:  25.36 -21.62  10.44  15.00 -30.00 -15.00  [grid]
   27 v= 0.949790: -33.79  -9.64 -14.70 -11.16  -9.40  34.39  [rand]
   28 v= 0.950130:  12.03  -8.28  10.44  30.00 -15.00  15.00  [grid]
   29 v= 0.961993: -14.64  18.38 -16.22 -15.00  15.00 -15.00  [grid]
   30 v= 0.966131: -17.29 -14.44   2.83 -20.53  -3.14  10.08  [rand]
   31 v= 0.973694:   9.02 -23.76  12.12  30.67 -17.79  20.52  [rand]
   32 v= 0.973969: -14.64 -21.62  10.44  30.00 -15.00  30.00  [grid]
   33 v= 0.989526: -17.29 -14.44  -8.61 -20.53  -3.14  10.08  [rand]
   34 v= 0.991325:  25.36  18.38 -29.56  15.00  15.00 -30.00  [grid]
   35 v= 0.994783:  12.03  18.38 -16.22  15.00  15.00 -15.00  [grid]
   36 v= 1.001507:  14.68 -14.44  -8.61  20.53   3.14 -10.08  [rand]
   37 v= 1.002011:  12.03  -8.28  10.44 -15.00 -15.00 -15.00  [grid]
   38 v= 1.011496:  12.03  18.38 -16.22  15.00  15.00  15.00  [grid]
   39 v= 1.018854: -24.15 -18.52   7.53  -5.91 -29.74  29.45  [rand]
   40 v= 1.021349: -14.64  18.38 -29.56 -15.00  30.00  15.00  [grid]
   41 v= 1.033310: -14.64 -21.62  10.44 -30.00 -15.00 -15.00  [grid]
   42 v= 1.035030:  14.68 -14.44   2.83  20.53  -3.14  10.08  [rand]
   43 v= 1.041673: -27.97  18.38 -16.22 -15.00  15.00  15.00  [grid]
   44 v= 1.042256: -27.97  18.38 -29.56 -15.00  15.00  30.00  [grid]
 + - A little optimization:*[#8004=0.489213] *[#8006=0.436968] *[#8015=0.425113] *[#8016=0.417771] *[#8017=0.412174] *[#8018=0.380663] *[#8019=0.319424] *[#8020=0.318934] *[#8022=0.285287] *[#8026=0.283211] *[#8027=0.271148] *[#8028=0.266443] *[#8029=0.245815] *[#8030=0.206734] *[#8031=0.180686] *[#8032=0.169049] *[#8034=0.158384] *[#8037=0.156541] *[#8039=0.14521] *[#8042=0.135393] *[#8043=0.130521] *[#8044=0.113177] *[#8045=0.0964804] *[#8046=0.0683642] *[#8047=0.0587704] *[#8048=0.0314688] *[#8049=0.0165857] *[#8052=0.00117395] *[#8055=-0.0393519] *[#8056=-0.0789584] *[#8057=-0.116644] *[#8060=-0.150236] *[#8061=-0.18278] *[#8064=-0.18742] *[#8067=-0.195297] *[#8070=-0.207657] *[#8073=-0.207774] .............................................
 + - costs of the above after a little optimization:
  * 0 v=-0.207774:  -0.72  -0.49   2.00   0.01  -0.74  -0.05  [grid]
    1 v= 0.637796:  11.59  -7.39  -0.15 -13.34 -11.52 -30.09  [rand]
    2 v= 0.656613: -23.78 -11.90   6.83 -11.67 -14.85  14.78  [grid]
    3 v= 0.610606: -12.51  -9.54   4.58   9.17 -12.68  23.74  [grid]
    4 v= 0.662769:  -9.77  -7.89   7.78 -22.29 -12.61  -8.88  [rand]
    5 v= 0.617648:   8.16  -8.85   4.31  -7.71 -13.59 -20.96  [grid]
    6 v= 0.680925:   3.60 -16.01   8.20  19.48 -16.25   9.98  [rand]
    7 v= 0.671404:  24.30  -7.62 -10.39  11.25  -7.40 -30.58  [rand]
    8 v= 0.765773: -33.99  -7.78 -12.53 -15.62  -8.26  39.53  [rand]
    9 v= 0.448186:  10.08  -2.60   2.44   6.63  -3.07  -7.96  [grid]
   10 v= 0.709341: -13.80  -7.40   9.54 -29.00  -9.27 -13.30  [grid]
   11 v= 0.466070:   4.59 -12.43   6.00   0.77  -9.13  -5.44  [rand]
   12 v= 0.553257:  13.78 -11.69   2.75   9.07 -12.43 -10.58  [rand]
   13 v= 0.223214:  -6.02  -0.21  -0.65  -3.28   1.52   2.77  [grid]
   14 v= 0.482653:  -3.61  -2.37   4.22  -1.45  -9.64   4.29  [grid]
   15 v= 0.657477:  23.98  -7.70  -9.30  12.74  -7.24 -27.86  [rand]
   16 v= 0.641127: -14.21  -6.49   0.95  11.60  -8.01  30.11  [rand]
   17 v= 0.717390: -23.90 -19.22   2.11 -16.71 -20.81  17.72  [grid]
   18 v= 0.120329:   0.59  -1.08   2.13  -0.75  -1.35  -4.34  [rand]
   19 v= 0.722908:  19.01 -19.74   1.00  -6.75 -24.48 -30.43  [rand]
   20 v=-0.035953:  -1.65  -1.72   3.76  -0.96  -1.38   0.35  [grid]
   21 v= 0.652662:   6.88 -11.43   4.66 -14.47 -15.85 -22.99  [grid]
   22 v= 0.638483: -19.48 -12.94   1.88   1.79 -16.43  25.82  [rand]
   23 v= 0.457828:  -5.05  -6.60  11.00  -1.57  -8.75   3.91  [rand]
   24 v= 0.466478: -13.95  -1.32   3.87  -7.11  -2.53   6.82  [grid]
   25 v= 0.629837: -13.39 -12.48   4.85  11.25 -13.98  26.34  [grid]
   26 v= 0.536496:  13.25 -11.10   3.46   6.17 -11.42 -10.04  [grid]
   27 v= 0.723126: -31.38  -8.39  -7.65 -13.38  -9.11  34.56  [rand]
   28 v= 0.201363:   4.06  -0.92   3.37   2.90  -0.63  -2.44  [grid]
   29 v= 0.670744:  -9.53  15.69 -15.04 -15.76  14.21  -9.71  [grid]
   30 v= 0.174116:  -4.14  -1.18   6.59  -2.03  -3.78   1.73  [rand]
   31 v= 0.745563:   3.45 -20.79  10.65  25.13 -19.34  16.87  [rand]
   32 v= 0.728977:  -9.92 -20.59   7.29  23.04 -17.44  28.02  [grid]
   33 v= 0.186834:   0.24  -1.36   4.22   1.53  -2.14   4.05  [rand]
   34 v= 0.754194:  19.81  11.74 -23.74  16.40  15.39 -22.55  [grid]
   35 v= 0.520120:  11.94   5.14  -8.48   7.76   8.42  -7.48  [grid]
   36 v= 0.286096:   7.00  -3.53   0.92   4.75  -0.83  -2.27  [rand]
   37 v= 0.281087:   4.21  -3.50   6.83   1.36  -5.60  -4.34  [grid]
   38 v= 0.444286:   4.35   4.47  -5.32   2.23   5.52  -5.00  [grid]
   39 v= 0.547460: -13.57 -10.00   4.33  -2.75 -12.54  11.99  [rand]
   40 v= 0.779870: -15.79  19.09 -24.55 -14.19  19.73  11.68  [grid]
   41 v=-0.088293:  -0.52  -0.22   3.33  -1.08  -1.44  -0.20  [grid]
   42 v=-0.207305:  -0.13  -0.80   3.06   0.41  -1.12  -0.11  [rand]
   43 v= 0.576500: -11.99   6.35  -0.81  -9.56   5.01   1.29  [grid]
   44 v= 0.683884: -21.83   7.15 -16.73  -9.02   8.22  33.06  [grid]
 + - save # 0 for possible use in twobest
 + - skip #42 for twobest: too close to set # 0
 + - skip #41 for twobest: too close to set # 0
 + - skip #20 for twobest: too close to set # 0
 + - skip #18 for twobest: too close to set # 0
 + - skip #30 for twobest: too close to set #41
 + - skip #33 for twobest: too close to set # 0
 + - skip #28 for twobest: too close to set #18
 + - save #13 for possible use in twobest
 + - save #37 for possible use in twobest
 + - skip #36 for twobest: too close to set #28
 + - save #38 for possible use in twobest
 + - save # 9 for possible use in twobest
 + - save #23 for possible use in twobest
 + - save #11 for possible use in twobest
 + - save #24 for possible use in twobest
 + - save #14 for possible use in twobest
 + - save #35 for possible use in twobest
 + - save #26 for possible use in twobest
 + - save #39 for possible use in twobest
 + - skip #12 for twobest: too close to set #26
 + - save #43 for possible use in twobest
 + - save # 3 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - skip #25 for twobest: too close to set # 3
 + - save # 1 for possible use in twobest
 + - save #22 for possible use in twobest
 + - save #16 for possible use in twobest
 + - save #21 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - save #15 for possible use in twobest
 + - save # 4 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 274.344 .. 1054.43; base clip 224.37 .. 856.924
 +  - versus source range 0.0936133 .. 951.121; base range 0 .. 1036.91
 + 32320 total points stored in 315 'RHDD(12.342)' bloks
*[#10876=-0.207902] *[#10882=-0.208239] *[#10883=-0.20939] *[#10885=-0.209771] *[#10892=-0.211761] *[#10893=-0.212962] *[#10900=-0.213199] *[#10910=-0.213267] 
 + - param set #1 has cost=-0.213267
 + -- Parameters = -0.3932 -0.2812 2.8673 0.0608 -1.3511 -0.0657 1.0040 1.0095 0.9942 -0.0006 -0.0006 -0.0019
 + - param set #2 has cost=-0.110335
 + -- Parameters = -1.4028 -0.9435 3.3149 -0.5864 -0.8757 0.4623 1.0006 0.9940 0.9891 -0.0026 -0.0056 0.0110
 + - param set #3 has cost=-0.161854
 + -- Parameters = -0.1029 -0.5265 3.7176 0.1595 -1.8264 -0.9364 0.9964 1.0027 1.0062 0.0004 0.0194 -0.0006
 + - param set #4 has cost=-0.088601
 + -- Parameters = -0.0626 -1.3406 1.5775 0.1829 0.1092 0.0161 1.0102 0.9784 0.9810 -0.0002 0.0026 0.0084
 + - param set #5 has cost=-0.170313
 + -- Parameters = -0.3101 -0.8283 2.7638 0.2538 -0.6586 -0.1702 0.9940 0.9976 1.0079 -0.0022 -0.0051 0.0059
 + - param set #6 has cost=-0.075355
 + -- Parameters = -2.0712 -0.8565 2.3873 -0.4508 -2.5267 1.5431 0.9753 1.0101 0.9671 0.0024 -0.0349 -0.0141
 + - param set #7 has cost=-0.088357
 + -- Parameters = -0.2006 -1.2405 3.8075 0.1330 -1.9758 -0.6516 0.9729 0.9974 1.0118 0.0022 0.0005 -0.0043
 + - param set #8 has cost=-0.151273
 + -- Parameters = -0.4922 -0.3982 2.0160 0.1628 -1.2562 0.7122 1.0113 1.0080 0.9518 -0.0028 -0.0132 0.0039
 + - param set #9 has cost=-0.174839
 + -- Parameters = -0.5598 -0.7271 3.5670 -0.0561 -2.3157 -0.2019 0.9930 1.0059 0.9957 -0.0055 -0.0006 -0.0094
 + - param set #10 has cost=0.430084
 + -- Parameters = 5.6687 3.0050 -7.5290 3.0736 8.6808 -5.2208 1.0021 0.9638 0.9966 -0.0010 0.0055 -0.0014
 + - param set #11 has cost=0.407263
 + -- Parameters = 10.5072 -7.0434 3.6220 4.5723 -5.3973 -6.2598 0.9821 0.9946 0.9837 0.0132 0.0046 -0.0100
 + - param set #12 has cost=0.014019
 + -- Parameters = -0.9226 -0.6750 -0.0094 -0.7752 1.1477 -1.1338 0.9961 1.0039 1.0051 -0.0003 0.0005 0.0018
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0339 
 + --- dist(#3,#1) = 0.0371 
 + --- dist(#4,#1) = 0.09 
 + --- dist(#5,#1) = 0.115 
 + --- dist(#6,#1) = 0.0578 
 + --- dist(#7,#1) = 0.0846 
 + --- dist(#8,#1) = 0.0847 
 + --- dist(#9,#1) = 0.155 
 + --- dist(#10,#1) = 0.036 
 + --- dist(#11,#1) = 0.136 
 + --- dist(#12,#1) = 0.13 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 276.839 .. 1068.98; base clip 224.941 .. 880.335
 +  - versus source range 0 .. 951.154; base range 0 .. 1039.14
 + 31536 total points stored in 309 'RHDD(12.2051)' bloks
 + - param set #1 has cost=-0.196923
 + -- Parameters = -0.3084 -0.4017 2.8544 0.1883 -1.4927 -0.1733 1.0019 1.0093 0.9903 0.0005 0.0017 -0.0009
 + - param set #2 has cost=-0.189849
 + -- Parameters = -0.3588 -0.5056 2.8565 0.0992 -2.0314 -0.0824 1.0053 1.0083 0.9934 -0.0042 -0.0013 -0.0120
 + - param set #3 has cost=-0.168649
 + -- Parameters = -0.2368 -0.6912 2.7564 0.1902 -0.8219 -0.3890 0.9999 0.9973 1.0036 -0.0013 0.0027 0.0058
 + - param set #4 has cost=-0.176140
 + -- Parameters = -0.1824 -0.6683 3.1779 0.1453 -1.6154 -0.6758 0.9966 1.0039 1.0035 0.0012 0.0123 -0.0039
 + - param set #5 has cost=-0.186765
 + -- Parameters = -0.3686 -0.2928 2.6099 0.1382 -1.4390 0.1070 1.0006 1.0098 0.9795 -0.0033 -0.0091 0.0010
 + - param set #6 has cost=-0.180001
 + -- Parameters = -0.4475 -0.5423 2.7167 0.0369 -1.0348 0.0636 1.0014 1.0027 0.9937 -0.0083 -0.0075 0.0044
 + - param set #7 has cost=-0.186048
 + -- Parameters = -0.3747 -0.1645 2.3649 0.1033 -0.7094 -0.2485 1.0031 1.0104 0.9839 -0.0032 0.0028 0.0069
 + - param set #8 has cost=-0.172449
 + -- Parameters = -0.2675 -0.6994 3.0312 0.1969 -1.6370 -0.2151 1.0033 1.0023 1.0075 0.0004 0.0009 -0.0084
 + - param set #9 has cost=-0.174392
 + -- Parameters = -0.5937 -0.2674 2.5117 0.1490 -2.2942 0.5193 1.0035 1.0148 0.9793 0.0013 -0.0198 -0.0180
 + - param set #10 has cost=-0.174538
 + -- Parameters = -0.3249 -0.7058 2.7569 0.1690 -1.1774 -0.2977 0.9983 0.9973 0.9971 0.0063 0.0071 -0.0013
 + - param set #11 has cost=-0.101799
 + -- Parameters = -0.1034 -0.9722 2.5621 0.3733 -0.8509 -0.6167 1.0010 0.9841 0.9841 0.0236 0.0161 0.0078
 + - param set #12 has cost=0.221696
 + -- Parameters = -0.5119 -3.5223 -1.4897 -0.3747 2.7951 -2.5961 0.9950 0.9596 1.0376 -0.0262 0.0129 0.0165
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0503 
 + --- dist(#3,#1) = 0.0486 
 + --- dist(#4,#1) = 0.0352 
 + --- dist(#5,#1) = 0.0418 
 + --- dist(#6,#1) = 0.0475 
 + --- dist(#7,#1) = 0.0327 
 + --- dist(#8,#1) = 0.0969 
 + --- dist(#9,#1) = 0.0469 
 + --- dist(#10,#1) = 0.0364 
 + --- dist(#11,#1) = 0.104 
 + --- dist(#12,#1) = 0.135 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 279.791 .. 1081.17; base clip 225.374 .. 898.009
 +  - versus source range 0 .. 951.524; base range 0 .. 1040.94
 + 32470 total points stored in 332 'RHDD(12.1215)' bloks
 + - param set #1 has cost=-0.126617
 + -- Parameters = -0.3261 -0.3851 2.8516 0.1711 -1.4326 -0.1549 1.0047 1.0093 0.9914 0.0008 0.0017 -0.0015
 + - param set #2 has cost=-0.120756
 + -- Parameters = -0.3606 -0.5156 2.8528 0.0858 -1.9397 -0.0735 1.0054 1.0086 0.9934 0.0002 -0.0013 -0.0120
 + - param set #3 has cost=-0.124681
 + -- Parameters = -0.3741 -0.3282 2.7149 0.1409 -1.3742 0.0462 1.0034 1.0098 0.9845 -0.0008 -0.0030 -0.0000
 + - param set #4 has cost=-0.124093
 + -- Parameters = -0.3475 -0.1940 2.6172 0.1368 -0.8431 -0.1553 1.0055 1.0098 0.9876 0.0012 0.0029 0.0058
 + - param set #5 has cost=-0.118399
 + -- Parameters = -0.4339 -0.4353 2.8290 0.1111 -1.0653 0.1267 1.0024 1.0061 0.9929 -0.0024 -0.0063 0.0046
 + - param set #6 has cost=-0.123869
 + -- Parameters = -0.2341 -0.3975 2.9234 0.1476 -1.4170 -0.5415 1.0002 1.0099 0.9906 0.0006 0.0111 0.0001
 + - param set #7 has cost=-0.120097
 + -- Parameters = -0.2267 -0.4453 2.8770 0.1968 -1.3312 -0.3040 1.0023 1.0073 0.9968 0.0038 0.0079 -0.0008
 + - param set #8 has cost=-0.117162
 + -- Parameters = -0.3707 -0.2655 2.6273 0.2751 -2.3003 0.3053 1.0029 1.0142 0.9803 0.0030 -0.0123 -0.0164
 + - param set #9 has cost=-0.125002
 + -- Parameters = -0.2753 -0.4079 2.7622 0.1444 -1.5427 -0.2832 1.0034 1.0092 0.9893 -0.0038 0.0027 -0.0044
 + - param set #10 has cost=-0.124655
 + -- Parameters = -0.2863 -0.2216 2.7860 0.1727 -0.8695 -0.1510 1.0032 1.0090 0.9882 -0.0008 0.0009 0.0093
 + - param set #11 has cost=-0.105921
 + -- Parameters = -0.0115 -0.2701 2.9199 0.3614 -0.9460 -0.6390 1.0013 1.0069 0.9877 0.0161 0.0167 0.0092
 + - param set #12 has cost=-0.045002
 + -- Parameters = -0.4276 -0.5210 3.3181 0.2711 0.7835 0.0663 1.0051 0.9929 1.0014 -0.0118 -0.0011 0.0405
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0206 
 + --- dist(#3,#1) = 0.0211 
 + --- dist(#4,#1) = 0.0486 
 + --- dist(#5,#1) = 0.0327 
 + --- dist(#6,#1) = 0.0422 
 + --- dist(#7,#1) = 0.0475 
 + --- dist(#8,#1) = 0.0279 
 + --- dist(#9,#1) = 0.0361 
 + --- dist(#10,#1) = 0.0671 
 + --- dist(#11,#1) = 0.0689 
 + --- dist(#12,#1) = 0.189 
 + - Total coarse refinement net CPU time = 0.0 s; 3330 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 282.856 .. 1099.01; base clip 225.374 .. 898.009
 +  - versus source range 0 .. 952.257; base range 0 .. 1042.04
 + 32440 total points stored in 334 'RHDD(12.0364)' bloks
 + - cost(#1)=-0.091086 *
 + -- Parameters = -0.3261 -0.3851 2.8516 0.1711 -1.4326 -0.1549 1.0047 1.0093 0.9914 0.0008 0.0017 -0.0015
 + - cost(#2)=-0.090531  
 + -- Parameters = -0.2753 -0.4079 2.7622 0.1444 -1.5427 -0.2832 1.0034 1.0092 0.9893 -0.0038 0.0027 -0.0044
 + - cost(#3)=-0.089426  
 + -- Parameters = -0.3741 -0.3282 2.7149 0.1409 -1.3742 0.0462 1.0034 1.0098 0.9845 -0.0008 -0.0030 -0.0000
 + - cost(#4)=-0.088969  
 + -- Parameters = -0.2863 -0.2216 2.7860 0.1727 -0.8695 -0.1510 1.0032 1.0090 0.9882 -0.0008 0.0009 0.0093
 + - cost(#5)=-0.089001  
 + -- Parameters = -0.3475 -0.1940 2.6172 0.1368 -0.8431 -0.1553 1.0055 1.0098 0.9876 0.0012 0.0029 0.0058
 + - cost(#6)=-0.088790  
 + -- Parameters = -0.2341 -0.3975 2.9234 0.1476 -1.4170 -0.5415 1.0002 1.0099 0.9906 0.0006 0.0111 0.0001
 + - cost(#7)=-0.085772  
 + -- Parameters = -0.3606 -0.5156 2.8528 0.0858 -1.9397 -0.0735 1.0054 1.0086 0.9934 0.0002 -0.0013 -0.0120
 + - cost(#8)=-0.085528  
 + -- Parameters = -0.2267 -0.4453 2.8770 0.1968 -1.3312 -0.3040 1.0023 1.0073 0.9968 0.0038 0.0079 -0.0008
 + - cost(#9)=-0.083211  
 + -- Parameters = -0.4339 -0.4353 2.8290 0.1111 -1.0653 0.1267 1.0024 1.0061 0.9929 -0.0024 -0.0063 0.0046
 + - cost(#10)=-0.081438  
 + -- Parameters = -0.3707 -0.2655 2.6273 0.2751 -2.3003 0.3053 1.0029 1.0142 0.9803 0.0030 -0.0123 -0.0164
 + - cost(#11)=-0.076529  
 + -- Parameters = -0.0115 -0.2701 2.9199 0.3614 -0.9460 -0.6390 1.0013 1.0069 0.9877 0.0161 0.0167 0.0092
 + - cost(#12)=-0.011838  
 + -- Parameters = -0.4276 -0.5210 3.3181 0.2711 0.7835 0.0663 1.0051 0.9929 1.0014 -0.0118 -0.0011 0.0405
 + - cost(#13)=0.591669  
 + -- Parameters = -1.3024 5.0504 -2.8900 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.091958 *
 + -- Parameters = -0.2885 -0.3883 2.8311 0.1976 -1.4032 -0.1479 1.0045 1.0084 0.9911 0.0008 0.0019 -0.0014
 + - cost(#2)=-0.092171 *
 + -- Parameters = -0.2518 -0.4087 2.7783 0.1673 -1.5450 -0.2465 1.0036 1.0089 0.9895 0.0001 0.0027 -0.0042
 + - cost(#3)=-0.090174  
 + -- Parameters = -0.3317 -0.2920 2.6881 0.1106 -1.3148 0.0575 1.0033 1.0096 0.9848 -0.0013 -0.0022 -0.0001
 + - cost(#4)=-0.090212  
 + -- Parameters = -0.2406 -0.2173 2.7653 0.1899 -0.8811 -0.1379 1.0033 1.0089 0.9885 0.0025 0.0010 0.0087
 + - cost(#5)=-0.091816  
 + -- Parameters = -0.2684 -0.1638 2.7680 0.1553 -1.0574 -0.2084 1.0040 1.0108 0.9856 0.0015 0.0032 0.0058
 + - cost(#6)=-0.090927  
 + -- Parameters = -0.1659 -0.3620 2.8607 0.1831 -1.3846 -0.5070 1.0000 1.0088 0.9904 0.0005 0.0105 -0.0009
 + - cost(#7)=-0.087222  
 + -- Parameters = -0.3401 -0.5041 2.7925 0.1595 -1.9276 -0.0960 1.0051 1.0091 0.9929 0.0009 -0.0011 -0.0117
 + - cost(#8)=-0.091970  
 + -- Parameters = -0.2408 -0.3773 2.8318 0.2004 -1.3394 -0.2956 1.0028 1.0082 0.9900 0.0044 0.0070 -0.0006
 + - cost(#9)=-0.090195  
 + -- Parameters = -0.2555 -0.3866 2.8118 0.1471 -1.1111 -0.0116 1.0021 1.0068 0.9902 0.0019 -0.0013 0.0044
 + - cost(#10)=-0.086594  
 + -- Parameters = -0.2091 -0.3254 2.6580 0.3355 -2.1842 0.0115 1.0027 1.0127 0.9841 0.0039 -0.0055 -0.0162
 + - cost(#11)=-0.089969  
 + -- Parameters = -0.0884 -0.2264 2.8750 0.2907 -0.9945 -0.4875 1.0007 1.0093 0.9871 0.0056 0.0104 0.0076
 + - cost(#12)=-0.061552  
 + -- Parameters = -0.3618 -0.2214 2.8407 0.1812 0.1386 0.2383 1.0011 1.0011 0.9815 -0.0027 -0.0084 0.0299
 + - cost(#13)=-0.084866  
 + -- Parameters = -0.2430 -0.1988 2.9270 0.2957 -0.7597 -0.0951 1.0020 1.0084 0.9917 0.0054 -0.0035 0.0123
 + - case #2 is now the best
 + - Initial  cost = -0.092171
 + - Initial fine Parameters = -0.2518 -0.4087 2.7783 0.1673 -1.5450 -0.2465 1.0036 1.0089 0.9895 0.0001 0.0027 -0.0042
 + - Finalish cost = -0.092594 ; 164 funcs
 + - ini Finalish Parameters = -0.2547 -0.4059 2.7775 0.1800 -1.5372 -0.2517 1.0036 1.0089 0.9896 0.0008 0.0026 -0.0042
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 283.092 .. 1098.82; base clip 225.374 .. 898.009
 +  - versus source range 0 .. 952.257; base range 0 .. 1042.04
*[#15667=-0.617809] *[#15719=-0.618242] *[#15725=-0.618454] *[#15727=-0.618546] *[#15732=-0.619147] *[#15738=-0.619669] *[#15749=-0.619921] *[#15750=-0.620026] *[#15758=-0.620347] *[#15760=-0.620423] *[#15770=-0.620867] *[#15773=-0.62098] *[#15775=-0.621019] *[#15785=-0.621039] *[#15787=-0.621624] *[#15815=-0.621682] *[#15816=-0.621764] *[#15817=-0.621844] *[#15820=-0.6219] *[#15821=-0.621944] *[#15824=-0.621968] *[#15825=-0.622] *[#15828=-0.622017] *[#15830=-0.622077] *[#15835=-0.622104] *[#15836=-0.622108] *[#15837=-0.622119] *[#15838=-0.622131] *[#15840=-0.622133] *[#15841=-0.622175] *[#15842=-0.622187] *[#15843=-0.622192] *[#15844=-0.62221] *[#15845=-0.622218] *[#15846=-0.62222] *[#15848=-0.622235] *[#15849=-0.622242] *[#15850=-0.622252] *[#15855=-0.622258] *[#15856=-0.622261] *[#15857=-0.622262] *[#15859=-0.622269] *[#15864=-0.622298] *[#15865=-0.622305] *[#15866=-0.622329] *[#15867=-0.622338] *[#15868=-0.622347] *[#15873=-0.622357] *[#15878=-0.622367] *[#15881=-0.622387] *[#15882=-0.622409] *[#15886=-0.622414] *[#15889=-0.622417] *[#15892=-0.622434] *[#15893=-0.622444] *[#15896=-0.622455] *[#15901=-0.622459] *[#15904=-0.622467] *[#15905=-0.622477] *[#15908=-0.62248] *[#15910=-0.62249] *[#15915=-0.6225] *[#15916=-0.622508] *[#15917=-0.622525] *[#15918=-0.622539] *[#15919=-0.622558] *[#15920=-0.622562] *[#15921=-0.622571] *[#15924=-0.622572] *[#15926=-0.622589] *[#15927=-0.62259] *[#15929=-0.622607] *[#15932=-0.622608] *[#15934=-0.622622] *[#15937=-0.622627] *[#15938=-0.622628] *[#15940=-0.622642] *[#15941=-0.62266] *[#15942=-0.622681] *[#15943=-0.622702] *[#15944=-0.622711] *[#15945=-0.622726] *[#15946=-0.622742] *[#15947=-0.622749] *[#15948=-0.622754] *[#15951=-0.622767] *[#15962=-0.622772] *[#15965=-0.622773] *[#15971=-0.622775] *[#15974=-0.622776] *[#16013=-0.622777] *[#16015=-0.622778] *[#16016=-0.62278] *[#16017=-0.62278] *[#16023=-0.622781] *[#16024=-0.622781] *[#16025=-0.622781] *[#16027=-0.622782] *[#16028=-0.622782] *[#16029=-0.622783] *[#16030=-0.622783] *[#16032=-0.622783] *[#16035=-0.622783] *[#16047=-0.622783] *[#16050=-0.622784] *[#16053=-0.622784] *[#16056=-0.622785] *[#16063=-0.622785] *[#16066=-0.622785] *[#16071=-0.622786] *[#16076=-0.622786] *[#16077=-0.622787] *[#16095=-0.622787] *[#16100=-0.622787] *[#16101=-0.622788] *[#16102=-0.622788] *[#16103=-0.622788] *[#16104=-0.622789] *[#16113=-0.622789] *[#16114=-0.62279] *[#16115=-0.62279] *[#16116=-0.62279] *[#16121=-0.622791] *[#16127=-0.622791] *[#16130=-0.622791] *[#16131=-0.622792] *[#16136=-0.622792] *[#16138=-0.622792] *[#16139=-0.622792] *[#16140=-0.622793] *[#16145=-0.622793] *[#16147=-0.622793] *[#16153=-0.622793] *[#16169=-0.622794] *[#16174=-0.622794] *[#16181=-0.622794] *[#16182=-0.622794] *[#16183=-0.622795] *[#16194=-0.622795] *[#16195=-0.622795] *[#16200=-0.622795] *[#16201=-0.622795] *[#16216=-0.622796] *[#16223=-0.622796] *[#16228=-0.622796] *[#16232=-0.622796] *[#16235=-0.622796] *[#16236=-0.622796] *[#16237=-0.622797] *[#16246=-0.622797] *[#16247=-0.622797] *[#16251=-0.622797] *[#16256=-0.622798] *[#16259=-0.622798] *[#16261=-0.622798] *[#16266=-0.622799] *[#16269=-0.622799] *[#16276=-0.622799] *[#16280=-0.622799] *[#16281=-0.6228] *[#16282=-0.6228] *[#16285=-0.622801] *[#16292=-0.622801] *[#16293=-0.622801] *[#16294=-0.622802] *[#16297=-0.622802] *[#16298=-0.622802] *[#16301=-0.622803] *[#16306=-0.622803] *[#16308=-0.622803] *[#16315=-0.622803] *[#16323=-0.622803] *[#16324=-0.622804] *[#16333=-0.622804] *[#16341=-0.622804] *[#16359=-0.622804] 
 + - Final    cost = -0.622804 ; 735 funcs
 + Final fine fit Parameters:
       x-shift= -0.1719   y-shift= -0.0897   z-shift=  2.9829  ...  enorm=  2.9892 mm
       z-angle=  0.2726   x-angle= -1.3531   y-angle= -0.1742  ...  total=  1.3917 deg
       x-scale=  1.0066   y-scale=  1.0147   z-scale=  0.9946  ...  vol3D=  1.0158 = base smaller than source
     y/x-shear=  0.0032 z/x-shear=  0.0029 z/y-shear=  0.0007
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.1719 -0.0897 2.9829 0.2726 -1.3531 -0.1742 1.0066 1.0147 0.9946 0.0032 0.0029 0.0007
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S14_unflipped_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S14_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 45.8
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_anatSS.sub-S14_lr_al_junk -overwrite ./anatSS.sub-S14_unflipped_ob+orig
++ processing ./anatSS.sub-S14_unflipped_ob+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_ts_ns_wt+orig -source ./__tt_anatSS.sub-S14_lr_al_junk+orig -prefix ./anatSS.sub-S14_flip_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S14_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 5.175778 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 5.175778 degrees from plumb.
++ Source dataset: ./__tt_anatSS.sub-S14_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1385544 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 36692 voxels [16.1%] in weight mask
++ Number of points for matching = 36692
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.434 36.879 23.784 (index)
 + source center of mass = 136.401 151.830 172.552 (index)
 + source-target CM = -1.500 5.050 -2.890 (xyz)
 + estimated center of mass shifts = -1.500 5.050 -2.890
++ shift param auto-range: -62.2..59.2 -65.2..75.3 -59.5..53.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.499664 .. 8.500336  center = -1.499664
 + Range param#2 [y-shift] = -4.949577 .. 15.050423  center = 5.050423
 + Range param#3 [z-shift] = -12.889977 .. 7.110023  center = -2.889977
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.499664 .. 38.500336  center = -1.499664
 + Range param#2 [y-shift] = -34.949577 .. 45.050423  center = 5.050423
 + Range param#3 [z-shift] = -42.889977 .. 37.110023  center = -2.889977
 + 12 free parameters
++ Normalized convergence radius = 0.0000093
++ Final parameter search ranges:
 +       x-shift =  -41.500 ..   38.500
 +       y-shift =  -34.950 ..   45.050
 +       z-shift =  -42.890 ..   37.110
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1385544 [out of 21621888] voxels
 + base mask has 49294 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - copying weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 270.292 .. 1039.31; base clip 223.932 .. 837.198
 +  - versus source range 0.936654 .. 950.963; base range 0 .. 1035.93
 + 32181 total points stored in 294 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o++.o--++-+.o++-+-$-+ + - best 45 costs found:
    0 v= 0.569191:  -1.50   5.05  -2.89   0.00   0.00   0.00  [grid]
    1 v= 0.722852: -28.17  -8.28  10.44 -15.00 -15.00  15.00  [grid]
    2 v= 0.737888: -10.14 -15.38  14.58 -25.20 -18.50 -13.54  [rand]
    3 v= 0.741657: -14.83  -8.28  10.44  15.00 -15.00  30.00  [grid]
    4 v= 0.754978:  12.71  -4.40   1.95 -15.99 -13.53 -29.93  [rand]
    5 v= 0.792794:  11.83  -8.28  10.44 -15.00 -15.00 -30.00  [grid]
    6 v= 0.796120: -35.83 -11.53 -11.49 -16.34  -8.64  40.54  [rand]
    7 v= 0.796134: -14.83  -8.28  10.44 -30.00 -15.00 -15.00  [grid]
    8 v= 0.811443:   7.14 -15.38  14.58  25.20 -18.50  13.54  [rand]
    9 v= 0.850051:  14.48 -14.44  -8.61  20.53  -3.14 -10.08  [rand]
   10 v= 0.854567: -15.70  -4.40   1.95  15.99 -13.53  29.93  [rand]
   11 v= 0.855330:  30.98  -9.64 -14.70  11.16  -9.40 -34.39  [rand]
   12 v= 0.857084: -28.17 -21.62  10.44 -15.00 -30.00  15.00  [grid]
   13 v= 0.860155:  25.17  -8.28  10.44  15.00 -15.00 -15.00  [grid]
   14 v= 0.862618: -14.83  18.38 -16.22 -15.00  15.00  15.00  [grid]
   15 v= 0.873329: -19.83 -21.09   3.16  -6.51 -20.18   7.56  [rand]
   16 v= 0.889065: -14.83  18.38 -16.22 -15.00  15.00 -15.00  [grid]
   17 v= 0.896604: -24.35 -18.52   7.53   5.91 -29.74  29.45  [rand]
   18 v= 0.897454:  16.83 -21.09   3.16   6.51 -20.18  -7.56  [rand]
   19 v= 0.906496: -33.98  -9.64 -14.70 -11.16  -9.40  34.39  [rand]
   20 v= 0.911159:  14.48 -14.44   2.83  20.53  -3.14 -10.08  [rand]
   21 v= 0.913541:  11.83 -21.62  10.44 -15.00 -30.00 -30.00  [grid]
   22 v= 0.916271:  32.83 -11.53 -11.49  16.34  -8.64 -40.54  [rand]
   23 v= 0.923965:  21.35 -18.52   7.53  -5.91 -29.74 -29.45  [rand]
   24 v= 0.932175: -14.83 -21.62  10.44  15.00 -30.00  30.00  [grid]
   25 v= 0.938018: -14.83  -8.28  10.44 -15.00 -15.00  15.00  [grid]
   26 v= 0.941882:  11.83 -21.62  10.44  30.00 -15.00  15.00  [grid]
   27 v= 0.956565: -14.83 -21.62  10.44  15.00 -15.00  30.00  [grid]
   28 v= 0.963306: -28.17  18.38 -16.22 -15.00  15.00  15.00  [grid]
   29 v= 0.967183: -14.83 -21.62  10.44 -30.00 -15.00 -15.00  [grid]
   30 v= 0.969779: -17.48 -14.44   2.83 -20.53  -3.14  10.08  [rand]
   31 v= 0.972822:  11.83  18.38 -16.22  15.00  15.00 -15.00  [grid]
   32 v= 0.977580: -14.83 -21.62  10.44  30.00 -15.00  30.00  [grid]
   33 v= 0.995839:  25.17 -21.62  10.44  15.00 -30.00 -15.00  [grid]
   34 v= 0.996277:  14.48 -14.44  -8.61  20.53   3.14 -10.08  [rand]
   35 v= 0.997310:  11.83  -8.28  10.44  30.00 -15.00  15.00  [grid]
   36 v= 1.002017: -17.48 -14.44  -8.61 -20.53  -3.14  10.08  [rand]
   37 v= 1.009057: -14.83  18.38 -29.56 -15.00  30.00 -15.00  [grid]
   38 v= 1.013800: -14.83  18.38 -29.56 -15.00  30.00  15.00  [grid]
   39 v= 1.016891: -28.17  18.38 -29.56 -15.00  15.00  30.00  [grid]
   40 v= 1.022147: -24.35 -18.52   7.53  -5.91 -29.74  29.45  [rand]
   41 v= 1.028060: -14.83  -8.28  10.44  15.00 -15.00  15.00  [grid]
   42 v= 1.032260:  11.83  -8.28  10.44  15.00 -15.00 -15.00  [grid]
   43 v= 1.038828:   8.83 -23.76  12.12  30.67 -17.79  20.52  [rand]
   44 v= 1.046100:  11.83  -8.28  10.44 -15.00 -15.00 -15.00  [grid]
 + - A little optimization:*[#8004=0.465993] *[#8006=0.428948] *[#8015=0.424338] *[#8018=0.39582] *[#8019=0.376245] *[#8022=0.367394] *[#8023=0.363462] *[#8024=0.35996] *[#8025=0.351908] *[#8030=0.337644] *[#8031=0.320554] *[#8038=0.317634] *[#8042=0.31507] *[#8043=0.311978] .........*[#8512=0.306548] *[#8514=0.306016] *[#8517=0.300679] *[#8518=0.296208] *[#8519=0.293339] *[#8520=0.292691] *[#8521=0.288908] *[#8522=0.288594] *[#8523=0.284765] *[#8525=0.276007] ....................................
 + - costs of the above after a little optimization:
    0 v= 0.311978:  -1.34   1.95  -1.37  -0.57   3.19  -1.41  [grid]
    1 v= 0.587982: -20.03  -8.71   2.67 -11.88 -11.98  14.13  [grid]
    2 v= 0.658581:  -9.00 -12.19   9.90 -21.30 -15.93 -12.03  [rand]
    3 v= 0.623857: -12.96  -8.66   4.61   9.60 -12.47  24.27  [grid]
    4 v= 0.620714:  10.00  -6.94  -0.70  -8.73  -9.27 -25.57  [rand]
    5 v= 0.616261:   8.80  -8.50   2.42  -8.67 -11.16 -23.37  [grid]
    6 v= 0.732888: -35.58  -6.27 -11.89 -17.24  -7.50  39.37  [rand]
    7 v= 0.647235: -11.52 -10.85   6.56 -23.17 -11.02  -8.99  [grid]
    8 v= 0.353458:   3.66  -6.48   4.52   1.36  -4.98  -4.07  [rand]
  * 9 v= 0.276007:  -0.77  -3.84   4.42  -0.56  -3.52  -1.56  [rand]
   10 v= 0.632460: -14.92  -8.05   2.54  11.01  -9.56  27.86  [rand]
   11 v= 0.620189:  17.54  -3.02  -8.41   7.75  -0.33 -25.78  [rand]
   12 v= 0.615806: -17.22 -18.53   3.59  -8.90 -19.25  12.34  [grid]
   13 v= 0.636632:  20.36 -10.52   2.58  16.81 -11.28 -12.82  [grid]
   14 v= 0.600232: -12.68  12.26 -12.72  -6.96  12.96   9.79  [grid]
   15 v= 0.599922: -14.37 -18.64   4.85  -7.87 -20.00  10.01  [rand]
   16 v= 0.484563:  -9.83   7.07  -6.77  -6.59   8.49   0.23  [grid]
   17 v= 0.621691: -20.81 -11.10   1.66   1.49 -14.60  24.36  [rand]
   18 v= 0.528827:   3.12  -7.17   7.72   6.78 -11.02  -2.35  [rand]
   19 v= 0.689030: -31.37  -7.07  -5.66  -9.32 -11.63  33.94  [rand]
   20 v= 0.428266:   5.26  -6.67   7.98   0.82  -7.41  -7.43  [rand]
   21 v= 0.324824:   3.55  -2.66   4.47   1.86  -2.76  -3.23  [grid]
   22 v= 0.707299:  24.83  -8.32 -11.45  12.95  -5.61 -32.77  [rand]
   23 v= 0.630920:  14.90 -12.09   0.67   2.63 -14.08 -19.14  [rand]
   24 v= 0.638240: -11.24 -10.65   5.63  13.06 -14.35  24.50  [grid]
   25 v= 0.339226:  -4.63  -5.50   6.72  -2.49  -5.65   0.17  [grid]
   26 v= 0.713584:   3.79 -14.24   7.83  23.23 -14.22  12.95  [grid]
   27 v= 0.632649: -15.18 -12.81   3.66  10.04 -15.44  25.64  [grid]
   28 v= 0.673887: -22.95  10.92 -16.14 -18.95  11.35  11.48  [grid]
   29 v= 0.634837: -12.72  -4.75   7.03 -23.82  -7.42 -10.33  [grid]
   30 v= 0.314827:  -3.84  -5.05   4.65  -2.51  -4.05  -0.58  [rand]
   31 v= 0.541426:   7.78   4.20 -10.52   2.38   7.58 -16.16  [grid]
   32 v= 0.513557:  -2.26 -11.46   8.90  -1.32 -14.74  -1.45  [grid]
   33 v= 0.607548:  13.36 -14.69   5.09   6.34 -16.29 -12.01  [grid]
   34 v= 0.346682:   4.78  -2.50   2.88   3.80  -1.92  -3.16  [rand]
   35 v= 0.684381:   9.30  -8.60   6.83  22.79  -8.67   8.60  [grid]
   36 v= 0.546975: -16.15  -6.54   4.19  -4.33  -8.98  12.31  [rand]
   37 v= 0.886787: -10.43  17.89 -27.98 -14.80  27.77 -16.08  [grid]
   38 v= 0.486235:   2.56   6.59 -10.44   1.30  10.50  -7.71  [grid]
   39 v= 0.670966: -25.23   8.35 -16.12 -14.85   7.75  24.35  [grid]
   40 v= 0.583469: -13.93 -10.61   5.32   2.57 -12.13  16.40  [rand]
   41 v= 0.528387:  -9.31 -10.72   5.47  -0.57 -14.02   7.92  [grid]
   42 v= 0.294223:   1.38  -1.37   3.73   1.67  -2.60  -1.42  [grid]
   43 v= 0.817252:   4.74 -22.20  10.80  29.43 -18.88  16.50  [rand]
   44 v= 0.390432:   6.02  -4.66   4.37   2.05  -4.72  -6.29  [grid]
 + - save # 9 for possible use in twobest
 + - skip #42 for twobest: too close to set # 9
 + - save # 0 for possible use in twobest
 + - skip #30 for twobest: too close to set # 9
 + - skip #21 for twobest: too close to set #42
 + - skip #25 for twobest: too close to set # 9
 + - skip #34 for twobest: too close to set #42
 + - skip # 8 for twobest: too close to set #21
 + - skip #44 for twobest: too close to set #21
 + - skip #20 for twobest: too close to set # 8
 + - save #16 for possible use in twobest
 + - save #38 for possible use in twobest
 + - save #32 for possible use in twobest
 + - save #41 for possible use in twobest
 + - save #18 for possible use in twobest
 + - save #31 for possible use in twobest
 + - save #36 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - save #15 for possible use in twobest
 + - save #14 for possible use in twobest
 + - save #33 for possible use in twobest
 + - skip #12 for twobest: too close to set #15
 + - save # 5 for possible use in twobest
 + - save #11 for possible use in twobest
 + - skip # 4 for twobest: too close to set # 5
 + - save #17 for possible use in twobest
 + - save # 3 for possible use in twobest
 + - save #23 for possible use in twobest
 + - skip #10 for twobest: too close to set # 3
 + - save #27 for possible use in twobest
 + - save #29 for possible use in twobest
 + - save #13 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 273.293 .. 1054.17; base clip 224.37 .. 856.924
 +  - versus source range 0.0936133 .. 951.121; base range 0 .. 1036.91
 + 32320 total points stored in 315 'RHDD(12.342)' bloks
 + - param set #1 has cost=0.289004
 + -- Parameters = -0.9579 -3.1255 3.4375 -0.0887 -2.6231 -0.7937 0.9921 1.0028 0.9923 -0.0017 0.0075 -0.0023
 + - param set #2 has cost=0.307714
 + -- Parameters = -1.5815 1.6439 -0.1544 -0.4969 2.6880 -0.6977 0.9956 0.9893 0.9968 -0.0024 0.0007 0.0029
 + - param set #3 has cost=0.399126
 + -- Parameters = -5.3142 3.5387 -3.2547 -4.3235 6.0648 -1.8504 0.9852 0.9890 0.9892 -0.0022 0.0114 0.0112
 + - param set #4 has cost=0.451732
 + -- Parameters = 1.9796 6.2199 -8.4931 1.1324 10.7072 -5.7111 0.9863 0.9847 0.9970 -0.0196 -0.0275 0.0156
 + - param set #5 has cost=0.358706
 + -- Parameters = 1.7369 -8.0846 6.4970 0.3825 -6.9095 -3.4469 0.9771 0.9955 0.9884 0.0088 -0.0018 -0.0028
 + - param set #6 has cost=0.428273
 + -- Parameters = -7.9588 -10.2864 5.0680 -3.5587 -8.1743 2.4729 0.9846 1.0061 0.9562 0.0098 0.0241 -0.0080
 + - param set #7 has cost=0.337087
 + -- Parameters = 0.5303 -5.9984 5.0751 0.3160 -4.6162 -1.5369 0.9898 0.9865 0.9763 -0.0023 0.0038 -0.0007
 + - param set #8 has cost=0.448335
 + -- Parameters = 6.3319 1.6783 -6.3282 3.7061 6.3819 -6.2024 0.9996 0.9925 0.9849 -0.0051 0.0021 0.0162
 + - param set #9 has cost=0.431110
 + -- Parameters = -12.0331 -4.3043 2.5453 -3.3650 -4.9611 7.1604 1.0079 0.9994 0.9434 -0.0132 -0.0265 -0.0202
 + - param set #10 has cost=0.436035
 + -- Parameters = -10.2680 -5.9400 5.6071 -3.6657 -6.7091 5.0840 0.9749 1.0187 0.9794 0.0185 0.0125 -0.0155
 + - param set #11 has cost=0.552227
 + -- Parameters = -17.6535 -9.5537 2.4978 -8.7014 -12.7976 12.9882 1.0141 0.9860 0.9728 0.0039 0.0019 0.0056
 + - param set #12 has cost=0.289084
 + -- Parameters = -0.3109 0.0226 1.8783 0.3011 -0.1272 -1.3211 0.9967 0.9996 0.9926 0.0004 0.0050 -0.0047
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0394 
 + --- dist(#3,#1) = 0.0596 
 + --- dist(#4,#1) = 0.0443 
 + --- dist(#5,#1) = 0.062 
 + --- dist(#6,#1) = 0.0965 
 + --- dist(#7,#1) = 0.0983 
 + --- dist(#8,#1) = 0.153 
 + --- dist(#9,#1) = 0.116 
 + --- dist(#10,#1) = 0.122 
 + --- dist(#11,#1) = 0.157 
 + --- dist(#12,#1) = 0.209 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 277.432 .. 1069.54; base clip 224.941 .. 880.335
 +  - versus source range 0 .. 951.154; base range 0 .. 1039.14
 + 31536 total points stored in 309 'RHDD(12.2051)' bloks
 + - param set #1 has cost=0.296246
 + -- Parameters = -0.6686 -0.8425 3.2070 0.1561 -2.2378 -1.1775 0.9898 1.0215 0.9793 -0.0165 0.0157 -0.0008
 + - param set #2 has cost=0.316248
 + -- Parameters = -0.3669 -0.0322 1.8843 0.3561 -0.0794 -1.2975 0.9966 0.9995 0.9922 0.0006 0.0050 -0.0045
 + - param set #3 has cost=0.319599
 + -- Parameters = -1.3594 1.4542 0.4805 -0.3807 2.4711 -0.6606 1.0042 0.9936 0.9834 -0.0159 -0.0069 0.0163
 + - param set #4 has cost=0.305380
 + -- Parameters = -0.4723 -2.4357 3.7830 0.8935 -3.8459 -0.3385 0.9950 1.0162 0.9827 -0.0071 0.0045 -0.0176
 + - param set #5 has cost=0.340790
 + -- Parameters = 0.1120 -3.7891 5.6394 0.4913 -6.1411 -1.6836 0.9261 1.0399 1.0150 0.0009 -0.0128 -0.0306
 + - param set #6 has cost=0.348090
 + -- Parameters = -2.3767 1.8947 -0.4571 -1.4717 3.1515 -1.2124 1.0125 0.9929 0.9885 -0.0189 0.0067 0.0097
 + - param set #7 has cost=0.327383
 + -- Parameters = -2.5729 -2.4787 2.6087 -0.4897 -3.7922 0.7609 0.9715 1.0196 0.9540 -0.0015 0.0331 -0.0146
 + - param set #8 has cost=0.369600
 + -- Parameters = -5.6033 -2.2739 2.0309 -1.4935 -3.9107 3.3572 1.0312 1.0215 0.9575 -0.0229 -0.0409 -0.0247
 + - param set #9 has cost=0.409101
 + -- Parameters = -4.7572 -6.3737 5.4331 -2.1886 -6.8495 1.9653 0.9749 1.0244 1.0024 0.0351 0.0051 -0.0188
 + - param set #10 has cost=0.383237
 + -- Parameters = -0.4394 0.3762 -4.1500 -0.1020 4.7308 -1.8224 1.0188 0.9540 0.9497 -0.0514 0.0008 -0.0116
 + - param set #11 has cost=0.406930
 + -- Parameters = 0.1578 5.1231 -0.3174 -0.4146 4.6811 -2.1516 0.9798 1.0250 0.9986 -0.0147 -0.0154 0.0335
 + - param set #12 has cost=0.501299
 + -- Parameters = -14.0867 -13.3369 4.3266 -2.9436 -9.8497 10.0443 1.0005 0.9925 0.9394 0.0083 -0.0057 0.0025
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0755 
 + --- dist(#3,#1) = 0.0769 
 + --- dist(#4,#1) = 0.102 
 + --- dist(#5,#1) = 0.0781 
 + --- dist(#6,#1) = 0.174 
 + --- dist(#7,#1) = 0.0779 
 + --- dist(#8,#1) = 0.255 
 + --- dist(#9,#1) = 0.184 
 + --- dist(#10,#1) = 0.154 
 + --- dist(#11,#1) = 0.232 
 + --- dist(#12,#1) = 0.168 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + - using 36692 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 279.674 .. 1081.24; base clip 225.374 .. 898.009
 +  - versus source range 0 .. 951.524; base range 0 .. 1040.94
 + 32470 total points stored in 332 'RHDD(12.1215)' bloks
 + - param set #1 has cost=0.326573
 + -- Parameters = -0.5710 -0.8737 3.1544 0.0455 -2.4715 -1.3459 0.9894 1.0259 0.9719 -0.0176 0.0144 -0.0029
 + - param set #2 has cost=0.324095
 + -- Parameters = -0.4480 -1.7920 3.2363 0.4646 -3.7935 -0.9069 0.9867 1.0270 0.9792 -0.0127 -0.0005 -0.0249
 + - param set #3 has cost=0.344706
 + -- Parameters = -0.3092 -0.1707 1.7578 0.5115 -0.2007 -1.1474 0.9933 1.0031 0.9902 -0.0055 0.0054 -0.0056
 + - param set #4 has cost=0.346645
 + -- Parameters = -1.1436 1.3582 0.7283 -0.2186 2.3188 -0.7154 1.0014 0.9974 0.9797 -0.0205 -0.0083 0.0188
 + - param set #5 has cost=0.327865
 + -- Parameters = -1.1742 -1.5390 2.4954 -0.5416 -4.0018 -1.1996 0.9825 1.0418 0.9493 -0.0074 0.0280 -0.0171
 + - param set #6 has cost=0.333901
 + -- Parameters = -0.6879 -2.9403 4.4129 -0.0639 -6.0170 -1.0169 0.9631 1.0391 0.9838 -0.0063 0.0072 -0.0400
 + - param set #7 has cost=0.350711
 + -- Parameters = -1.9242 1.8760 0.6010 -0.9434 2.5180 -0.8175 0.9955 1.0027 0.9792 -0.0356 -0.0080 0.0200
 + - param set #8 has cost=0.333203
 + -- Parameters = -3.2332 -2.2125 1.9816 -1.0098 -4.9179 1.9618 0.9962 1.0067 0.9650 -0.0636 -0.0635 -0.0755
 + - param set #9 has cost=0.386992
 + -- Parameters = -0.1870 0.1744 -3.0685 -0.0782 4.5091 -2.6096 1.0085 0.9551 0.9291 -0.0303 -0.0036 0.0141
 + - param set #10 has cost=0.362028
 + -- Parameters = -1.7851 3.1618 1.4009 -0.5660 3.2699 0.0295 0.9704 1.0193 0.9932 -0.0192 -0.0142 0.0416
 + - param set #11 has cost=0.364539
 + -- Parameters = -1.8590 -4.7957 5.2233 0.0674 -6.3359 1.0653 0.9743 1.0194 0.9888 0.0118 -0.0102 -0.0360
 + - param set #12 has cost=0.477219
 + -- Parameters = -10.0705 -8.2710 5.1970 -2.3482 -8.2786 7.1896 1.0047 1.0071 0.9293 0.0830 -0.0799 -0.0300
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.099 
 + --- dist(#3,#1) = 0.128 
 + --- dist(#4,#1) = 0.284 
 + --- dist(#5,#1) = 0.0678 
 + --- dist(#6,#1) = 0.0869 
 + --- dist(#7,#1) = 0.197 
 + --- dist(#8,#1) = 0.202 
 + --- dist(#9,#1) = 0.299 
 + --- dist(#10,#1) = 0.11 
 + --- dist(#11,#1) = 0.196 
 + --- dist(#12,#1) = 0.431 
 + - Total coarse refinement net CPU time = 0.0 s; 3388 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=17.8249 usiz=530.062
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 282.974 .. 1100.48; base clip 225.374 .. 898.009
 +  - versus source range 0 .. 952.257; base range 0 .. 1042.04
 + 32440 total points stored in 334 'RHDD(12.0364)' bloks
 + - cost(#1)=0.343784 *
 + -- Parameters = -0.4480 -1.7920 3.2363 0.4646 -3.7935 -0.9069 0.9867 1.0270 0.9792 -0.0127 -0.0005 -0.0249
 + - cost(#2)=0.346693  
 + -- Parameters = -0.5710 -0.8737 3.1544 0.0455 -2.4715 -1.3459 0.9894 1.0259 0.9719 -0.0176 0.0144 -0.0029
 + - cost(#3)=0.349082  
 + -- Parameters = -1.1742 -1.5390 2.4954 -0.5416 -4.0018 -1.1996 0.9825 1.0418 0.9493 -0.0074 0.0280 -0.0171
 + - cost(#4)=0.349992  
 + -- Parameters = -3.2332 -2.2125 1.9816 -1.0098 -4.9179 1.9618 0.9962 1.0067 0.9650 -0.0636 -0.0635 -0.0755
 + - cost(#5)=0.352565  
 + -- Parameters = -0.6879 -2.9403 4.4129 -0.0639 -6.0170 -1.0169 0.9631 1.0391 0.9838 -0.0063 0.0072 -0.0400
 + - cost(#6)=0.363167  
 + -- Parameters = -0.3092 -0.1707 1.7578 0.5115 -0.2007 -1.1474 0.9933 1.0031 0.9902 -0.0055 0.0054 -0.0056
 + - cost(#7)=0.363917  
 + -- Parameters = -1.1436 1.3582 0.7283 -0.2186 2.3188 -0.7154 1.0014 0.9974 0.9797 -0.0205 -0.0083 0.0188
 + - cost(#8)=0.368344  
 + -- Parameters = -1.9242 1.8760 0.6010 -0.9434 2.5180 -0.8175 0.9955 1.0027 0.9792 -0.0356 -0.0080 0.0200
 + - cost(#9)=0.379173  
 + -- Parameters = -1.7851 3.1618 1.4009 -0.5660 3.2699 0.0295 0.9704 1.0193 0.9932 -0.0192 -0.0142 0.0416
 + - cost(#10)=0.379782  
 + -- Parameters = -1.8590 -4.7957 5.2233 0.0674 -6.3359 1.0653 0.9743 1.0194 0.9888 0.0118 -0.0102 -0.0360
 + - cost(#11)=0.402457  
 + -- Parameters = -0.1870 0.1744 -3.0685 -0.0782 4.5091 -2.6096 1.0085 0.9551 0.9291 -0.0303 -0.0036 0.0141
 + - cost(#12)=0.485897  
 + -- Parameters = -10.0705 -8.2710 5.1970 -2.3482 -8.2786 7.1896 1.0047 1.0071 0.9293 0.0830 -0.0799 -0.0300
 + - cost(#13)=0.577842  
 + -- Parameters = -1.4997 5.0504 -2.8900 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.339887 *
 + -- Parameters = -0.5054 -1.7383 3.2301 0.4687 -3.9298 -0.8237 0.9839 1.0286 0.9751 -0.0173 -0.0020 -0.0268
 + - cost(#2)=0.345187  
 + -- Parameters = -0.5798 -0.8872 3.1209 0.1274 -2.4659 -1.3958 0.9896 1.0261 0.9718 -0.0214 0.0145 -0.0029
 + - cost(#3)=0.335882 *
 + -- Parameters = -1.0076 -1.3122 2.5998 -0.6173 -4.0452 -1.3973 0.9873 1.0418 0.9592 -0.0536 0.0162 -0.0304
 + - cost(#4)=0.348760  
 + -- Parameters = -3.1261 -2.1346 1.9362 -0.9576 -4.8717 1.8988 0.9966 1.0069 0.9656 -0.0599 -0.0636 -0.0755
 + - cost(#5)=0.339934  
 + -- Parameters = -0.9282 -2.3011 3.3336 -0.0122 -5.2867 -0.7061 0.9774 1.0408 0.9759 -0.0144 0.0076 -0.0463
 + - cost(#6)=0.350267  
 + -- Parameters = -0.4741 -0.3958 2.0145 0.4658 -0.6897 -1.0675 0.9942 1.0096 0.9873 -0.0257 -0.0091 -0.0048
 + - cost(#7)=0.360267  
 + -- Parameters = -0.9588 1.1253 0.8512 -0.0943 2.0555 -0.7387 1.0022 0.9997 0.9821 -0.0245 -0.0096 0.0190
 + - cost(#8)=0.355126  
 + -- Parameters = -0.7355 1.3722 1.5026 0.1035 1.6790 -1.1230 1.0024 1.0100 0.9768 -0.0339 -0.0051 0.0282
 + - cost(#9)=0.359476  
 + -- Parameters = -1.0309 2.1935 1.2728 0.0821 2.8410 -0.3052 0.9907 1.0143 0.9850 -0.0223 -0.0160 0.0435
 + - cost(#10)=0.355361  
 + -- Parameters = -1.6903 -3.5649 4.5473 -0.0522 -6.0932 0.2922 0.9719 1.0297 0.9906 0.0037 -0.0171 -0.0480
 + - cost(#11)=0.383390  
 + -- Parameters = -0.5828 1.5143 -0.4640 -0.1103 3.3776 -1.2364 1.0138 0.9796 0.9699 -0.0034 0.0075 0.0143
 + - cost(#12)=0.416002  
 + -- Parameters = -3.0744 -4.4711 2.4574 0.8566 -5.8662 4.3040 0.9951 1.0078 0.9223 0.0766 -0.0863 -0.0404
 + - cost(#13)=0.371654  
 + -- Parameters = -0.9433 0.8207 1.0538 0.1813 1.3417 -0.3138 0.9930 0.9964 0.9946 0.0008 -0.0020 0.0002
 + - case #3 is now the best
 + - Initial  cost = 0.335882
 + - Initial fine Parameters = -1.0076 -1.3122 2.5998 -0.6173 -4.0452 -1.3973 0.9873 1.0418 0.9592 -0.0536 0.0162 -0.0304
 + - Finalish cost = 0.334787 ; 168 funcs
 + - ini Finalish Parameters = -0.9436 -1.2982 2.5936 -0.5821 -4.1021 -1.3665 0.9869 1.0416 0.9590 -0.0495 0.0146 -0.0310
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 283.681 .. 1099.75; base clip 225.374 .. 898.009
 +  - versus source range 0 .. 952.257; base range 0 .. 1042.04
*[#15724=-0.235887] *[#15747=-0.236639] *[#15776=-0.236711] *[#15780=-0.236915] *[#15781=-0.237186] *[#15782=-0.237208] *[#15784=-0.237247] *[#15788=-0.237392] *[#15798=-0.237614] *[#15804=-0.237722] *[#15805=-0.237774] *[#15806=-0.237816] *[#15808=-0.238334] *[#15809=-0.238357] *[#15811=-0.238693] *[#15812=-0.238995] *[#15813=-0.239013] *[#15816=-0.239247] *[#15817=-0.239443] *[#15820=-0.239686] *[#15821=-0.239927] *[#15827=-0.240131] *[#15828=-0.240239] *[#15830=-0.240306] *[#15832=-0.240344] *[#15836=-0.240417] *[#15839=-0.240762] *[#15840=-0.241007] *[#15841=-0.24128] *[#15846=-0.241405] *[#15847=-0.241628] *[#15848=-0.241685] *[#15849=-0.241828] *[#15852=-0.241858] *[#15853=-0.241878] *[#15854=-0.241964] *[#15857=-0.242118] *[#15858=-0.242203] *[#15859=-0.242281] *[#15860=-0.242292] *[#15862=-0.242634] *[#15869=-0.242636] *[#15871=-0.242697] *[#15874=-0.242929] *[#15875=-0.24297] *[#15876=-0.242984] *[#15877=-0.243107] *[#15880=-0.243142] *[#15886=-0.243159] *[#15889=-0.243183] *[#15899=-0.243189] *[#15901=-0.243208] *[#15903=-0.243231] *[#15907=-0.243293] *[#15910=-0.243315] *[#15916=-0.243319] *[#15918=-0.243483] *[#15926=-0.243654] *[#15931=-0.243663] *[#15933=-0.243741] *[#15936=-0.243898] *[#15941=-0.244027] *[#15946=-0.24415] *[#15949=-0.244288] *[#15950=-0.24434] *[#15951=-0.244485] *[#15958=-0.244666] *[#15963=-0.244815] *[#15964=-0.244892] *[#15965=-0.244899] *[#15967=-0.245101] *[#15972=-0.245217] *[#15973=-0.245233] *[#15975=-0.245276] *[#15986=-0.245298] *[#15987=-0.245399] *[#15988=-0.245527] *[#15989=-0.245551] *[#16013=-0.245599] *[#16026=-0.245629] *[#16029=-0.24564] *[#16031=-0.245654] *[#16035=-0.245678] *[#16036=-0.245727] *[#16041=-0.245757] *[#16042=-0.245758] *[#16046=-0.245853] *[#16057=-0.245916] *[#16058=-0.245918] *[#16066=-0.24593] *[#16068=-0.24602] *[#16079=-0.246062] *[#16082=-0.246143] *[#16085=-0.246158] *[#16087=-0.246235] *[#16088=-0.246308] *[#16091=-0.246388] *[#16094=-0.246433] *[#16097=-0.246512] *[#16098=-0.246573] *[#16101=-0.246591] *[#16104=-0.246657] *[#16105=-0.246675] *[#16108=-0.246686] *[#16110=-0.246698] *[#16112=-0.246735] *[#16121=-0.246777] *[#16136=-0.246792] *[#16137=-0.246794] *[#16149=-0.24682] *[#16150=-0.246828] *[#16151=-0.246831] *[#16158=-0.246916] *[#16169=-0.24693] *[#16172=-0.24694] *[#16177=-0.246946] *[#16183=-0.246949] *[#16185=-0.246986] *[#16188=-0.247013] *[#16191=-0.247048] *[#16194=-0.247093] *[#16195=-0.247117] *[#16200=-0.247186] *[#16205=-0.247235] *[#16208=-0.247245] *[#16209=-0.247269] *[#16210=-0.247298] *[#16219=-0.247312] *[#16223=-0.247426] *[#16226=-0.247506] *[#16227=-0.247558] *[#16236=-0.247592] *[#16238=-0.247649] *[#16241=-0.247713] *[#16242=-0.247764] *[#16249=-0.24789] *[#16252=-0.247956] *[#16259=-0.247967] *[#16261=-0.247991] *[#16262=-0.247998] *[#16265=-0.248019] *[#16268=-0.248051] *[#16269=-0.248129] *[#16276=-0.248223] *[#16281=-0.248272] *[#16294=-0.248285] *[#16306=-0.248348] *[#16309=-0.248377] *[#16310=-0.248405] *[#16315=-0.248447] *[#16320=-0.248483] *[#16341=-0.248494] *[#16347=-0.24851] *[#16351=-0.248524] *[#16352=-0.248531] *[#16353=-0.248536] *[#16357=-0.248551] *[#16358=-0.248555] *[#16363=-0.248555] *[#16365=-0.248558] *[#16366=-0.248562] *[#16370=-0.248564] *[#16375=-0.248579] *[#16376=-0.248583] *[#16377=-0.248589] *[#16378=-0.248591] *[#16381=-0.248594] *[#16382=-0.248596] *[#16387=-0.248602] *[#16389=-0.248606] *[#16390=-0.248607] *[#16392=-0.248611] *[#16395=-0.248616] *[#16398=-0.248616] *[#16400=-0.248622] *[#16401=-0.248625] *[#16402=-0.248626] *[#16403=-0.248633] *[#16404=-0.248638] *[#16405=-0.248642] *[#16406=-0.248645] *[#16407=-0.24865] *[#16408=-0.248658] *[#16410=-0.248658] *[#16413=-0.248663] *[#16416=-0.248668] *[#16417=-0.248673] *[#16418=-0.248676] *[#16419=-0.248682] *[#16420=-0.24869] *[#16421=-0.248702] *[#16426=-0.248703] *[#16427=-0.248711] *[#16428=-0.248719] *[#16430=-0.248721] *[#16431=-0.24873] *[#16433=-0.248733] *[#16438=-0.248736] *[#16439=-0.248739] *[#16442=-0.248741] *[#16443=-0.248742] *[#16446=-0.248745] *[#16449=-0.248746] *[#16454=-0.24875] *[#16455=-0.248756] *[#16456=-0.248758] *[#16457=-0.248761] *[#16460=-0.24877] *[#16461=-0.248772] *[#16464=-0.248772] *[#16465=-0.248775] *[#16466=-0.24878] *[#16469=-0.248788] *[#16470=-0.248791] *[#16471=-0.248792] *[#16472=-0.248797] *[#16473=-0.248801] *[#16474=-0.248807] *[#16477=-0.248816] *[#16482=-0.248821] *[#16483=-0.248825] *[#16486=-0.24883] *[#16487=-0.24883] *[#16489=-0.248837] *[#16490=-0.248841] *[#16491=-0.248845] *[#16492=-0.248846] *[#16493=-0.248849] *[#16494=-0.248857] *[#16495=-0.248865] *[#16496=-0.248872] *[#16497=-0.248899] *[#16500=-0.248909] *[#16501=-0.248913] *[#16503=-0.248919] *[#16504=-0.248934] *[#16505=-0.248943] *[#16506=-0.248961] *[#16509=-0.248964] *[#16511=-0.24897] *[#16512=-0.248981] *[#16513=-0.248986] *[#16516=-0.249003] *[#16519=-0.249017] *[#16520=-0.249024] *[#16521=-0.249029] *[#16526=-0.249032] *[#16528=-0.249041] *[#16529=-0.249043] *[#16530=-0.249045] *[#16531=-0.249046] *[#16535=-0.249048] *[#16540=-0.249053] *[#16541=-0.249054] *[#16542=-0.249054] *[#16544=-0.249059] *[#16547=-0.249063] *[#16548=-0.249067] *[#16549=-0.249068] *[#16551=-0.249073] *[#16552=-0.249074] *[#16553=-0.249075] *[#16554=-0.249076] *[#16559=-0.249079] *[#16560=-0.249079] *[#16562=-0.249079] *[#16564=-0.249085] *[#16565=-0.24909] *[#16568=-0.249095] *[#16569=-0.249098] *[#16570=-0.249101] *[#16573=-0.249102] *[#16574=-0.249103] *[#16575=-0.249104] *[#16578=-0.249108] *[#16579=-0.249111] *[#16580=-0.249113] *[#16581=-0.249114] *[#16582=-0.249121] *[#16585=-0.249125] *[#16586=-0.24913] *[#16593=-0.249143] *[#16598=-0.249144] *[#16599=-0.249145] *[#16600=-0.249146] *[#16601=-0.249147] *[#16604=-0.249149] *[#16605=-0.24915] *[#16610=-0.249152] *[#16611=-0.249154] *[#16616=-0.249161] *[#16617=-0.249162] *[#16618=-0.249166] *[#16619=-0.24917] *[#16620=-0.249173] *[#16621=-0.249177] *[#16622=-0.249177] *[#16625=-0.249178] *[#16626=-0.24918] *[#16627=-0.249181] *[#16628=-0.249184] *[#16629=-0.249185] *[#16633=-0.249185] *[#16634=-0.249189] *[#16636=-0.249189] *[#16637=-0.249192] *[#16642=-0.249194] *[#16643=-0.249195] *[#16644=-0.249196] *[#16645=-0.249199] *[#16646=-0.249199] *[#16647=-0.249204] *[#16652=-0.249206] *[#16653=-0.249206] *[#16658=-0.249207] *[#16659=-0.249209] *[#16664=-0.249211] *[#16675=-0.249212] *[#16678=-0.249212] *[#16684=-0.249212] *[#16687=-0.249213] *[#16690=-0.249213] *[#16698=-0.249214] *[#16701=-0.249215] *[#16706=-0.249216] *[#16707=-0.249217] *[#16710=-0.249217] *[#16712=-0.249219] *[#16717=-0.24922] *[#16722=-0.24922] *[#16723=-0.24922] *[#16727=-0.249221] *[#16728=-0.249221] *[#16731=-0.249221] *[#16736=-0.249222] *[#16739=-0.249222] *[#16742=-0.249227] *[#16743=-0.249228] *[#16744=-0.249228] *[#16748=-0.249229] *[#16751=-0.249231] *[#16752=-0.249231] *[#16757=-0.249231] *[#16759=-0.249233] *[#16760=-0.249234] *[#16763=-0.249236] *[#16764=-0.249238] *[#16765=-0.24924] *[#16766=-0.249241] *[#16767=-0.249242] *[#16768=-0.249243] *[#16769=-0.249245] *[#16772=-0.249246] *[#16777=-0.24925] *[#16778=-0.249252] *[#16781=-0.249253] *[#16782=-0.249254] *[#16783=-0.249257] *[#16784=-0.249258] *[#16788=-0.249265] *[#16789=-0.249267] *[#16790=-0.249269] *[#16791=-0.24927] *[#16794=-0.24927] *[#16799=-0.249271] *[#16800=-0.249273] *[#16805=-0.249275] *[#16810=-0.249278] *[#16813=-0.249279] *[#16814=-0.249279] *[#16816=-0.249281] *[#16817=-0.249281] *[#16820=-0.249284] *[#16821=-0.249287] *[#16824=-0.249289] *[#16825=-0.249291] *[#16829=-0.249291] *[#16830=-0.249294] *[#16831=-0.249294] *[#16832=-0.249295] *[#16838=-0.249296] *[#16839=-0.249297] *[#16848=-0.249299] *[#16849=-0.249299] *[#16855=-0.2493] *[#16860=-0.249301] *[#16861=-0.249303] *[#16862=-0.249304] *[#16864=-0.249304] *[#16865=-0.249306] *[#16866=-0.249306] *[#16867=-0.249308] *[#16868=-0.249309] *[#16870=-0.24931] *[#16871=-0.249313] *[#16872=-0.249313] *[#16874=-0.249315] *[#16889=-0.249316] *[#16890=-0.249317] *[#16891=-0.249317] *[#16892=-0.249317] *[#16896=-0.249318] *[#16898=-0.249319] *[#16899=-0.24932] *[#16900=-0.249321] *[#16905=-0.249322] *[#16908=-0.249323] *[#16909=-0.249323] *[#16912=-0.249324] *[#16913=-0.249325] *[#16916=-0.249325] *[#16917=-0.249325] *[#16918=-0.249325] *[#16920=-0.249327] *[#16923=-0.249328] *[#16924=-0.249329] *[#16929=-0.24933] *[#16932=-0.24933] *[#16935=-0.249331] *[#16936=-0.249331] *[#16937=-0.249332] *[#16938=-0.249332] *[#16939=-0.249332] *[#16940=-0.249333] *[#16945=-0.249333] *[#16948=-0.249335] *[#16949=-0.249335] *[#16955=-0.249336] *[#16960=-0.249336] *[#16962=-0.249338] *[#16965=-0.249338] *[#16974=-0.24934] *[#16975=-0.249341] *[#16986=-0.249342] *[#16987=-0.249343] *[#16992=-0.249343] *[#16996=-0.249343] *[#17025=-0.249344] *[#17026=-0.249344] *[#17029=-0.249345] *[#17050=-0.249345] *[#17055=-0.249346] *[#17058=-0.249346] *[#17069=-0.249346] *[#17076=-0.249347] *[#17080=-0.249347] *[#17085=-0.249347] *[#17087=-0.249347] *[#17093=-0.249347] *[#17094=-0.249348] *[#17105=-0.249348] *[#17108=-0.249349] *[#17111=-0.249349] *[#17125=-0.24935] *[#17129=-0.24935] *[#17134=-0.24935] *[#17140=-0.249351] *[#17145=-0.249351] *[#17148=-0.249352] *[#17154=-0.249352] *[#17160=-0.249353] *[#17161=-0.249353] *[#17171=-0.249353] *[#17175=-0.249353] *[#17176=-0.249353] *[#17201=-0.249353] *[#17205=-0.249353] *[#17214=-0.249353] *[#17224=-0.249353] *[#17239=-0.249353] *[#17242=-0.249354] *[#17245=-0.249354] *[#17250=-0.249354] *[#17264=-0.249354] *[#17270=-0.249354] *[#17277=-0.249354] *[#17278=-0.249354] *[#17283=-0.249354] *[#17292=-0.249354] *[#17299=-0.249354] *[#17302=-0.249354] *[#17335=-0.249354] *[#17362=-0.249354] *[#17364=-0.249354] *[#17370=-0.249354] *[#17380=-0.249354] *[#17388=-0.249354] *[#17393=-0.249355] *[#17413=-0.249355] 
 + - Final    cost = -0.249355 ; 1701 funcs
 + Final fine fit Parameters:
       x-shift= -1.2213   y-shift=  0.4318   z-shift=  3.5334  ...  enorm=  3.7634 mm
       z-angle=  0.0730   x-angle= -3.5922   y-angle=  0.0067  ...  total=  3.5930 deg
       x-scale=  0.9986   y-scale=  1.0673   z-scale=  0.9910  ...  vol3D=  1.0562 = base smaller than source
     y/x-shear= -0.0394 z/x-shear= -0.0255 z/y-shear= -0.0207
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -1.2213 0.4318 3.5334 0.0730 -3.5922 0.0067 0.9986 1.0673 0.9910 -0.0394 -0.0255 -0.0207
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S14_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S14_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 46.1
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S14_unflipped_ob_temp_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 5.175778 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 5.175778 degrees from plumb.
++ Source dataset: ./anatSS.sub-S14_unflipped_ob_temp_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1351923 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 36692 voxels [16.1%] in weight mask
++ Number of points for matching = 36692
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.434 36.879 23.784 (index)
 + source center of mass = 94.500 88.846 55.440 (index)
 + source-target CM = -0.804 4.793 -5.124 (xyz)
 + estimated center of mass shifts = -0.804 4.793 -5.124
++ shift param auto-range: -61.5..59.9 -65.5..75.1 -61.7..51.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.803864 .. 9.196136  center = -0.803864
 + Range param#2 [y-shift] = -5.207329 .. 14.792671  center = 4.792671
 + Range param#3 [z-shift] = -15.124004 .. 4.875996  center = -5.124004
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.803864 .. 39.196136  center = -0.803864
 + Range param#2 [y-shift] = -35.207329 .. 44.792671  center = 4.792671
 + Range param#3 [z-shift] = -45.124004 .. 34.875996  center = -5.124004
 + 12 free parameters
++ Normalized convergence radius = 0.0000093
++ Final parameter search ranges:
 +       x-shift =  -40.804 ..   39.196
 +       y-shift =  -35.207 ..   44.793
 +       z-shift =  -45.124 ..   34.876
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1351923 [out of 4423680] voxels
 + base mask has 49294 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=55.3927 usiz=510.593
 + - copying weight image
 + - using 36692 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 282.856 .. 1102.57; base clip 225.757 .. 909.698
 +  - versus source range 0.000226262 .. 1048.29; base range 0 .. 1042.04
 + 32440 total points stored in 334 'RHDD(12.0364)' bloks
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S14_flip_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 5.175778 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 5.175778 degrees from plumb.
++ Source dataset: ./anatSS.sub-S14_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1301226 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 36692 voxels [16.1%] in weight mask
++ Number of points for matching = 36692
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.434 36.879 23.784 (index)
 + source center of mass = 95.065 89.139 55.266 (index)
 + source-target CM = -0.239 4.500 -5.298 (xyz)
 + estimated center of mass shifts = -0.239 4.500 -5.298
++ shift param auto-range: -60.9..60.4 -65.8..74.8 -61.9..51.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.238617 .. 9.761383  center = -0.238617
 + Range param#2 [y-shift] = -5.500175 .. 14.499825  center = 4.499825
 + Range param#3 [z-shift] = -15.297604 .. 4.702396  center = -5.297604
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.238617 .. 39.761383  center = -0.238617
 + Range param#2 [y-shift] = -35.500175 .. 44.499825  center = 4.499825
 + Range param#3 [z-shift] = -45.297604 .. 34.702396  center = -5.297604
 + 12 free parameters
++ Normalized convergence radius = 0.0000093
++ Final parameter search ranges:
 +       x-shift =  -40.239 ..   39.761
 +       y-shift =  -35.500 ..   44.500
 +       z-shift =  -45.298 ..   34.702
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1301226 [out of 4423680] voxels
 + base mask has 49294 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=54.9268 usiz=510.646
 + - copying weight image
 + - using 36692 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 279.438 .. 1100.21; base clip 225.757 .. 909.698
 +  - versus source range 0.000678801 .. 1043.52; base range 0 .. 1042.04
 + 32440 total points stored in 334 'RHDD(12.0364)' bloks
++ -allcostX1D finished
No flip cost is -0.599648 for lpc+ZZ cost function
Flip cost is -0.237150 for lpc+ZZ cost function
Data does not need flipping
#Script is running (command trimmed):
  cat_matvec -ONELINE ./anatSS.sub-S14_al_junk_e2a_only_mat.aff12.1D ./anatSS.sub-S14_unflipped_obla2e_mat.1D -I > ./anatSS.sub-S14_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./vr_base_ts_ns+orig -1Dmatrix_apply ./anatSS.sub-S14_al_junk_mat.aff12.1D -prefix ./anatSS.sub-S14_al_junk -input ./anatSS.sub-S14_unflipped+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 5.175778 degrees from plumb.
++ Source dataset: ./anatSS.sub-S14_unflipped+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 31.434 30.879 15.784 (index)
 + source center of mass = 126.723 92.019 117.028 (index)
 + source-target CM = 3.839 15.046 2.761 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =    3.839   15.046    2.761
 +  shift search range is +/- =   60.669   60.669   37.316
 +                                  6.3%    24.8%     7.4%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0044 0.0631 -0.0041 26.4335 -0.0047 -0.0373 -0.9939 150.8446 -0.0660 1.0121 -0.0362 35.3724
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S14_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat anatSS.sub-S14+orig -suffix \
 _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask \
 -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./anatSS.sub-S14_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S14*

# Finished alignment successfully

if ( ! -f anatQQ.sub-S14+tlrc.HEAD ) then
foreach run ( 01 02 03 04 05 06 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.sub-S14.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.175778 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S14.r01.tshift+orig.BRIK is 5.175778 degrees from plumb.
++ Reading input dataset ./pb02.sub-S14.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38359 voxels
 + 5521 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.044  pitch=-0.185  yaw=-0.083  dS=-0.481  dL=-0.049  dP=-0.126
++ Mean: roll=-0.004  pitch=-0.051  yaw=-0.038  dS=-0.126  dL=-0.022  dP=-0.060
++ Max : roll=+0.019  pitch=+0.217  yaw=+0.027  dS=+0.064  dL=+0.003  dP=+0.022
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.10(0.10) 0.10(0.04) 0.13(0.05) 0.15(0.04) 0.12(0.03) 0.07(0.06) 0.12(0.05) 0.09(0.08) 0.12(0.06) 0.08(0.05) 0.09(0.07) 0.10(0.05) 0.08(0.03) 0.09(0.05) 0.09(0.04) 0.10(0.03) 0.10(0.03) 0.08(0.05) 0.14(0.22) 0.06(0.13) 0.06(0.03) 0.04(0.03) 0.08(0.05) 0.09(0.04) 0.06(0.07) 0.10(0.08) 0.04(0.08) 0.07(0.08) 0.09(0.05) 0.07(0.05) 0.05(0.06) 0.12(0.08) 0.08(0.07) 0.09(0.06) 0.10(0.04) 0.05(0.08) 0.06(0.04) 0.07(0.02) 0.09(0.01) 0.10(0.04) 0.05(0.06) 0.10(0.05) 0.09(0.02) 0.04(0.08) 0.08(0.06) 0.04(0.06) 0.06(0.04) 0.09(0.03) 0.10(0.09) 0.09(0.16) 0.14(0.09) 0.07(0.09) 0.14(0.08) 0.05(0.09) 0.09(0.05) 0.12(0.03) 0.10(0.03) 0.10(0.03) 0.08(0.04) 0.15(0.09) 0.08(0.08) 0.13(0.05) 0.11(0.02) 0.10(0.03) 0.12(0.02) 0.13(0.05) 0.14(0.03) 0.09(0.06) 0.16(0.07) 0.11(0.05) 0.15(0.05) 0.18(0.04) 0.18(0.09) 0.25(0.07) 0.20(0.05) 0.22(0.03) 0.25(0.04) 0.19(0.07) 0.21(0.04) 0.23(0.02) 0.20(0.07) 0.23(0.05) 0.21(0.02) 0.20(0.03) 0.25(0.05) 0.21(0.07) 0.24(0.04) 0.27(0.04) 0.23(0.05) 0.27(0.06) 0.24(0.10) 0.25(0.07) 0.20(0.06) 0.23(0.03) 0.25(0.05) 0.27(0.03) 0.28(0.02) 0.28(0.01) 0.28(0.03) 0.27(0.03) 0.28(0.02) 0.30(0.04) 0.28(0.06) 0.27(0.01) 0.24(0.04) 0.25(0.05) 0.18(0.08) 0.26(0.09) 0.37(0.62) 0.55(0.18) 0.46(0.15) 0.60(0.16) 0.51(0.12) 0.49(0.06) 0.45(0.05) 0.44(0.03) 0.39(0.08) 0.48(0.12) 0.39(0.12) 0.41(0.07) 0.38(0.07) 0.35(0.13) 0.44(0.16) 0.40(0.09) 0.41(0.02) 0.39(0.04) 0.43(0.07) 0.38(0.07) 0.42(0.05) 0.41(0.02) 0.38(0.05) 0.40(0.06) 0.39(0.06) 0.44(0.05) 0.31(0.13) 0.20(0.20) 0.21(0.10) 0.21(0.07) 0.24(0.03) 0.22(0.04) 0.19(0.03) 0.22(0.05) 0.20(0.05) 0.21(0.02) 0.22(0.03) 0.21(0.05) 0.19(0.05) 0.18(0.01) 0.18(0.02) 0.18(0.03) 0.18(0.05) 0.18(0.04) 0.19(0.04) 0.22(0.03) 0.19(0.05) 0.16(0.03) 0.22(0.07) 0.23(0.03) 0.22(0.02) 0.22(0.06) 0.41(0.21) 0.30(0.14) 0.23(0.10) 0.28(0.09) 0.25(0.09) 0.25(0.08) 0.22(0.04) 0.20(0.04) 0.22(0.05) 0.21(0.07) 0.19(0.04) 0.20(0.04) 0.21(0.04) 0.26(0.11) 0.23(0.07) 0.22(0.03) 0.21(0.05) 0.23(0.06) 0.21(0.05) 0.21(0.01) 0.17(0.07) 0.20(0.06) 0.18(0.04) 0.20(0.05) 0.23(0.05) 0.22(0.03) 0.23(0.03) 0.24(0.06) 0.22(0.07) 0.24(0.09) 0.24(0.04) 0.27(0.06) 0.23(0.11) 0.25(0.09) 0.22(0.08) 0.22(0.07) 0.20(0.03) 0.20(0.04) 0.22(0.03) 0.23(0.03) 0.22(0.05) 0.22(0.07) 0.22(0.06) 0.20(0.04) 0.17(0.06) 0.19(0.04) 0.20(0.04) 0.22(0.08) 0.24(0.05) 0.23(0.03) 0.26(0.04) 0.27(0.04) 0.25(0.04) 0.29(0.04) 0.22(0.07) 0.22(0.03) 0.20(0.04) 0.22(0.06) 0.24(0.04) 0.22(0.03) 0.25(0.04) 0.26(0.01) 0.24(0.02) 0.28(0.05) 0.22(0.06) 0.22(0.02) 0.26(0.05) 0.21(0.05) 0.28(0.07) 0.26(0.04) 0.30(0.05) 0.26(0.05) 0.38(0.13) 0.25(0.13) 0.30(0.06) 0.31(0.03) 0.29(0.03) 0.33(0.05) 0.69(0.62) 0.62(0.13) 0.44(0.20) 0.40(0.07) 0.39(0.03) 0.37(0.04) 0.36(0.05) 0.33(0.05) 0.34(0.05) 0.35(0.06) 0.30(0.10) 0.31(0.05) 0.28(0.06) 0.31(0.06) 0.29(0.08) 0.30(0.09) 0.27(0.09) 0.28(0.05) 0.29(0.02) 0.26(0.08) 0.27(0.05) 0.24(0.04) 0.30(0.07) 0.29(0.03) 0.30(0.08) 0.32(0.12) 0.29(0.05) 0.36(0.07) 0.34(0.03) 0.37(0.03) 0.36(0.03) 0.30(0.08) 0.37(0.07) 0.38(0.04) 0.34(0.04) 0.36(0.03) 0.28(0.09) 0.35(0.08) 0.25(0.10) 0.31(0.28) 0.27(0.12) 0.38(0.23) 0.33(0.09) 0.34(0.02) 0.32(0.10) 0.32(0.04) 0.33(0.06) 0.41(0.11) 0.32(0.10) 0.40(0.08) 0.40(0.03) 0.40(0.01) 0.42(0.03) 0.39(0.05) 0.41(0.06) 0.41(0.03) 0.37(0.05) 0.41(0.05) 0.45(0.03) 0.36(0.09) 0.39(0.04) 0.40(0.06) 0.43(0.05) 0.39(0.04) 0.38(0.03) 0.39(0.03) 0.34(0.07) 0.42(0.08) 0.35(0.07) 0.40(0.05) 0.40(0.04) 0.40(0.03) 0.42(0.05) 0.41(0.05) 0.41(0.02) 0.42(0.03) 0.42(0.02) 0.43(0.04) 0.40(0.04) 0.43(0.04) 0.36(0.07) 0.42(0.07) 0.36(0.07) 0.42(0.07) 0.40(0.03) 0.37(0.03) 0.41(0.07) 0.38(0.05) 0.41(0.04) 0.34(0.07) 0.42(0.09) 0.40(0.03) 0.45(0.05) 0.42(0.03) 0.44(0.03) 0.45(0.03) 0.42(0.04) 0.47(0.06) 0.43(0.05) 0.47(0.05) 0.40(0.08) 0.44(0.04) 0.41(0.04) 0.35(0.07) 0.50(0.49) 0.38(0.18) 0.37(0.19) 0.38(0.03) 0.41(0.05) 0.38(0.03) 0.37(0.03) 0.45(0.08) 0.38(0.07) 0.46(0.08) 0.38(0.08) 0.43(0.06) 0.43(0.04) 0.48(0.06) 0.44(0.05) 0.48(0.05) 0.48(0.03) 0.50(0.06) 0.46(0.06) 0.47(0.02) 0.47(0.01) 0.46(0.04) 0.49(0.05) 0.45(0.04) 0.47(0.02) 0.48(0.02) 0.50(0.08) 0.45(0.06) 0.41(0.05) 0.43(0.03) 0.36(0.08) 0.40(0.05) 0.41(0.01) 0.41(0.02) 0.38(0.04) 0.40(0.02) 0.47(0.07) 0.42(0.05) 0.44(0.03) 0.44(0.07) 0.46(0.05) 0.47(0.03) 0.46(0.05) 0.48(0.03) 0.42(0.07) 0.41(0.01) 0.46(0.07) 0.44(0.02) 0.46(0.04) 0.45(0.05) 0.51(0.07) 0.42(0.21) 0.63(0.41) 0.54(0.12) 0.49(0.07) 0.44(0.12) 0.44(0.27) 0.45(0.02) 0.40(0.05) 0.48(0.08) 0.40(0.08) 0.44(0.05) 0.41(0.04) 0.50(0.10) 0.40(0.11) 0.47(0.07) 0.42(0.05) 0.47(0.06) 0.48(0.02)
++ Max displacement in automask = 0.69 (mm) at sub-brick 239
++ Max delta displ  in automask = 0.62 (mm) at sub-brick 239
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.sub-S14.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S14.aff12.1D anatSS.sub-S14_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source pb02.sub-S14.r01.tshift+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S14.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S14.r01.tshift+orig.BRIK is 5.175778 degrees from plumb.
++ opened source dataset 'pb02.sub-S14.r01.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109295104
in use bytes     =  923682976
Total (incl. mmap):
system bytes     = 1109295104
in use bytes     =  923682976
max mmap regions =          1
max mmap bytes   =   92749824
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 1407.6 sec
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.175778 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109295104
in use bytes     =  923683136
Total (incl. mmap):
system bytes     = 1109295104
in use bytes     =  923683136
max mmap regions =          1
max mmap bytes   =   92749824
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.sub-S14.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.175778 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S14.r02.tshift+orig.BRIK is 5.175778 degrees from plumb.
++ Reading input dataset ./pb02.sub-S14.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38318 voxels
 + 5518 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.081  pitch=-0.584  yaw=+0.307  dS=+0.248  dL=+0.111  dP=+0.249
++ Mean: roll=+0.153  pitch=-0.501  yaw=+0.390  dS=+0.445  dL=+0.186  dP=+0.299
++ Max : roll=+0.186  pitch=-0.353  yaw=+0.440  dS=+0.601  dL=+0.213  dP=+0.346
++ Max displacements (mm) for each sub-brick:
 1.46(0.00) 1.36(0.11) 1.42(0.08) 1.43(0.05) 1.42(0.02) 1.42(0.02) 1.42(0.03) 1.42(0.01) 1.43(0.02) 1.41(0.03) 1.43(0.03) 1.41(0.05) 1.46(0.07) 1.45(0.04) 1.46(0.03) 1.48(0.04) 1.46(0.07) 1.49(0.06) 1.45(0.05) 1.45(0.02) 1.44(0.02) 1.47(0.04) 1.48(0.03) 1.45(0.04) 1.47(0.05) 1.48(0.04) 1.47(0.03) 1.48(0.06) 1.45(0.05) 1.48(0.05) 1.48(0.03) 1.47(0.05) 1.49(0.04) 1.44(0.06) 1.46(0.04) 1.48(0.06) 1.44(0.07) 1.45(0.04) 1.45(0.04) 1.48(0.05) 1.47(0.02) 1.49(0.02) 1.51(0.03) 1.48(0.03) 1.31(0.23) 1.35(0.12) 1.43(0.11) 1.41(0.06) 1.41(0.01) 1.42(0.02) 1.48(0.06) 1.50(0.05) 1.45(0.06) 1.51(0.07) 1.50(0.03) 1.48(0.04) 1.52(0.05) 1.48(0.05) 1.51(0.04) 1.50(0.03) 1.48(0.05) 1.52(0.07) 1.53(0.05) 1.50(0.04) 1.53(0.04) 1.50(0.03) 1.50(0.01) 1.53(0.04) 1.54(0.04) 1.47(0.08) 1.50(0.04) 1.49(0.03) 1.50(0.04) 1.48(0.04) 1.47(0.03) 1.52(0.06) 1.53(0.05) 1.55(0.06) 1.52(0.04) 1.50(0.02) 1.49(0.02) 1.45(0.06) 1.46(0.05) 1.39(0.10) 1.39(0.06) 1.52(0.17) 1.47(0.09) 1.50(0.04) 1.50(0.03) 1.54(0.05) 1.50(0.06) 1.52(0.04) 1.48(0.04) 1.49(0.05) 1.50(0.06) 1.52(0.03) 1.51(0.04) 1.52(0.05) 1.48(0.05) 1.52(0.05) 1.54(0.02) 1.52(0.03) 1.55(0.03) 1.50(0.05) 1.55(0.05) 1.57(0.03) 1.52(0.06) 1.58(0.07) 1.55(0.05) 1.53(0.06) 1.56(0.05) 1.54(0.08) 1.56(0.02) 1.57(0.04) 1.54(0.04) 1.57(0.03) 1.55(0.02) 1.50(0.05) 1.52(0.04) 1.49(0.03) 1.48(0.02) 1.46(0.05) 1.27(0.23) 1.37(0.21) 1.38(0.08) 1.41(0.05) 1.42(0.02) 1.47(0.05) 1.48(0.09) 1.48(0.02) 1.44(0.04) 1.48(0.05) 1.46(0.03) 1.46(0.02) 1.46(0.02) 1.43(0.04) 1.46(0.03) 1.45(0.04) 1.46(0.04) 1.51(0.06) 1.51(0.07) 1.55(0.07) 1.53(0.04) 1.57(0.04) 1.55(0.03) 1.54(0.04) 1.51(0.11) 1.57(0.07) 1.56(0.03) 1.52(0.05) 1.55(0.06) 1.51(0.05) 1.47(0.05) 1.53(0.07) 1.54(0.02) 1.48(0.07) 1.52(0.04) 1.53(0.01) 1.50(0.04) 1.55(0.08) 1.53(0.04) 1.52(0.04) 1.54(0.04) 1.52(0.04) 1.50(0.04) 1.51(0.07) 1.51(0.05) 1.53(0.03) 1.52(0.03) 1.53(0.04) 1.51(0.03) 1.54(0.05) 1.53(0.05) 1.52(0.03) 1.54(0.11) 1.49(0.12) 1.52(0.06) 1.49(0.05) 1.52(0.04) 1.54(0.02) 1.49(0.05) 1.53(0.04) 1.55(0.03) 1.48(0.08) 1.54(0.07) 1.55(0.03) 1.50(0.05) 1.52(0.03) 1.54(0.03) 1.53(0.03) 1.57(0.05) 1.54(0.04) 1.53(0.02) 1.56(0.03) 1.54(0.03) 1.51(0.03) 1.54(0.03) 1.54(0.05) 1.53(0.04) 1.57(0.06) 1.56(0.04) 1.51(0.05) 1.54(0.06) 1.53(0.03) 1.54(0.05) 1.52(0.08) 1.51(0.04) 1.50(0.02) 1.55(0.07) 1.53(0.04) 1.55(0.03) 1.52(0.03) 1.54(0.03) 1.51(0.04) 1.53(0.02) 1.49(0.04) 1.48(0.02) 1.47(0.05) 1.49(0.04) 1.46(0.03) 1.47(0.08) 1.45(0.06) 1.48(0.05) 1.51(0.05) 1.47(0.04) 1.41(0.10) 1.20(0.22) 1.41(0.29) 1.39(0.09) 1.37(0.11) 1.42(0.07) 1.42(0.02) 1.42(0.06) 1.45(0.07) 1.44(0.10) 1.45(0.08) 1.43(0.07) 1.47(0.08) 1.45(0.05) 1.52(0.09) 1.47(0.06) 1.49(0.06) 1.49(0.04) 1.53(0.05) 1.48(0.06) 1.52(0.07) 1.50(0.03) 1.48(0.04) 1.49(0.06) 1.47(0.04) 1.49(0.06) 1.48(0.04) 1.46(0.03) 1.49(0.04) 1.45(0.05) 1.48(0.07) 1.45(0.09) 1.46(0.05) 1.46(0.02) 1.46(0.03) 1.50(0.06) 1.48(0.03) 1.48(0.03) 1.50(0.03) 1.45(0.06) 1.49(0.05) 1.49(0.01) 1.45(0.05) 1.48(0.05) 1.45(0.04) 1.45(0.04) 1.42(0.07) 1.45(0.04) 1.44(0.04) 1.48(0.06) 1.45(0.05) 1.43(0.03) 1.45(0.05) 1.47(0.06) 1.46(0.04) 1.42(0.05) 1.43(0.03) 1.43(0.06) 1.43(0.02) 1.43(0.01) 1.42(0.04) 1.46(0.04) 1.42(0.05) 1.44(0.03) 1.45(0.04) 1.48(0.03) 1.48(0.04) 1.46(0.03) 1.48(0.05) 1.43(0.05) 1.44(0.02) 1.42(0.05) 1.42(0.06) 1.42(0.10) 1.41(0.11) 1.43(0.06) 1.43(0.06) 1.46(0.06) 1.45(0.03) 1.14(0.39) 1.19(0.12) 1.38(0.23) 1.39(0.02) 1.33(0.06) 1.37(0.04) 1.36(0.04) 1.37(0.08) 1.37(0.09) 1.38(0.09) 1.39(0.07) 1.38(0.07) 1.37(0.06) 1.37(0.06) 1.38(0.07) 1.40(0.09) 1.42(0.07) 1.42(0.04) 1.41(0.05) 1.40(0.01) 1.40(0.02) 1.39(0.05) 1.35(0.05) 1.36(0.03) 1.36(0.07) 1.37(0.05) 1.37(0.01) 1.37(0.04) 1.37(0.03) 1.34(0.05) 1.39(0.07) 1.39(0.03) 1.35(0.04) 1.38(0.05) 1.35(0.06) 1.36(0.04) 1.34(0.03) 1.36(0.03) 1.37(0.02) 1.36(0.04) 1.37(0.05) 1.34(0.03) 1.34(0.03) 1.34(0.02) 1.35(0.04) 1.38(0.04) 1.37(0.01) 1.35(0.06) 1.31(0.04) 1.33(0.03) 1.36(0.03) 1.34(0.04) 1.30(0.07) 1.32(0.04) 1.34(0.03) 1.35(0.06) 1.36(0.06) 1.34(0.06) 1.32(0.05) 1.32(0.06) 1.37(0.07) 1.33(0.06) 1.35(0.06) 1.33(0.03) 1.29(0.06) 1.30(0.06) 1.26(0.04) 1.15(0.17) 1.22(0.10) 1.27(0.08) 1.24(0.08) 1.26(0.03) 1.26(0.05) 1.31(0.06) 1.28(0.03) 1.26(0.05) 1.28(0.06) 1.27(0.06) 1.28(0.05) 1.30(0.05) 1.29(0.05) 1.28(0.04) 1.30(0.03) 1.32(0.04) 1.28(0.04) 1.30(0.04) 1.32(0.03) 1.32(0.03) 1.34(0.04) 1.33(0.03) 1.30(0.06) 1.32(0.05) 1.29(0.03) 1.29(0.03) 1.29(0.02) 1.27(0.05) 1.24(0.06) 1.22(0.02) 1.23(0.03) 1.26(0.03) 1.24(0.03) 1.26(0.03) 1.23(0.04) 1.26(0.04) 1.25(0.05) 1.25(0.02) 1.27(0.05) 1.28(0.03)
++ Max displacement in automask = 1.58 (mm) at sub-brick 107
++ Max delta displ  in automask = 0.39 (mm) at sub-brick 304
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.sub-S14.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S14.aff12.1D anatSS.sub-S14_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source pb02.sub-S14.r02.tshift+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S14.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S14.r02.tshift+orig.BRIK is 5.175778 degrees from plumb.
++ opened source dataset 'pb02.sub-S14.r02.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109295104
in use bytes     =  923682976
Total (incl. mmap):
system bytes     = 1109295104
in use bytes     =  923682976
max mmap regions =          1
max mmap bytes   =   92749824
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 1457.2 sec
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.175778 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109295104
in use bytes     =  923683136
Total (incl. mmap):
system bytes     = 1109295104
in use bytes     =  923683136
max mmap regions =          1
max mmap bytes   =   92749824
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.sub-S14.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.175778 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S14.r03.tshift+orig.BRIK is 5.175362 degrees from plumb.
++ Reading input dataset ./pb02.sub-S14.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38397 voxels
 + 5541 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.463  pitch=-0.678  yaw=-0.392  dS=+0.794  dL=+0.374  dP=+0.264
++ Mean: roll=+0.610  pitch=-0.520  yaw=-0.213  dS=+1.099  dL=+0.530  dP=+0.363
++ Max : roll=+0.663  pitch=-0.259  yaw=-0.029  dS=+1.364  dL=+0.598  dP=+0.471
++ Max displacements (mm) for each sub-brick:
 2.93(0.00) 2.94(0.11) 2.95(0.09) 2.92(0.04) 2.92(0.04) 2.96(0.04) 2.89(0.09) 2.90(0.03) 2.88(0.11) 2.92(0.05) 2.89(0.05) 2.95(0.12) 2.90(0.06) 2.97(0.10) 2.91(0.11) 2.85(0.07) 2.82(0.07) 2.85(0.18) 2.81(0.15) 2.76(0.11) 2.74(0.07) 2.82(0.09) 2.75(0.15) 2.85(0.21) 2.86(0.07) 2.91(0.05) 2.88(0.03) 2.83(0.08) 2.81(0.04) 2.83(0.07) 2.86(0.04) 2.87(0.03) 2.89(0.03) 2.84(0.07) 2.85(0.05) 2.86(0.02) 2.87(0.04) 2.88(0.04) 2.74(0.16) 2.73(0.08) 2.71(0.11) 2.74(0.09) 2.68(0.08) 2.69(0.08) 2.66(0.07) 2.68(0.03) 2.64(0.06) 2.67(0.10) 2.63(0.09) 2.64(0.03) 2.65(0.04) 2.62(0.04) 2.66(0.06) 2.62(0.05) 2.60(0.05) 2.56(0.05) 2.54(0.06) 2.55(0.05) 2.60(0.07) 2.59(0.04) 2.60(0.06) 2.58(0.06) 2.54(0.06) 2.58(0.08) 2.60(0.04) 2.61(0.06) 2.61(0.02) 2.57(0.05) 2.61(0.04) 2.61(0.03) 2.61(0.07) 2.59(0.07) 2.61(0.05) 2.63(0.06) 2.62(0.05) 2.64(0.03) 2.61(0.03) 2.64(0.03) 2.61(0.04) 2.63(0.04) 2.60(0.07) 2.58(0.05) 2.59(0.04) 2.60(0.09) 2.51(0.11) 2.52(0.06) 2.55(0.02) 2.54(0.02) 2.55(0.04) 2.51(0.05) 2.52(0.05) 2.51(0.04) 2.46(0.08) 2.49(0.04) 2.48(0.02) 2.53(0.09) 2.64(0.17) 2.64(0.10) 2.63(0.08) 2.66(0.04) 2.60(0.08) 2.61(0.03) 2.63(0.04) 2.64(0.08) 2.66(0.03) 2.68(0.06) 2.67(0.04) 2.62(0.06) 2.64(0.08) 2.66(0.04) 2.70(0.05) 2.73(0.05) 2.71(0.03) 2.68(0.05) 2.64(0.05) 2.69(0.07) 2.63(0.07) 2.64(0.06) 2.63(0.04) 2.64(0.02) 2.64(0.08) 2.65(0.03) 2.65(0.05) 2.58(0.09) 2.67(0.10) 2.68(0.03) 2.65(0.04) 2.64(0.06) 2.65(0.13) 2.63(0.07) 2.60(0.06) 2.60(0.05) 2.64(0.04) 2.62(0.05) 2.67(0.07) 2.63(0.09) 2.64(0.08) 2.61(0.06) 2.63(0.07) 2.63(0.04) 2.66(0.04) 2.68(0.03) 2.64(0.05) 2.67(0.05) 2.68(0.02) 2.64(0.04) 2.65(0.06) 2.64(0.03) 2.64(0.03) 2.65(0.04) 2.61(0.06) 2.63(0.05) 2.61(0.07) 2.59(0.05) 2.60(0.05) 2.61(0.03) 2.61(0.04) 2.61(0.07) 2.59(0.03) 2.57(0.04) 2.60(0.03) 2.58(0.04) 2.59(0.07) 2.56(0.08) 2.60(0.06) 2.60(0.03) 2.59(0.02) 2.60(0.07) 2.57(0.05) 2.60(0.06) 2.61(0.07) 2.60(0.11) 2.66(0.15) 2.64(0.04) 2.63(0.06) 2.65(0.06) 2.67(0.06) 2.63(0.06) 2.64(0.06) 2.64(0.02) 2.62(0.05) 2.64(0.06) 2.63(0.04) 2.65(0.04) 2.63(0.05) 2.64(0.03) 2.67(0.04) 2.63(0.05) 2.64(0.04) 2.64(0.03) 2.65(0.04) 2.60(0.07) 2.62(0.06) 2.60(0.09) 2.63(0.07) 2.60(0.06) 2.53(0.07) 2.53(0.06) 2.53(0.05) 2.54(0.06) 2.51(0.06) 2.49(0.05) 2.47(0.06) 2.45(0.09) 2.45(0.08) 2.43(0.06) 2.41(0.07) 2.45(0.08) 2.49(0.09) 2.46(0.07) 2.46(0.04) 2.47(0.04) 2.41(0.06) 2.42(0.04) 2.40(0.03) 2.36(0.10) 2.35(0.10) 2.41(0.17) 2.35(0.15) 2.36(0.09) 2.35(0.06) 2.32(0.06) 2.36(0.11) 2.29(0.14) 2.28(0.07) 2.28(0.06) 2.32(0.13) 2.26(0.08) 2.23(0.04) 2.25(0.04) 2.23(0.05) 2.20(0.06) 2.17(0.05) 2.17(0.03) 2.19(0.07) 2.21(0.06) 2.16(0.06) 2.19(0.05) 2.17(0.04) 2.19(0.03) 2.22(0.03) 2.19(0.04) 2.21(0.05) 2.17(0.08) 2.17(0.03) 2.16(0.01) 2.18(0.04) 2.17(0.03) 2.11(0.07) 2.15(0.06) 2.15(0.04) 2.17(0.03) 2.16(0.03) 2.14(0.05) 2.16(0.06) 2.16(0.03) 2.17(0.06) 2.12(0.06) 2.13(0.03) 2.12(0.04) 2.12(0.03) 2.12(0.03) 2.07(0.05) 2.06(0.03) 2.05(0.04) 2.06(0.03) 2.03(0.06) 2.06(0.07) 2.03(0.06) 2.04(0.04) 1.97(0.07) 1.99(0.05) 2.05(0.07) 1.98(0.08) 1.99(0.05) 1.95(0.07) 1.97(0.04) 1.94(0.04) 1.93(0.04) 1.89(0.05) 1.93(0.06) 1.93(0.03) 1.91(0.06) 1.89(0.04) 1.88(0.03) 1.87(0.06) 1.84(0.06) 1.86(0.08) 1.82(0.10) 1.79(0.05) 1.83(0.11) 1.85(0.12) 1.70(0.25) 1.73(0.13) 1.74(0.06)
++ Max displacement in automask = 2.97 (mm) at sub-brick 13
++ Max delta displ  in automask = 0.25 (mm) at sub-brick 292
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.sub-S14.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S14.aff12.1D anatSS.sub-S14_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source pb02.sub-S14.r03.tshift+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S14.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S14.r03.tshift+orig.BRIK is 5.175362 degrees from plumb.
++ opened source dataset 'pb02.sub-S14.r03.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109254144
in use bytes     =  923637648
Total (incl. mmap):
system bytes     = 1109254144
in use bytes     =  923637648
max mmap regions =          1
max mmap bytes   =   92749824
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1048.8 sec
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.175362 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109254144
in use bytes     =  923637808
Total (incl. mmap):
system bytes     = 1109254144
in use bytes     =  923637808
max mmap regions =          1
max mmap bytes   =   92749824
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -cubic -1Dmatrix_save mat.r04.vr.aff12.1D pb02.sub-S14.r04.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.175778 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S14.r04.tshift+orig.BRIK is 5.361766 degrees from plumb.
++ centers of base and input datasets are 1.11 mm apart
++ Reading input dataset ./pb02.sub-S14.r04.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38331 voxels
 + 5513 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.140  pitch=-1.839  yaw=-0.262  dS=+2.125  dL=+0.342  dP=+0.603
++ Mean: roll=+0.174  pitch=-1.590  yaw=-0.180  dS=+2.331  dL=+0.372  dP=+0.679
++ Max : roll=+0.227  pitch=-1.422  yaw=-0.093  dS=+2.423  dL=+0.408  dP=+0.789
++ Max displacements (mm) for each sub-brick:
 5.09(0.00) 5.17(0.11) 5.18(0.03) 5.13(0.05) 5.18(0.04) 5.16(0.03) 5.12(0.04) 5.17(0.05) 5.16(0.02) 5.12(0.04) 5.16(0.04) 5.17(0.01) 5.13(0.04) 5.16(0.04) 5.17(0.02) 5.11(0.08) 5.22(0.14) 5.20(0.07) 4.98(0.24) 5.19(0.26) 5.14(0.06) 5.18(0.04) 5.17(0.02) 5.18(0.02) 5.19(0.01) 5.20(0.03) 5.22(0.03) 5.19(0.03) 5.21(0.03) 5.21(0.03) 5.22(0.01) 5.20(0.04) 5.18(0.06) 5.24(0.07) 5.19(0.11) 5.21(0.06) 5.21(0.02) 5.20(0.04) 5.24(0.04) 5.23(0.01) 5.24(0.01) 5.26(0.05) 5.23(0.03) 5.25(0.03) 5.21(0.04) 5.15(0.06) 5.16(0.01) 5.18(0.02) 5.15(0.03) 5.16(0.01) 5.16(0.00) 5.17(0.02) 5.16(0.02) 5.16(0.03) 5.15(0.02) 5.17(0.04) 4.87(0.30) 4.74(0.19) 4.99(0.25) 4.92(0.07) 4.96(0.04) 4.96(0.03) 4.95(0.03) 4.97(0.03) 4.96(0.02) 4.99(0.03) 4.98(0.02) 4.95(0.03) 4.93(0.03) 4.91(0.03) 4.96(0.06) 4.98(0.03) 4.96(0.02) 5.01(0.06) 5.02(0.01) 4.98(0.04) 5.00(0.05) 4.97(0.03) 4.98(0.03) 5.01(0.03) 4.97(0.04) 5.00(0.04) 4.99(0.04) 4.97(0.03) 5.00(0.03) 4.99(0.03) 5.00(0.03) 5.02(0.02) 5.01(0.02) 4.99(0.02) 5.01(0.03) 4.96(0.05) 4.98(0.03) 5.00(0.03) 4.95(0.05) 4.97(0.04) 4.99(0.03) 4.96(0.04) 4.99(0.04) 5.01(0.02) 4.96(0.05) 4.99(0.03) 4.98(0.03) 4.95(0.04) 4.95(0.01) 4.95(0.02) 5.04(0.09) 5.06(0.03) 5.04(0.03) 5.03(0.04) 5.08(0.05) 5.11(0.05) 5.10(0.04) 5.08(0.02) 5.09(0.04) 5.06(0.04) 5.07(0.04) 5.12(0.05) 5.09(0.04) 5.05(0.06) 5.06(0.04) 5.06(0.05) 5.05(0.01) 4.68(0.40) 4.69(0.05) 4.76(0.08) 4.78(0.03) 4.81(0.04) 4.84(0.04) 4.82(0.03) 4.83(0.02) 4.85(0.02) 4.82(0.03) 4.83(0.01) 4.76(0.08) 4.57(0.22) 4.71(0.21) 4.72(0.02) 4.78(0.07) 4.81(0.04) 4.85(0.04) 4.87(0.02) 4.82(0.05) 4.85(0.07) 4.87(0.03) 4.81(0.09) 4.84(0.03) 4.86(0.03) 4.80(0.07) 4.84(0.04) 4.83(0.07) 4.83(0.06) 4.87(0.05) 4.85(0.02) 4.86(0.02) 4.88(0.02) 4.86(0.03) 4.86(0.03) 4.90(0.04) 4.87(0.03) 4.88(0.03) 4.87(0.03) 4.80(0.08) 4.84(0.04) 4.84(0.04) 4.84(0.03) 4.86(0.02) 4.83(0.03) 4.83(0.02) 4.85(0.03) 4.81(0.05) 4.78(0.03) 4.92(0.14) 4.96(0.04) 4.86(0.10) 4.89(0.04) 4.92(0.04) 4.88(0.04) 4.85(0.04) 4.90(0.05) 4.91(0.03) 4.85(0.07) 4.89(0.05) 4.91(0.03) 4.87(0.04) 4.82(0.06) 4.86(0.05) 4.87(0.02) 4.84(0.05) 4.89(0.05) 4.90(0.03) 4.84(0.06) 4.87(0.03) 4.91(0.04) 4.88(0.03) 4.85(0.03) 4.86(0.02) 4.86(0.02) 4.83(0.03) 4.85(0.04) 4.87(0.04) 4.84(0.06) 4.87(0.03) 4.83(0.04) 4.86(0.05) 4.85(0.03) 4.81(0.05) 4.82(0.02) 4.81(0.02) 4.82(0.03) 4.85(0.03) 4.80(0.04) 4.82(0.02) 4.84(0.02) 4.83(0.04) 4.87(0.07) 4.79(0.08) 4.82(0.06) 4.83(0.02) 4.80(0.07) 4.85(0.05) 4.85(0.02) 4.82(0.04) 4.83(0.05) 4.81(0.05) 4.82(0.03) 4.80(0.05) 4.84(0.07) 4.84(0.01) 4.82(0.03) 4.81(0.03) 4.81(0.02) 4.82(0.02) 4.86(0.04) 4.81(0.06) 4.83(0.04) 4.84(0.02) 4.80(0.04) 4.85(0.06) 4.84(0.02) 4.78(0.06) 4.83(0.05) 4.83(0.02) 4.79(0.05) 4.82(0.04) 4.81(0.02) 4.79(0.02) 4.83(0.04) 4.84(0.03) 4.81(0.03) 4.81(0.01) 4.81(0.02) 4.80(0.03) 4.83(0.03) 4.80(0.04) 4.78(0.04) 4.80(0.02) 4.79(0.02) 4.82(0.05) 4.88(0.10) 4.92(0.17) 4.88(0.21) 4.88(0.08) 4.82(0.06) 4.71(0.15) 4.56(0.20) 4.66(0.14) 4.62(0.06) 4.65(0.04) 4.65(0.06) 4.71(0.05) 4.68(0.03) 4.69(0.02) 4.72(0.04) 4.68(0.04) 4.69(0.04) 4.72(0.03) 4.69(0.03) 4.77(0.08) 4.77(0.03) 4.71(0.06) 4.76(0.05) 4.77(0.04) 4.73(0.05) 4.77(0.06) 4.77(0.02) 4.72(0.06) 4.77(0.05) 4.78(0.04) 4.74(0.04) 4.78(0.04) 4.80(0.04) 4.76(0.04) 4.77(0.04) 4.78(0.02) 4.77(0.02) 4.79(0.04) 4.83(0.04) 4.79(0.05) 4.80(0.02) 4.83(0.03) 4.77(0.06) 4.79(0.02) 4.80(0.01) 4.78(0.03) 4.78(0.02) 4.77(0.03) 4.78(0.02) 4.77(0.02) 4.76(0.02) 4.77(0.03) 4.78(0.03) 4.80(0.03) 4.78(0.02) 4.76(0.02) 4.77(0.02) 4.73(0.09) 4.75(0.02) 4.75(0.04) 4.79(0.06) 4.72(0.08) 4.69(0.07) 4.87(0.19) 4.85(0.03) 4.82(0.04) 4.85(0.03) 4.84(0.02) 4.88(0.04) 4.90(0.03) 4.85(0.05) 4.89(0.04) 4.93(0.05) 4.88(0.07) 4.92(0.05) 4.93(0.02) 4.88(0.06) 4.92(0.06) 4.89(0.05) 4.91(0.03) 4.92(0.04) 4.84(0.08) 4.90(0.07) 4.93(0.03) 4.93(0.03) 4.95(0.03) 4.93(0.03) 4.88(0.06) 4.89(0.02) 4.88(0.02) 4.85(0.03) 4.88(0.03) 4.89(0.02) 4.86(0.04) 4.90(0.05) 4.93(0.04) 4.86(0.07) 4.84(0.04) 4.84(0.05) 4.87(0.04) 4.90(0.03) 4.85(0.05) 4.85(0.03) 4.85(0.02) 4.85(0.02) 4.85(0.04) 4.82(0.03) 4.83(0.05) 4.87(0.03) 4.86(0.04) 4.88(0.06) 4.91(0.04) 4.88(0.03) 4.86(0.02) 4.86(0.02) 4.87(0.01) 4.85(0.04) 4.82(0.03) 4.86(0.05) 4.89(0.03) 4.88(0.02) 4.90(0.03) 4.92(0.04) 4.87(0.06) 4.92(0.06) 4.91(0.03) 4.86(0.06) 4.90(0.06) 4.89(0.02) 4.87(0.05) 4.91(0.04) 4.90(0.02) 4.86(0.04) 4.89(0.03) 4.86(0.04) 4.92(0.08) 4.92(0.06) 4.86(0.06) 4.92(0.05) 4.90(0.04) 4.85(0.05) 4.88(0.03) 4.88(0.01) 4.79(0.09) 4.47(0.34) 4.54(0.09) 4.63(0.09) 4.65(0.04) 4.63(0.04) 4.65(0.03) 4.64(0.07) 4.67(0.07) 4.71(0.06)
++ Max displacement in automask = 5.26 (mm) at sub-brick 41
++ Max delta displ  in automask = 0.40 (mm) at sub-brick 123
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb02.sub-S14.r04.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S14.aff12.1D anatSS.sub-S14_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source pb02.sub-S14.r04.tshift+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r04.warp.aff12.1D -prefix rm.epi.nomask.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S14.r04.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S14.r04.tshift+orig.BRIK is 5.361766 degrees from plumb.
++ opened source dataset 'pb02.sub-S14.r04.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1096318976
in use bytes     =  910709152
Total (incl. mmap):
system bytes     = 1096318976
in use bytes     =  910709152
max mmap regions =          1
max mmap bytes   =   92749824
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r04+tlrc.BRIK
++ total Elapsed time = 1427.2 sec
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r04.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.361766 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1096323072
in use bytes     =  910709312
Total (incl. mmap):
system bytes     = 1096323072
in use bytes     =  910709312
max mmap regions =          1
max mmap bytes   =   92749824
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r05.1D -prefix rm.epi.volreg.r05 -cubic -1Dmatrix_save mat.r05.vr.aff12.1D pb02.sub-S14.r05.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.175778 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S14.r05.tshift+orig.BRIK is 5.361766 degrees from plumb.
++ centers of base and input datasets are 1.11 mm apart
++ Reading input dataset ./pb02.sub-S14.r05.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38343 voxels
 + 5499 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.129  pitch=-1.836  yaw=-0.234  dS=+1.808  dL=+0.306  dP=+0.430
++ Mean: roll=+0.191  pitch=-1.655  yaw=-0.101  dS=+2.067  dL=+0.350  dP=+0.621
++ Max : roll=+0.260  pitch=-1.376  yaw=+0.028  dS=+2.416  dL=+0.395  dP=+0.748
++ Max displacements (mm) for each sub-brick:
 4.81(0.00) 4.81(0.07) 4.83(0.04) 4.83(0.03) 4.80(0.03) 4.81(0.03) 4.77(0.08) 4.82(0.13) 4.72(0.15) 4.71(0.04) 4.72(0.04) 4.75(0.04) 4.72(0.03) 4.76(0.05) 4.80(0.05) 4.80(0.05) 4.86(0.09) 4.85(0.03) 4.80(0.06) 4.81(0.02) 4.82(0.02) 4.77(0.05) 4.78(0.06) 4.76(0.02) 4.75(0.03) 4.78(0.04) 4.79(0.01) 4.74(0.05) 4.76(0.03) 4.75(0.02) 4.74(0.01) 4.74(0.02) 4.77(0.03) 4.75(0.02) 4.74(0.02) 4.77(0.03) 4.77(0.01) 4.75(0.02) 4.75(0.03) 4.75(0.02) 4.74(0.02) 4.73(0.02) 4.75(0.03) 4.75(0.01) 4.74(0.02) 4.74(0.01) 4.72(0.03) 4.76(0.04) 4.77(0.02) 4.72(0.05) 4.73(0.01) 4.74(0.02) 4.75(0.02) 4.79(0.04) 4.77(0.03) 4.69(0.08) 4.73(0.04) 4.72(0.03) 4.68(0.09) 4.75(0.07) 4.66(0.09) 4.71(0.06) 4.72(0.02) 4.69(0.03) 4.72(0.03) 4.72(0.03) 4.68(0.04) 4.69(0.02) 4.70(0.02) 4.70(0.02) 4.67(0.03) 4.73(0.07) 4.78(0.05) 4.73(0.05) 4.78(0.05) 4.79(0.02) 4.75(0.04) 4.77(0.06) 4.77(0.04) 4.78(0.03) 4.80(0.02) 4.77(0.02) 4.75(0.03) 4.77(0.03) 4.76(0.05) 4.78(0.03) 4.77(0.02) 4.73(0.04) 4.76(0.03) 4.77(0.02) 4.75(0.04) 4.77(0.03) 4.77(0.01) 4.79(0.03) 4.80(0.05) 4.72(0.08) 4.76(0.05) 4.80(0.04) 4.75(0.07) 4.76(0.04) 4.74(0.02) 4.74(0.01) 4.75(0.02) 4.73(0.02) 4.73(0.01) 4.76(0.03) 4.75(0.02) 4.73(0.03) 4.73(0.03) 4.72(0.02) 4.73(0.02) 4.75(0.03) 4.72(0.04) 4.72(0.04) 4.70(0.07) 4.72(0.09) 4.72(0.04) 4.69(0.04) 4.74(0.05) 4.76(0.03) 4.73(0.03) 4.76(0.03) 4.76(0.01) 4.74(0.03) 4.77(0.02) 4.79(0.02) 4.79(0.01) 4.80(0.03) 4.76(0.05) 4.78(0.06) 4.81(0.03) 4.79(0.03) 4.75(0.04) 4.79(0.04) 4.79(0.05) 4.77(0.02) 4.72(0.06) 4.65(0.07) 4.68(0.03) 4.69(0.04) 4.74(0.05) 4.80(0.07) 4.79(0.02) 4.84(0.05) 4.78(0.07) 4.80(0.05) 4.80(0.01) 4.77(0.04) 4.78(0.04) 4.76(0.02) 4.75(0.02) 4.77(0.02) 4.76(0.05) 4.77(0.01) 4.76(0.02) 4.73(0.04) 4.76(0.04) 4.77(0.02) 4.74(0.04) 4.78(0.05) 4.78(0.02) 4.73(0.05) 4.77(0.05) 4.74(0.04) 4.71(0.04) 4.72(0.05) 4.70(0.08) 4.75(0.07) 4.77(0.03) 4.73(0.06) 4.78(0.17) 4.71(0.17) 4.72(0.15) 4.62(0.11) 4.57(0.07) 4.73(0.19) 4.72(0.06) 4.75(0.04) 4.74(0.02) 4.75(0.03) 4.75(0.02) 4.76(0.02) 4.77(0.05) 4.73(0.04) 4.67(0.06) 4.70(0.03) 4.71(0.03) 4.70(0.02) 4.67(0.06) 4.68(0.02) 4.66(0.02) 4.66(0.02) 4.72(0.07) 4.76(0.04) 4.72(0.06) 4.73(0.02) 4.67(0.06) 4.70(0.03) 4.73(0.04) 4.76(0.04) 4.76(0.04) 4.76(0.02) 4.78(0.04) 4.76(0.02) 4.78(0.02) 4.77(0.02) 4.77(0.02) 4.76(0.03) 4.72(0.04) 4.73(0.03) 4.73(0.02) 4.75(0.02) 4.78(0.02) 4.76(0.03) 4.78(0.03) 4.80(0.03) 4.76(0.05) 4.73(0.07) 4.73(0.03) 4.77(0.05) 4.69(0.11) 4.71(0.04) 4.74(0.03) 4.78(0.05) 4.83(0.05) 4.81(0.03) 4.83(0.05) 4.77(0.07) 4.73(0.05) 4.73(0.02) 4.73(0.05) 4.75(0.03) 4.76(0.02) 4.75(0.02) 4.78(0.03) 4.77(0.02) 4.75(0.02) 4.78(0.07) 4.76(0.02) 4.77(0.01) 4.76(0.03) 4.74(0.03) 4.77(0.06) 4.75(0.04) 4.69(0.06) 4.73(0.05) 4.70(0.04) 4.72(0.04) 4.67(0.06) 4.70(0.04) 4.74(0.04) 4.71(0.04) 4.75(0.04) 4.75(0.04) 4.67(0.09) 4.67(0.02) 4.68(0.02) 4.67(0.05) 4.70(0.03) 4.71(0.02) 4.73(0.03) 4.73(0.03) 4.68(0.05) 4.78(0.11) 4.53(0.26) 4.37(0.19) 4.65(0.29) 4.59(0.07) 4.64(0.06) 4.67(0.04) 4.66(0.02) 4.64(0.02) 4.68(0.04) 4.71(0.03) 4.64(0.07) 4.67(0.03) 4.69(0.02) 4.71(0.02) 4.69(0.02) 4.71(0.04) 4.70(0.02) 4.64(0.06) 4.70(0.06) 4.72(0.03) 4.68(0.05) 4.73(0.05) 4.74(0.02) 4.67(0.07) 4.71(0.05) 4.72(0.02) 4.68(0.05) 4.68(0.01) 4.71(0.03) 4.71(0.01) 4.70(0.05) 4.71(0.03) 4.68(0.04) 4.70(0.02) 4.67(0.04) 4.69(0.05) 4.71(0.02) 4.67(0.04) 4.66(0.03) 4.71(0.06) 4.74(0.03) 4.74(0.03) 4.65(0.09) 4.65(0.01) 4.69(0.05) 4.70(0.04) 4.68(0.04) 4.68(0.04) 4.69(0.03) 4.72(0.03) 4.67(0.04) 4.68(0.02) 4.67(0.05) 4.71(0.04) 4.70(0.02) 4.69(0.02) 4.71(0.03) 4.67(0.04) 4.72(0.05) 4.67(0.06) 4.68(0.06) 4.68(0.05) 4.70(0.03) 4.73(0.03) 4.70(0.04) 4.70(0.06) 4.66(0.04) 4.67(0.04) 4.68(0.02) 4.64(0.04) 4.62(0.03) 4.66(0.04) 4.68(0.04) 4.71(0.09) 4.81(0.13) 4.72(0.11) 4.75(0.07) 4.74(0.04) 4.76(0.04) 4.77(0.01) 4.75(0.02) 4.78(0.03) 4.75(0.03) 4.75(0.02) 4.71(0.04) 4.75(0.06) 4.75(0.02) 4.71(0.04) 4.72(0.03) 4.71(0.02) 4.72(0.03) 4.77(0.05) 4.77(0.02) 4.75(0.02) 4.79(0.04) 4.74(0.06) 4.73(0.03) 4.74(0.03) 4.73(0.03) 4.76(0.03) 4.77(0.03) 4.72(0.05) 4.77(0.06) 4.74(0.06) 4.76(0.04) 4.76(0.01) 4.76(0.05) 4.77(0.04) 4.75(0.03) 4.75(0.02) 4.71(0.04) 4.76(0.05) 4.76(0.04) 4.76(0.03) 4.71(0.06) 4.70(0.03) 4.74(0.05) 4.75(0.03) 4.76(0.02) 4.74(0.04) 4.77(0.04) 4.76(0.02) 4.74(0.03) 4.72(0.04) 4.67(0.06) 4.72(0.06) 4.72(0.02) 4.72(0.02) 4.77(0.05) 4.76(0.01) 4.66(0.11) 4.46(0.21) 4.76(0.31) 4.63(0.14) 4.69(0.10) 4.65(0.31) 4.69(0.27) 4.75(0.10) 4.72(0.15) 4.67(0.05) 4.73(0.08) 4.84(0.11) 4.78(0.09) 4.82(0.06) 4.46(0.38) 4.81(0.35) 4.78(0.07) 4.72(0.07)
++ Max displacement in automask = 4.86 (mm) at sub-brick 16
++ Max delta displ  in automask = 0.38 (mm) at sub-brick 408
++ Wrote dataset to disk in ./rm.epi.volreg.r05+orig.BRIK
3dcalc -overwrite -a pb02.sub-S14.r05.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S14.aff12.1D anatSS.sub-S14_al_junk_mat.aff12.1D -I mat.r05.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source pb02.sub-S14.r05.tshift+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r05.warp.aff12.1D -prefix rm.epi.nomask.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S14.r05.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S14.r05.tshift+orig.BRIK is 5.361766 degrees from plumb.
++ opened source dataset 'pb02.sub-S14.r05.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1096318976
in use bytes     =  910709152
Total (incl. mmap):
system bytes     = 1096318976
in use bytes     =  910709152
max mmap regions =          1
max mmap bytes   =   92749824
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r05+tlrc.BRIK
++ total Elapsed time = 1408.8 sec
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r05.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.361766 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1096323072
in use bytes     =  910709312
Total (incl. mmap):
system bytes     = 1096323072
in use bytes     =  910709312
max mmap regions =          1
max mmap bytes   =   92749824
3dTstat -min -prefix rm.epi.min.r05 rm.epi.1.r05+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r05+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r06.1D -prefix rm.epi.volreg.r06 -cubic -1Dmatrix_save mat.r06.vr.aff12.1D pb02.sub-S14.r06.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.175778 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S14.r06.tshift+orig.BRIK is 5.361766 degrees from plumb.
++ centers of base and input datasets are 1.11 mm apart
++ Reading input dataset ./pb02.sub-S14.r06.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38353 voxels
 + 5478 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.069  pitch=-0.713  yaw=-0.218  dS=+1.735  dL=+0.258  dP=+0.797
++ Mean: roll=-0.019  pitch=-0.622  yaw=-0.126  dS=+1.991  dL=+0.315  dP=+0.845
++ Max : roll=+0.005  pitch=-0.504  yaw=+0.011  dS=+2.226  dL=+0.401  dP=+0.886
++ Max displacements (mm) for each sub-brick:
 2.89(0.00) 2.93(0.08) 2.93(0.03) 2.88(0.05) 2.91(0.03) 2.90(0.04) 2.94(0.04) 2.93(0.09) 2.89(0.06) 2.97(0.09) 2.96(0.05) 2.93(0.05) 2.94(0.08) 2.90(0.05) 2.91(0.02) 2.92(0.04) 2.92(0.04) 2.93(0.03) 2.92(0.05) 2.91(0.04) 2.93(0.04) 2.93(0.07) 2.90(0.05) 2.89(0.03) 2.89(0.03) 2.89(0.05) 2.88(0.06) 2.88(0.02) 2.87(0.03) 2.87(0.01) 2.87(0.02) 2.87(0.01) 2.87(0.01) 2.89(0.03) 2.88(0.03) 2.92(0.08) 2.89(0.04) 2.90(0.04) 2.84(0.10) 2.89(0.08) 2.88(0.03) 2.89(0.02) 2.91(0.03) 2.86(0.09) 2.88(0.02) 2.84(0.05) 2.89(0.06) 2.93(0.04) 2.87(0.06) 2.89(0.05) 2.88(0.03) 2.85(0.05) 2.88(0.03) 2.89(0.03) 2.89(0.03) 2.92(0.03) 2.87(0.05) 2.88(0.04) 2.87(0.06) 2.90(0.04) 2.90(0.02) 2.90(0.03) 2.91(0.01) 2.88(0.04) 2.91(0.04) 2.89(0.06) 2.90(0.04) 2.91(0.06) 2.87(0.05) 2.91(0.04) 2.84(0.07) 2.86(0.05) 2.92(0.06) 2.87(0.07) 2.87(0.03) 2.83(0.04) 2.82(0.02) 2.88(0.07) 2.97(0.11) 2.98(0.02) 2.92(0.06) 2.95(0.04) 2.94(0.07) 2.99(0.08) 3.01(0.03) 3.05(0.06) 3.13(0.08) 3.06(0.11) 3.07(0.04) 3.08(0.03) 3.06(0.03) 3.13(0.07) 3.07(0.07) 3.04(0.03) 3.04(0.01) 3.03(0.04) 3.04(0.04) 3.07(0.04) 3.04(0.03) 3.03(0.03) 3.07(0.04) 3.06(0.03) 3.10(0.04) 3.18(0.09) 3.22(0.05) 3.29(0.08) 3.22(0.07) 3.23(0.07) 3.19(0.08) 3.20(0.04) 3.17(0.13) 3.24(0.07) 3.16(0.08) 3.21(0.05) 3.19(0.03) 3.16(0.07) 3.21(0.06) 3.13(0.13) 3.19(0.09) 3.15(0.09) 3.19(0.11) 3.13(0.10) 3.20(0.13) 3.11(0.17) 3.19(0.11) 3.10(0.14) 3.20(0.15) 3.10(0.15) 3.16(0.09) 3.09(0.07) 3.17(0.10) 3.02(0.15) 2.94(0.16) 2.99(0.12) 3.00(0.10) 2.98(0.09) 3.05(0.10) 3.02(0.07) 3.07(0.05) 3.06(0.03) 3.08(0.05) 3.10(0.02) 3.09(0.04) 3.14(0.08) 3.08(0.06) 3.13(0.05) 3.11(0.03) 3.15(0.05) 3.16(0.03) 3.10(0.06) 3.17(0.07) 3.18(0.03) 3.13(0.07) 3.17(0.06) 3.14(0.05) 3.18(0.05) 3.15(0.07) 3.17(0.06) 3.16(0.02) 3.16(0.05) 3.20(0.07) 3.15(0.05) 3.18(0.07) 3.18(0.04) 3.21(0.04) 3.23(0.03) 3.16(0.07) 3.19(0.04) 3.17(0.03) 3.22(0.07) 3.23(0.03) 3.17(0.09) 3.17(0.01) 3.16(0.03) 3.18(0.05) 3.22(0.05) 3.18(0.05) 3.16(0.04) 3.15(0.04) 3.17(0.04) 3.19(0.03) 3.18(0.04) 3.21(0.05) 3.19(0.04) 3.22(0.03) 3.23(0.05) 3.15(0.12) 3.19(0.09) 3.15(0.05) 3.17(0.03) 3.21(0.04) 3.19(0.03) 3.20(0.05) 3.17(0.05) 3.20(0.05) 3.16(0.09) 3.16(0.02) 3.19(0.04) 3.15(0.05) 3.19(0.06) 3.09(0.09) 3.08(0.04) 3.20(0.13) 3.17(0.07) 3.14(0.11) 3.18(0.08) 3.22(0.06) 3.25(0.05) 3.22(0.07) 3.23(0.05) 3.26(0.05) 3.27(0.03) 3.28(0.05) 3.23(0.06) 3.25(0.04) 3.25(0.04) 3.26(0.03) 3.27(0.02) 3.25(0.02) 3.28(0.05) 3.24(0.06) 3.28(0.07) 3.28(0.04) 3.25(0.03) 3.27(0.04) 3.23(0.06) 3.24(0.03) 3.27(0.03) 3.23(0.05) 3.27(0.07) 3.22(0.06) 3.24(0.05) 3.23(0.05) 3.24(0.02) 3.25(0.04) 3.21(0.05) 3.23(0.02) 3.22(0.04) 3.26(0.06) 3.25(0.03) 3.22(0.06) 3.26(0.06) 3.24(0.04) 3.26(0.06) 3.27(0.02) 3.23(0.04) 3.24(0.03) 3.22(0.03) 3.18(0.09) 3.19(0.04) 3.19(0.03) 3.26(0.08) 3.36(0.10) 3.35(0.02) 3.36(0.02) 3.33(0.04) 3.34(0.03) 3.36(0.03) 3.31(0.05) 3.35(0.04) 3.36(0.03) 3.30(0.05) 3.31(0.01) 3.33(0.02) 3.32(0.06) 3.38(0.07) 3.33(0.05) 3.32(0.03) 3.33(0.03) 3.35(0.02) 3.37(0.05) 3.31(0.06) 3.32(0.02) 3.31(0.06) 3.34(0.03) 3.35(0.02) 3.33(0.02) 3.36(0.04) 3.31(0.05) 3.32(0.04) 3.34(0.02) 3.33(0.04) 3.37(0.07) 3.35(0.03) 3.31(0.04) 3.37(0.07) 3.39(0.04) 3.41(0.05) 3.40(0.01) 3.42(0.03) 3.39(0.03) 3.41(0.04) 3.40(0.04) 3.42(0.03) 3.45(0.05)
++ Max displacement in automask = 3.45 (mm) at sub-brick 294
++ Max delta displ  in automask = 0.17 (mm) at sub-brick 123
++ Wrote dataset to disk in ./rm.epi.volreg.r06+orig.BRIK
3dcalc -overwrite -a pb02.sub-S14.r06.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S14.aff12.1D anatSS.sub-S14_al_junk_mat.aff12.1D -I mat.r06.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source pb02.sub-S14.r06.tshift+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r06.warp.aff12.1D -prefix rm.epi.nomask.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S14.r06.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S14.r06.tshift+orig.BRIK is 5.361766 degrees from plumb.
++ opened source dataset 'pb02.sub-S14.r06.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109254144
in use bytes     =  923637648
Total (incl. mmap):
system bytes     = 1109254144
in use bytes     =  923637648
max mmap regions =          1
max mmap bytes   =   92749824
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r06+tlrc.BRIK
++ total Elapsed time = 1030.3 sec
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S14_WARP.nii mat.r06.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.361766 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1109254144
in use bytes     =  923637808
Total (incl. mmap):
system bytes     = 1109254144
in use bytes     =  923637808
max mmap regions =          1
max mmap bytes   =   92749824
3dTstat -min -prefix rm.epi.min.r06 rm.epi.1.r06+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r06+tlrc.BRIK
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D dfile.r04.1D dfile.r05.1D dfile.r06.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD rm.epi.min.r04+tlrc.HEAD rm.epi.min.r05+tlrc.HEAD rm.epi.min.r06+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask_epi_extents+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S14.r01.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S14.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S14.r02.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S14.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S14.r03.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S14.r03.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r04+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S14.r04.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S14.r04.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r05+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S14.r05.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S14.r05.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r06+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S14.r06.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S14.r06.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anatQQ.sub-S14.aff12.1D anatSS.sub-S14_al_junk_mat.aff12.1D -I
3dNwarpApply -master anatQQ.sub-S14+tlrc -dxyz 3 -source vr_base+orig -nwarp anatQQ.sub-S14_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S14+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.175778 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3571187712
in use bytes     = 1539834976
Total (incl. mmap):
system bytes     = 3878944768
in use bytes     = 1847592032
max mmap regions =          1
max mmap bytes   =  307757056
++ Warping:.Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 7.2 sec
3dcopy anatQQ.sub-S14+tlrc anat_final.sub-S14
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.sub-S14+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.sub-S14+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'RHDD(11.07)'
 +        -cmass x y z shifts =   -0.461    4.367   -4.642
 +  shift search range is +/- =   68.373   81.855   67.410
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.155416
   sp   = 0.306045
   mi   = 2.56287
   crM  = 0.0569568
   nmi  = 0.825766
   je   = 2.56287
   hel  = -0.106291
   crA  = 0.242464
   crU  = 0.199662
   lss  = 0.844584
   lpc  = 0.0484634
   lpa  = 0.951537
   lpc+ = 0.17978
   lpa+ = 1.08285
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.8
++ ###########################################################
3dTstat -mean -prefix rm.signal.vreg.r01 pb03.sub-S14.r01.volreg+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.vreg.r01+tlrc.BRIK
3dDetrend -polort 6 -prefix rm.noise.det -overwrite pb03.sub-S14.r01.volreg+tlrc
++ 3dDetrend: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTstat -stdev -prefix rm.noise.vreg.r01 rm.noise.det+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.vreg.r01+tlrc.BRIK
3dcalc -a rm.signal.vreg.r01+tlrc -b rm.noise.vreg.r01+tlrc -c mask_epi_extents+tlrc -expr c*a/b -prefix TSNR.vreg.r01.sub-S14
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.vreg.r01.sub-S14+tlrc.BRIK
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 4561 survived, 16772655 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 193815 survived, 16583401 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dNwarpApply -source copy_af_anat_w_skull+orig -master anat_final.sub-S14+tlrc -ainterp wsinc5 -nwarp anatQQ.sub-S14_WARP.nii anatQQ.sub-S14.aff12.1D -prefix follow_anat_anat_w_skull
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_anat_w_skull+orig'
++ -master dataset is 'anat_final.sub-S14+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3125477376
in use bytes     = 1331878960
Total (incl. mmap):
system bytes     = 3391799296
in use bytes     = 1598200880
max mmap regions =          1
max mmap bytes   =  266321920
++ Warping:.Z
++ Output dataset ./follow_anat_anat_w_skull+tlrc.BRIK
++ total Elapsed time = 7.8 sec
3dNwarpApply -source copy_af_aaseg+orig -master anat_final.sub-S14+tlrc -ainterp NN -nwarp anatQQ.sub-S14_WARP.nii anatQQ.sub-S14.aff12.1D -prefix follow_ROI_aaseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aaseg+orig'
++ -master dataset is 'anat_final.sub-S14+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3218518016
in use bytes     = 1598480112
Total (incl. mmap):
system bytes     = 3218771968
in use bytes     = 1598734064
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aaseg+tlrc.BRIK
++ total Elapsed time = 6.3 sec
3dNwarpApply -source copy_af_aeseg+orig -master pb03.sub-S14.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S14_WARP.nii anatQQ.sub-S14.aff12.1D -prefix follow_ROI_aeseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aeseg+orig'
++ -master dataset is 'pb03.sub-S14.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3218640896
in use bytes     = 1598612240
Total (incl. mmap):
system bytes     = 3218894848
in use bytes     = 1598866192
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aeseg+tlrc.BRIK
++ total Elapsed time = 6.4 sec
3dNwarpApply -source copy_af_FSvent_erode+orig -master pb03.sub-S14.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S14_WARP.nii anatQQ.sub-S14.aff12.1D -prefix follow_ROI_FSvent
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSvent_erode+orig'
++ -master dataset is 'pb03.sub-S14.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3125604352
in use bytes     = 1332004448
Total (incl. mmap):
system bytes     = 3391926272
in use bytes     = 1598326368
max mmap regions =          1
max mmap bytes   =  266321920
++ Warping:.Z
++ Output dataset ./follow_ROI_FSvent+tlrc.BRIK
++ total Elapsed time = 6.1 sec
3dNwarpApply -source copy_af_FSWe_erode+orig -master pb03.sub-S14.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S14_WARP.nii anatQQ.sub-S14.aff12.1D -prefix follow_ROI_FSWe
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSWe_erode+orig'
++ -master dataset is 'pb03.sub-S14.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3125604352
in use bytes     = 1332004576
Total (incl. mmap):
system bytes     = 3391926272
in use bytes     = 1598326496
max mmap regions =          1
max mmap bytes   =  266321920
++ Warping:.Z
++ Output dataset ./follow_ROI_FSWe+tlrc.BRIK
++ total Elapsed time = 6.5 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb03.volreg pb03.sub-S14.r01.volreg+tlrc.HEAD pb03.sub-S14.r02.volreg+tlrc.HEAD pb03.sub-S14.r03.volreg+tlrc.HEAD pb03.sub-S14.r04.volreg+tlrc.HEAD pb03.sub-S14.r05.volreg+tlrc.HEAD pb03.sub-S14.r06.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.0 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.0 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S14.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S14.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S14.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S14.r04.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r04.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S14.r05.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r05.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S14.r06.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r06.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 04 05 06 )
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S14.r01.blur pb03.sub-S14.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S14.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S14.r02.blur pb03.sub-S14.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S14.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S14.r03.blur pb03.sub-S14.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S14.r03.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S14.r04.blur pb03.sub-S14.r04.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S14.r04.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S14.r05.blur pb03.sub-S14.r05.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S14.r05.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S14.r06.blur pb03.sub-S14.r06.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S14.r06.blur+tlrc.BRIK

end
foreach run ( 01 02 03 04 05 06 )
3dAutomask -prefix rm.mask_r01 pb04.sub-S14.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S14.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 321.240662
 + Used gradual clip level = 291.772675 .. 350.001709
 + Number voxels above clip level = 69222
 + Clustering voxels ...
 + Largest cluster has 69129 voxels
 + Clustering voxels ...
 + Largest cluster has 69087 voxels
 + Filled    80 voxels in small holes; now have 69167 voxels
 + Clustering voxels ...
 + Largest cluster has 69166 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242130 voxels
 + Mask now has 69166 voxels
++ 69166 voxels in the mask [out of 311296: 22.22%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb04.sub-S14.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S14.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 319.254639
 + Used gradual clip level = 292.615875 .. 347.642822
 + Number voxels above clip level = 69208
 + Clustering voxels ...
 + Largest cluster has 69125 voxels
 + Clustering voxels ...
 + Largest cluster has 69075 voxels
 + Filled    76 voxels in small holes; now have 69151 voxels
 + Clustering voxels ...
 + Largest cluster has 69150 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242146 voxels
 + Mask now has 69150 voxels
++ 69150 voxels in the mask [out of 311296: 22.21%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb04.sub-S14.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S14.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 321.956268
 + Used gradual clip level = 292.350708 .. 350.875854
 + Number voxels above clip level = 69346
 + Clustering voxels ...
 + Largest cluster has 69268 voxels
 + Clustering voxels ...
 + Largest cluster has 69226 voxels
 + Filled    65 voxels in small holes; now have 69291 voxels
 + Clustering voxels ...
 + Largest cluster has 69291 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242005 voxels
 + Mask now has 69291 voxels
++ 69291 voxels in the mask [out of 311296: 22.26%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r04 pb04.sub-S14.r04.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S14.r04.blur+tlrc
++ Forming automask
 + Fixed clip level = 319.678192
 + Used gradual clip level = 290.725189 .. 347.263519
 + Number voxels above clip level = 69206
 + Clustering voxels ...
 + Largest cluster has 69107 voxels
 + Clustering voxels ...
 + Largest cluster has 69070 voxels
 + Filled    70 voxels in small holes; now have 69140 voxels
 + Filled     2 voxels in large holes; now have 69142 voxels
 + Clustering voxels ...
 + Largest cluster has 69141 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242155 voxels
 + Mask now has 69141 voxels
++ 69141 voxels in the mask [out of 311296: 22.21%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r05 pb04.sub-S14.r05.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S14.r05.blur+tlrc
++ Forming automask
 + Fixed clip level = 320.438202
 + Used gradual clip level = 292.533051 .. 348.807434
 + Number voxels above clip level = 69171
 + Clustering voxels ...
 + Largest cluster has 69076 voxels
 + Clustering voxels ...
 + Largest cluster has 69040 voxels
 + Filled    65 voxels in small holes; now have 69105 voxels
 + Clustering voxels ...
 + Largest cluster has 69105 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242191 voxels
 + Mask now has 69105 voxels
++ 69105 voxels in the mask [out of 311296: 22.20%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r06 pb04.sub-S14.r06.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S14.r06.blur+tlrc
++ Forming automask
 + Fixed clip level = 319.509216
 + Used gradual clip level = 292.711182 .. 347.658325
 + Number voxels above clip level = 69177
 + Clustering voxels ...
 + Largest cluster has 69085 voxels
 + Clustering voxels ...
 + Largest cluster has 69049 voxels
 + Filled    66 voxels in small holes; now have 69115 voxels
 + Clustering voxels ...
 + Largest cluster has 69115 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242181 voxels
 + Mask now has 69115 voxels
++ 69115 voxels in the mask [out of 311296: 22.20%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD -union -prefix full_mask.sub-S14
++ processing 6 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 6 volumes gives min count 0
++ voxel limits: 0 clipped, 69777 survived, 241519 were zero
++ writing result full_mask.sub-S14...
++ Output dataset ./full_mask.sub-S14+tlrc.BRIK
3dresample -master full_mask.sub-S14+tlrc -input anatQQ.sub-S14+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.sub-S14
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 73947 survived, 237349 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-S14...
++ Output dataset ./mask_anat.sub-S14+tlrc.BRIK
3dmask_tool -input full_mask.sub-S14+tlrc mask_anat.sub-S14+tlrc -inter -prefix mask_epi_anat.sub-S14
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 9310 clipped, 67207 survived, 234779 were zero
++ writing result mask_epi_anat.sub-S14...
++ Output dataset ./mask_epi_anat.sub-S14+tlrc.BRIK
3dABoverlap -no_automask full_mask.sub-S14+tlrc mask_anat.sub-S14+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#A=./full_mask.sub-S14+tlrc.BRIK  B=./mask_anat.sub-S14+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
69777        73947        76517        67207        2570         6740          3.6832      9.1146     1.0373     0.9588     1.0614
3ddot -dodice full_mask.sub-S14+tlrc mask_anat.sub-S14+tlrc
tee out.mask_ae_dice.txt
0.935223	
3dresample -master full_mask.sub-S14+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_centos_7_64/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71053 survived, 240243 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
++ Output dataset ./mask_group+tlrc.BRIK
3ddot -dodice mask_anat.sub-S14+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.978097	
foreach run ( 01 02 03 04 05 06 )
3dTstat -prefix rm.mean_r01 pb04.sub-S14.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.sub-S14.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S14.r01.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S14.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.sub-S14.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.sub-S14.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S14.r02.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S14.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.sub-S14.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.sub-S14.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S14.r03.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S14.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb04.sub-S14.r04.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb04.sub-S14.r04.blur+tlrc -b rm.mean_r04+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S14.r04.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S14.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb04.sub-S14.r05.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb04.sub-S14.r05.blur+tlrc -b rm.mean_r05+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S14.r05.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S14.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb04.sub-S14.r06.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb04.sub-S14.r06.blur+tlrc -b rm.mean_r06+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S14.r06.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S14.r06.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile motion_demean.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_demean
1d_tool.py -infile motion_deriv.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_deriv
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -show_censor_count -censor_prev_TR -censor_motion 0.25 motion_sub-S14
total number of censored TRs (simple form) = 6
1deval -a motion_sub-S14_censor.1D -b outcount_sub-S14_censor.1D -expr a*b
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 6
set nt = 412
set run = 01
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r01.1D
end
set nt = 412
set run = 02
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r02.1D
end
set nt = 295
set run = 03
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 03 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r03.1D
end
set nt = 412
set run = 04
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 04 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r04.1D
end
set nt = 412
set run = 05
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 05 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r05.1D
end
set nt = 295
set run = 06
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 06 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r06.1D
end
1dcat bpass.r01.1D bpass.r02.1D bpass.r03.1D bpass.r04.1D bpass.r05.1D bpass.r06.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-S14_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 03 04 05 06 )
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 01 -infile censor_sub-S14_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 5 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb03.sub-S14.r01.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 8 ; remaining = 404
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 404 retained time points MINUS 6 regressors ==> 398 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 107714 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+tlrc.BRIK
++ ===== clock time = 6s 376ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r01 rm.det_pcin_r01+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r01.1D -infile rm.ROIPC.FSvent.r01_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 01 6 -infile - -write ROIPC.FSvent.r01.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 02 -infile censor_sub-S14_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 5 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb03.sub-S14.r02.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 2 ; remaining = 410
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 410 retained time points MINUS 6 regressors ==> 404 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 107490 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+tlrc.BRIK
++ ===== clock time = 6s 300ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r02 rm.det_pcin_r02+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r02.1D -infile rm.ROIPC.FSvent.r02_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 02 6 -infile - -write ROIPC.FSvent.r02.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 03 -infile censor_sub-S14_combined_2.1D -write rm.censor.r03.1D
3dTproject -polort 5 -prefix rm.det_pcin_r03 -censor rm.censor.r03.1D -cenmode KILL -input pb03.sub-S14.r03.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 295 retained time points MINUS 6 regressors ==> 289 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 107490 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r03+tlrc.BRIK
++ ===== clock time = 4s 465ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r03 rm.det_pcin_r03+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r03.1D -infile rm.ROIPC.FSvent.r03_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 03 6 -infile - -write ROIPC.FSvent.r03.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 04 -infile censor_sub-S14_combined_2.1D -write rm.censor.r04.1D
3dTproject -polort 5 -prefix rm.det_pcin_r04 -censor rm.censor.r04.1D -cenmode KILL -input pb03.sub-S14.r04.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 2 ; remaining = 410
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 410 retained time points MINUS 6 regressors ==> 404 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 107490 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r04+tlrc.BRIK
++ ===== clock time = 6s 308ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r04 rm.det_pcin_r04+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r04.1D -infile rm.ROIPC.FSvent.r04_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 04 6 -infile - -write ROIPC.FSvent.r04.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 05 -infile censor_sub-S14_combined_2.1D -write rm.censor.r05.1D
3dTproject -polort 5 -prefix rm.det_pcin_r05 -censor rm.censor.r05.1D -cenmode KILL -input pb03.sub-S14.r05.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 4 ; remaining = 408
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 408 retained time points MINUS 6 regressors ==> 402 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 107490 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r05+tlrc.BRIK
++ ===== clock time = 6s 235ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r05 rm.det_pcin_r05+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r05.1D -infile rm.ROIPC.FSvent.r05_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 05 6 -infile - -write ROIPC.FSvent.r05.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 06 -infile censor_sub-S14_combined_2.1D -write rm.censor.r06.1D
3dTproject -polort 5 -prefix rm.det_pcin_r06 -censor rm.censor.r06.1D -cenmode KILL -input pb03.sub-S14.r06.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 295 retained time points MINUS 6 regressors ==> 289 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 107490 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r06+tlrc.BRIK
++ ===== clock time = 4s 410ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r06 rm.det_pcin_r06+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r06.1D -infile rm.ROIPC.FSvent.r06_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 06 6 -infile - -write ROIPC.FSvent.r06.1D
end
3dDeconvolve -input pb05.sub-S14.r01.scale+tlrc.HEAD pb05.sub-S14.r02.scale+tlrc.HEAD pb05.sub-S14.r03.scale+tlrc.HEAD pb05.sub-S14.r04.scale+tlrc.HEAD pb05.sub-S14.r05.scale+tlrc.HEAD pb05.sub-S14.r06.scale+tlrc.HEAD -censor censor_sub-S14_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.r01.1D ROIPC.FSvent.r01 -ortvec ROIPC.FSvent.r02.1D ROIPC.FSvent.r02 -ortvec ROIPC.FSvent.r03.1D ROIPC.FSvent.r03 -ortvec ROIPC.FSvent.r04.1D ROIPC.FSvent.r04 -ortvec ROIPC.FSvent.r05.1D ROIPC.FSvent.r05 -ortvec ROIPC.FSvent.r06.1D ROIPC.FSvent.r06 -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_demean.r04.1D mot_demean_r04 -ortvec mot_demean.r05.1D mot_demean_r05 -ortvec mot_demean.r06.1D mot_demean_r06 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -ortvec mot_deriv.r04.1D mot_deriv_r04 -ortvec mot_deriv.r05.1D mot_deriv_r05 -ortvec mot_deriv.r06.1D mot_deriv_r06 -polort 5 -num_stimts 0 -jobs 32 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-S14 -errts errts.sub-S14 -x1D_stop -cbucket all_betas.sub-S14 -bucket stats.sub-S14
++ 3dDeconvolve extending num_stimts from 0 to 1506 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 412 824 1119 1531 1943
++ STAT automask has 203772 voxels (out of 311296 = 65.5%)
++ Skipping check for initial transients
[7m*+ WARNING:[0m Input polort=5; Longest run=824.0 s; Recommended minimum polort=6
++ Number of time points: 2238 (before censor) ; 2222 (after)
 + Number of parameters:  1542 [1542 baseline ; 0 signal]
++ total shared memory needed = 9,414,836,224 bytes (about 9.4 billion)
++ mmap() memory allocated: 9,414,836,224 bytes (about 9.4 billion)
++ Memory required for output bricks = 9,414,836,224 bytes (about 9.4 billion)
** WARNING: in memory plot exceeds 1163231 elements!
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.sub-S14.r01.scale+tlrc.HEAD pb05.sub-S14.r02.scale+tlrc.HEAD pb05.sub-S14.r03.scale+tlrc.HEAD pb05.sub-S14.r04.scale+tlrc.HEAD pb05.sub-S14.r05.scale+tlrc.HEAD pb05.sub-S14.r06.scale+tlrc.HEAD" \
 -Rbeta all_betas.sub-S14_REML -fout -tout \
 -Rbuck stats.sub-S14_REML -Rvar stats.sub-S14_REMLvar \
 -Rfitts fitts.sub-S14_REML -Rerrts errts.sub-S14_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (2222x1542):  771.65  ++ OK ++
++ ----- Baseline-only matrix condition [X] (2222x1542):  771.65  ++ OK ++
++ ----- stim_base-only matrix condition [X] (2222x1506):  6.68711  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (2222x36):  1.01993  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb05.sub-S14.r01.scale+tlrc.HEAD pb05.sub-S14.r02.scale+tlrc.HEAD pb05.sub-S14.r03.scale+tlrc.HEAD pb05.sub-S14.r04.scale+tlrc.HEAD pb05.sub-S14.r05.scale+tlrc.HEAD pb05.sub-S14.r06.scale+tlrc.HEAD -censor censor_sub-S14_combined_2.1D -cenmode NTRP -ort X.nocensor.xmat.1D -prefix errts.sub-S14.tproject
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 6 input dataset names
++ Auto-catenated dataset has 6 runs
++ input time points = 2238 ; censored = 16 ; remaining = 2222
++ Setting up regressors
++ 6 Blocks * 1 polynomials -- 6 polort regressors
 + -- 1542 other fixed ort regressors
++ 2222 retained time points MINUS 1548 regressors ==> 674 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
++ THD_dset_to_vectim: allocated 2786721792 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 107490 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.sub-S14.tproject+tlrc.BRIK
++ ===== clock time = 5m 53s 262ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
-- no warnings for correlation matrix (cut = 0.400) --
1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt

initial DF                   : 2238 : 100.0%

DF used for regs of interest :    0 :   0.0%
DF used for censoring        :   16 :   0.7%
DF used for polort           :   36 :   1.6%
DF used for motion           :   72 :   3.2%
DF used for ROIPC            :   18 :   0.8%
DF used for bandpass         : 1416 :  63.3%
total DF used                : 1558 :  69.6%

final DF                     :  680 :  30.4%

3dTcat -prefix all_runs.sub-S14 pb05.sub-S14.r01.scale+tlrc.HEAD pb05.sub-S14.r02.scale+tlrc.HEAD pb05.sub-S14.r03.scale+tlrc.HEAD pb05.sub-S14.r04.scale+tlrc.HEAD pb05.sub-S14.r05.scale+tlrc.HEAD pb05.sub-S14.r06.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
