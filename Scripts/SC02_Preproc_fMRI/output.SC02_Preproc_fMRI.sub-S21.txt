echo auto-generated by afni_proc.py, Mon Nov 16 13:26:52 2020
auto-generated by afni_proc.py, Mon Nov 16 13:26:52 2020
echo (version 7.12, April 14, 2020)
(version 7.12, April 14, 2020)
echo execution started: `date`
date
execution started: Mon Nov 16 14:01:34 EST 2020
afni -ver
Precompiled binary linux_centos_7_64: Nov 12 2020 (Version AFNI_20.3.02 'Vespasian')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   12 Nov 2020
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-S21
endif
set output_dir = /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI
if ( -d /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/stimuli
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D01_Anatomical/anatSS.sub-S21.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/anatSS.sub-S21
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D01_Anatomical/anatUAC.sub-S21.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/copy_af_anat_w_skull
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S21/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S21/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S21/SUMA/fs_ap_latvent.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S21/SUMA/fs_ap_wm.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D01_Anatomical/anatQQ.sub-S21.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/anatQQ.sub-S21
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D01_Anatomical/anatQQ.sub-S21.aff12.1D /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/anatQQ.sub-S21.aff12.1D
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D01_Anatomical/anatQQ.sub-S21_WARP.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/anatQQ.sub-S21_WARP.nii
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/pb00.sub-S21.r01.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D00_OriginalData/sub-S21_SleepAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/pb00.sub-S21.r02.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D00_OriginalData/sub-S21_SleepDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/pb00.sub-S21.r03.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D00_OriginalData/sub-S21_SleepRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/pb00.sub-S21.r04.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D00_OriginalData/sub-S21_WakeAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/pb00.sub-S21.r05.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D00_OriginalData/sub-S21_WakeDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI/pb00.sub-S21.r06.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D00_OriginalData/sub-S21_WakeRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
set tr_counts = ( 412 412 295 412 412 295 )
cd /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S21/D02_Preproc_fMRI
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.sub-S21.r01.tcat+orig.HEAD pb00.sub-S21.r02.tcat+orig.HEAD pb00.sub-S21.r03.tcat+orig.HEAD pb00.sub-S21.r04.tcat+orig.HEAD pb00.sub-S21.r05.tcat+orig.HEAD pb00.sub-S21.r06.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.7 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 13.206333 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r01.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r01.automask+orig.BRIK is 13.206333 degrees from plumb.

-- running correlation on dataset pb00.sub-S21.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 13.206333 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r01+orig.BRIK is 13.206333 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r01+orig.BRIK is 13.206333 degrees from plumb.
++ Oblique dataset:./epi.r01+orig.BRIK is 13.206333 degrees from plumb.
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 13.206333 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r02.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r02.automask+orig.BRIK is 13.206333 degrees from plumb.

-- running correlation on dataset pb00.sub-S21.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 13.206333 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r02+orig.BRIK is 13.206333 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r02+orig.BRIK is 13.206333 degrees from plumb.
++ Oblique dataset:./epi.r02+orig.BRIK is 13.206333 degrees from plumb.
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 13.206318 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r03.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r03.automask+orig.BRIK is 13.206318 degrees from plumb.

-- running correlation on dataset pb00.sub-S21.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 13.206318 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r03+orig.BRIK is 13.206318 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r03+orig.BRIK is 13.206318 degrees from plumb.
++ Oblique dataset:./epi.r03+orig.BRIK is 13.206318 degrees from plumb.
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 11.698814 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r04.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r04.automask+orig.BRIK is 11.698814 degrees from plumb.

-- running correlation on dataset pb00.sub-S21.r04.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 11.698814 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r04+orig.BRIK is 11.698814 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r04+orig.BRIK is 11.698814 degrees from plumb.
++ Oblique dataset:./epi.r04+orig.BRIK is 11.698814 degrees from plumb.
++ Wrote dataset: ./radcor.20.r04.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 11.698814 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r05.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r05.automask+orig.BRIK is 11.698814 degrees from plumb.

-- running correlation on dataset pb00.sub-S21.r05.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 11.698814 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r05+orig.BRIK is 11.698814 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r05+orig.BRIK is 11.698814 degrees from plumb.
++ Oblique dataset:./epi.r05+orig.BRIK is 11.698814 degrees from plumb.
++ Wrote dataset: ./radcor.20.r05.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 11.698797 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r06.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r06.automask+orig.BRIK is 11.698797 degrees from plumb.

-- running correlation on dataset pb00.sub-S21.r06.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 11.698797 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r06+orig.BRIK is 11.698797 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r06+orig.BRIK is 11.698797 degrees from plumb.
++ Oblique dataset:./epi.r06+orig.BRIK is 11.698797 degrees from plumb.
++ Wrote dataset: ./radcor.20.r06.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S21.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r01.tcat+orig.BRIK is 13.206333 degrees from plumb.
++ 37134 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S21.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r02.tcat+orig.BRIK is 13.206333 degrees from plumb.
++ 37125 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S21.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r03.tcat+orig.BRIK is 13.206318 degrees from plumb.
++ 37139 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S21.r04.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r04.tcat+orig.BRIK is 11.698814 degrees from plumb.
++ 37040 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S21.r05.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r05.tcat+orig.BRIK is 11.698814 degrees from plumb.
++ 37080 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S21.r06.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r06.tcat+orig.BRIK is 11.698797 degrees from plumb.
++ 37170 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dDespike -NEW -nomask -prefix pb01.sub-S21.r01.despike pb00.sub-S21.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r01.tcat+orig.BRIK is 13.206333 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S21.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #14
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #11
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #5
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #10
........................................................
++ Elapsed despike time =  1s 349ms

++ FINAL: 53157064 data points, 1811512 edits [3.408%], 82760 big edits [0.156%]
++ Output dataset ./pb01.sub-S21.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S21.r02.despike pb00.sub-S21.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r02.tcat+orig.BRIK is 13.206333 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S21.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #8
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #11
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #3
++ start OpenMP thread #4
++ start OpenMP thread #9
++ start OpenMP thread #10
++ start OpenMP thread #12
++ start OpenMP thread #7
++ start OpenMP thread #5
++ start OpenMP thread #13
........................................................
++ Elapsed despike time =  1s 395ms

++ FINAL: 53157064 data points, 1770987 edits [3.332%], 78889 big edits [0.148%]
++ Output dataset ./pb01.sub-S21.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S21.r03.despike pb00.sub-S21.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r03.tcat+orig.BRIK is 13.206318 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S21.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #3
++ start OpenMP thread #5
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #0
++ start OpenMP thread #7
++ start OpenMP thread #6
++ start OpenMP thread #9
++ start OpenMP thread #14
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #10
++ start OpenMP thread #12
++ start OpenMP thread #11
........................................................
++ Elapsed despike time =  937ms

++ FINAL: 38060900 data points, 1248172 edits [3.279%], 53062 big edits [0.139%]
++ Output dataset ./pb01.sub-S21.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S21.r04.despike pb00.sub-S21.r04.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r04.tcat+orig.BRIK is 11.698814 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S21.r04.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #6
++ start OpenMP thread #3
++ start OpenMP thread #2
++ start OpenMP thread #1
++ start OpenMP thread #9
++ start OpenMP thread #4
++ start OpenMP thread #12
++ start OpenMP thread #11
++ start OpenMP thread #10
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #7
++ start OpenMP thread #14
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 378ms

++ FINAL: 53157476 data points, 2028683 edits [3.816%], 122402 big edits [0.230%]
++ Output dataset ./pb01.sub-S21.r04.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S21.r05.despike pb00.sub-S21.r05.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r05.tcat+orig.BRIK is 11.698814 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S21.r05.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #4
++ start OpenMP thread #12
++ start OpenMP thread #13
++ start OpenMP thread #3
++ start OpenMP thread #14
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #0
++ start OpenMP thread #7
++ start OpenMP thread #8
++ start OpenMP thread #11
++ start OpenMP thread #10
++ start OpenMP thread #9
........................................................
++ Elapsed despike time =  1s 425ms

++ FINAL: 53157888 data points, 2017102 edits [3.795%], 123439 big edits [0.232%]
++ Output dataset ./pb01.sub-S21.r05.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S21.r06.despike pb00.sub-S21.r06.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S21.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S21.r06.tcat+orig.BRIK is 11.698797 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S21.r06.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #11
++ start OpenMP thread #12
++ start OpenMP thread #7
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #13
++ start OpenMP thread #4
++ start OpenMP thread #3
++ start OpenMP thread #8
++ start OpenMP thread #9
++ start OpenMP thread #10
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  899ms

++ FINAL: 38060900 data points, 1347257 edits [3.540%], 60018 big edits [0.158%]
++ Output dataset ./pb01.sub-S21.r06.despike+orig.BRIK
end
foreach run ( 01 02 03 04 05 06 )
3dTshift -tzero 0 -quintic -prefix pb02.sub-S21.r01.tshift pb01.sub-S21.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S21.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S21.r01.despike+orig.BRIK is 13.206333 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S21.r02.tshift pb01.sub-S21.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S21.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S21.r02.despike+orig.BRIK is 13.206333 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S21.r03.tshift pb01.sub-S21.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S21.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S21.r03.despike+orig.BRIK is 13.206318 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S21.r04.tshift pb01.sub-S21.r04.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S21.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S21.r04.despike+orig.BRIK is 11.698814 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S21.r05.tshift pb01.sub-S21.r05.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S21.r05.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S21.r05.despike+orig.BRIK is 11.698814 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S21.r06.tshift pb01.sub-S21.r06.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S21.r06.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S21.r06.despike+orig.BRIK is 11.698797 degrees from plumb.
end
3dbucket -prefix vr_base pb02.sub-S21.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
align_epi_anat.py -anat2epi -anat anatSS.sub-S21+orig -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S21+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S21*
#Script is running (command trimmed):
  3dcopy ./anatSS.sub-S21+orig ./anatSS.sub-S21_unflipped+orig
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#Script is running (command trimmed):
  3dinfo ./anatSS.sub-S21_unflipped+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D02_Preproc_fMRI/anatSS.sub-S21_unflipped+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D02_Preproc_fMRI/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S21_unflipped+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./anatSS.sub-S21_unflipped_ob -newgrid 1.000000 ./anatSS.sub-S21_unflipped+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./anatSS.sub-S21_unflipped_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./anatSS.sub-S21_unflipped_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 13.206333 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 275.718475
 + Used gradual clip level = 254.169601 .. 300.870087
 + Number voxels above clip level = 37528
 + Clustering voxels ...
 + Largest cluster has 37149 voxels
 + Clustering voxels ...
 + Largest cluster has 36778 voxels
 + Filled   365 voxels in small holes; now have 37143 voxels
 + Filled     4 voxels in large holes; now have 37147 voxels
 + Clustering voxels ...
 + Largest cluster has 37146 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 93923 voxels
 + Mask now has 37149 voxels
++ 37149 voxels in the mask [out of 131072: 28.34%]
++ first  11 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   3 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_ts_ns+orig
#++ Applying threshold of 697.935852 on /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S21/D02_Preproc_fMRI/vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_ts_ns_wt -a ./vr_base_ts_ns+orig -expr 'min(1,(a/697.935852))'
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./anatSS.sub-S21_unflipped_ob_al_junk_wtal -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S21_unflipped_ob+orig -prefix ./anatSS.sub-S21_unflipped_ob_temp_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S21_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 13.206333 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 13.206333 degrees from plumb.
++ Source dataset: ./anatSS.sub-S21_unflipped_ob+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1414748 voxels in -source_automask+2
++ Zero-pad: ybot=5 ytop=3
++ Zero-pad: zbot=8 ztop=8
++ 37149 voxels [16.8%] in weight mask
++ Output dataset ./anatSS.sub-S21_unflipped_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 37149
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.364 35.164 24.839 (index)
 + source center of mass = 130.816 166.339 170.468 (index)
 + source-target CM = -1.206 5.058 -5.078 (xyz)
 + estimated center of mass shifts = -1.206 5.058 -5.078
++ shift param auto-range: -61.9..59.5 -63.3..73.4 -61.7..51.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.205582 .. 8.794418  center = -1.205582
 + Range param#2 [y-shift] = -4.941540 .. 15.058460  center = 5.058460
 + Range param#3 [z-shift] = -15.077744 .. 4.922256  center = -5.077744
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.205582 .. 38.794418  center = -1.205582
 + Range param#2 [y-shift] = -34.941540 .. 45.058460  center = 5.058460
 + Range param#3 [z-shift] = -45.077744 .. 34.922256  center = -5.077744
 + 12 free parameters
++ Normalized convergence radius = 0.0000096
++ Final parameter search ranges:
 +       x-shift =  -41.206 ..   38.794
 +       y-shift =  -34.942 ..   45.058
 +       z-shift =  -45.078 ..   34.922
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1414748 [out of 25259420] voxels
 + base mask has 50083 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - copying weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 276.009 .. 1041.96; base clip 189.533 .. 738.7
 +  - versus source range 0.172097 .. 945.082; base range 0 .. 876.786
 + 32928 total points stored in 301 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o+o-+o...++o-o-+--oo+-$.+ + - best 45 costs found:
    0 v= 0.539249:  -1.21   5.06  -5.08   0.00   0.00   0.00  [grid]
    1 v= 0.753835:  25.46  -8.27 -18.41  15.00  15.00  15.00  [grid]
    2 v= 0.780843:  33.12 -11.53   3.52  16.34   8.64  40.54  [rand]
    3 v= 0.784203: -27.87  -8.27 -18.41 -15.00  15.00 -15.00  [grid]
    4 v= 0.790799:  12.13  -8.27 -18.41 -15.00  15.00  30.00  [grid]
    5 v= 0.796143: -35.53 -11.53   3.52 -16.34   8.64 -40.54  [rand]
    6 v= 0.844405:   7.44 -15.37 -22.55  25.20  18.50 -13.54  [rand]
    7 v= 0.848484: -14.54  -8.27   8.26 -15.00 -15.00 -15.00  [grid]
    8 v= 0.850598:  -9.85 -15.37 -22.55 -25.20  18.50  13.54  [rand]
    9 v= 0.851216: -17.35  -4.41  19.27 -20.99 -15.73 -16.09  [rand]
   10 v= 0.856055:  12.13  -8.27   8.26  15.00 -15.00  15.00  [grid]
   11 v= 0.857373: -14.54  -8.27 -18.41  15.00  15.00 -30.00  [grid]
   12 v= 0.873260:  14.94  -4.41  19.27  20.99 -15.73  16.09  [rand]
   13 v= 0.903824: -27.87  -8.27  21.59 -30.00 -15.00 -30.00  [grid]
   14 v= 0.910720:  14.78 -14.43 -10.80  20.53   3.14 -10.08  [rand]
   15 v= 0.915677: -17.19 -14.43 -10.80 -20.53   3.14  10.08  [rand]
   16 v= 0.923798:  14.78 -14.43   0.65  20.53   3.14  10.08  [rand]
   17 v= 0.935622:  31.28  -9.63   6.73  11.16   9.40  34.39  [rand]
   18 v= 0.936750: -14.54  -8.27   8.26 -15.00 -15.00  15.00  [grid]
   19 v= 0.941167:  25.46  -8.27  21.59  30.00 -15.00  30.00  [grid]
   20 v= 0.947114:  12.13  -8.27   8.26  15.00 -15.00 -15.00  [grid]
   21 v= 0.953422: -17.19 -14.43   0.65 -20.53   3.14 -10.08  [rand]
   22 v= 0.957403: -33.69  -9.63   6.73 -11.16   9.40 -34.39  [rand]
   23 v= 0.959692: -14.54  -8.27 -18.41 -30.00  15.00  15.00  [grid]
   24 v= 0.963303:  12.13  -8.27 -18.41  30.00  15.00 -15.00  [grid]
   25 v= 0.967315:  14.78 -14.43   0.65  20.53  -3.14  10.08  [rand]
   26 v= 0.968364:  25.46 -21.61 -18.41  15.00  30.00  15.00  [grid]
   27 v= 0.973159: -27.87  -8.27   8.26 -30.00 -15.00 -15.00  [grid]
   28 v= 0.977360:  25.46  -8.27   8.26  30.00 -15.00  15.00  [grid]
   29 v= 0.977844:  12.13  -8.27 -18.41  15.00  15.00 -15.00  [grid]
   30 v= 0.988235: -17.19 -14.43   0.65 -20.53  -3.14 -10.08  [rand]
   31 v= 0.989091:  21.65 -18.52 -15.49   5.91  29.74  29.45  [rand]
   32 v= 1.016759: -27.87  -8.27  21.59 -30.00 -15.00 -15.00  [grid]
   33 v= 1.017626: -27.87 -21.61 -18.41 -15.00  30.00 -15.00  [grid]
   34 v= 1.019834: -14.54  -8.27 -18.41 -15.00  15.00  15.00  [grid]
   35 v= 1.020011:  12.13  -8.27  21.59  15.00 -30.00  15.00  [grid]
   36 v= 1.023236:  12.13 -21.61 -31.74 -15.00  30.00  30.00  [grid]
   37 v= 1.023946: -14.54  -8.27  21.59 -15.00 -15.00 -30.00  [grid]
   38 v= 1.026527:  12.13 -21.61 -18.41  30.00  15.00 -15.00  [grid]
   39 v= 1.031690:  12.13 -21.61 -31.74  30.00  30.00 -15.00  [grid]
   40 v= 1.033577: -24.06 -18.52 -15.49  -5.91  29.74 -29.45  [rand]
   41 v= 1.035755: -14.54 -21.61 -18.41 -30.00  15.00  15.00  [grid]
   42 v= 1.037737:  13.00  -4.39  -0.24  15.99 -13.53 -29.93  [rand]
   43 v= 1.038700: -14.54 -21.61 -31.74 -30.00  30.00  15.00  [grid]
   44 v= 1.042011: -14.54  -8.27  21.59 -15.00 -30.00 -15.00  [grid]
 + - A little optimization:*[#8004=0.398072] *[#8009=0.352198] *[#8010=0.121305] *[#8018=0.0117144] *[#8024=-0.0200705] *[#8025=-0.0586546] *[#8027=-0.0639735] *[#8028=-0.0699499] *[#8029=-0.0747292] *[#8030=-0.113711] *[#8036=-0.124513] *[#8037=-0.125959] *[#8042=-0.140162] .............................................
 + - costs of the above after a little optimization:
  * 0 v=-0.140162:  -1.29  -1.00  -2.28  -0.51   0.42  -0.04  [grid]
    1 v= 0.664440:  24.50  -6.58 -12.49  15.64  12.68  16.69  [grid]
    2 v= 0.676812:  31.44  -4.33   4.35  15.34   6.65  39.67  [rand]
    3 v= 0.637161: -24.26  -4.63 -10.99 -14.85  10.94 -15.60  [grid]
    4 v= 0.684030:  12.19  -7.38 -17.24  -9.37  13.91  28.92  [grid]
    5 v= 0.675524: -32.91  -4.15   4.23 -15.67   7.95 -37.96  [rand]
    6 v= 0.730286:  11.39 -10.18 -21.96  20.28  17.97  -9.76  [rand]
    7 v=-0.043982:  -2.42  -0.07  -0.36  -0.70  -0.71  -1.37  [grid]
    8 v= 0.733007:  -6.96 -12.13 -22.04 -17.98  16.58  13.53  [rand]
    9 v= 0.087181:  -3.39   1.30   0.05  -2.04  -1.97  -0.24  [rand]
   10 v= 0.187257:   1.17   3.64   4.80   0.57  -4.72   2.10  [grid]
   11 v= 0.687673:  -9.52  -6.03 -17.87  12.38  12.32 -29.22  [grid]
   12 v= 0.003685:   0.88   1.02   1.47   1.22  -2.10   0.51  [rand]
   13 v= 0.772869: -30.12  -3.11  20.29 -25.80 -12.95 -28.73  [grid]
   14 v=-0.032125:   2.25  -1.87  -4.00   1.18   1.36   1.81  [rand]
   15 v= 0.382666: -10.28  -0.62  -3.51  -5.45   1.50  -0.91  [rand]
   16 v= 0.622087:  17.27  -4.33  -5.56  12.87   5.81  16.30  [rand]
   17 v= 0.662560:  30.56  -3.13   3.64  12.24   7.04  42.46  [rand]
   18 v= 0.058100:  -2.01   1.86   2.47  -0.75  -3.00  -0.77  [grid]
   19 v= 0.652068:  21.40   1.88   8.69  15.01  -7.60  28.27  [grid]
   20 v=-0.024234:   1.82   0.63  -0.08   1.67  -1.43   0.49  [grid]
   21 v= 0.389193: -11.90  -2.68  -0.97  -4.55   0.74  -5.78  [rand]
   22 v= 0.658864: -31.94  -2.37   4.54 -15.58   6.26 -36.69  [rand]
   23 v=-0.079022:  -1.34   1.36   0.29  -0.39  -1.80  -0.16  [grid]
   24 v= 0.469382:   3.15  -6.69 -18.10  -0.59  13.26   5.72  [grid]
   25 v= 0.156976:   4.87  -0.24   0.67   2.26  -0.91   3.56  [rand]
   26 v= 0.536898:   5.78   2.98  -1.87  -0.00   3.14  10.86  [grid]
   27 v= 0.635808: -25.86   0.32   3.57 -16.91  -1.86 -19.58  [grid]
   28 v= 0.694438:  24.87  -3.52   6.30  21.63  -4.74  18.65  [grid]
   29 v= 0.362684:   5.59  -5.75 -13.03   3.02   7.05   2.27  [grid]
   30 v= 0.231908:  -5.57   1.48   2.24  -3.35  -2.57  -1.32  [rand]
   31 v= 0.782031:  20.94 -15.68 -20.42   2.96  25.46  24.46  [rand]
   32 v= 0.570667: -17.99   5.41   3.60  -9.75  -5.00 -11.03  [grid]
   33 v= 0.628215: -18.23  -3.26  -9.32 -12.15   8.88 -14.87  [grid]
   34 v= 0.400468:  -0.40  -6.37 -13.04  -0.06   9.57   0.59  [grid]
   35 v=-0.114886:  -0.63   1.06  -0.18   0.15  -1.14   0.11  [grid]
   36 v= 0.943000:  12.15 -17.00 -31.38 -14.31  29.82  29.50  [grid]
   37 v= 0.639673: -15.34   2.38  11.15  -9.26 -11.22 -28.31  [grid]
   38 v= 0.805656:  11.79 -14.42 -21.08  25.31  15.71 -11.11  [grid]
   39 v= 1.004074:  11.73 -21.66 -31.73  27.95  28.57 -15.13  [grid]
   40 v= 0.646797: -17.32  -7.40  -9.19  -1.42   9.76 -27.38  [rand]
   41 v= 0.709088:  -8.75  -4.53 -21.87 -18.92  13.57  14.94  [grid]
   42 v= 0.106558:   1.45   3.66   1.63   1.00  -3.50   1.13  [rand]
   43 v= 0.991502: -13.66 -21.69 -31.11 -25.69  29.42  11.24  [grid]
   44 v= 0.326346:  -5.21   2.41   6.51  -3.48  -5.46   1.36  [grid]
 + - save # 0 for possible use in twobest
 + - skip #35 for twobest: too close to set # 0
 + - skip #23 for twobest: too close to set # 0
 + - skip # 7 for twobest: too close to set # 0
 + - skip #14 for twobest: too close to set # 0
 + - skip #20 for twobest: too close to set # 0
 + - skip #12 for twobest: too close to set # 0
 + - skip #18 for twobest: too close to set #35
 + - skip # 9 for twobest: too close to set # 0
 + - skip #42 for twobest: too close to set #35
 + - skip #25 for twobest: too close to set #20
 + - skip #10 for twobest: too close to set #12
 + - skip #30 for twobest: too close to set # 7
 + - save #44 for possible use in twobest
 + - save #29 for possible use in twobest
 + - save #15 for possible use in twobest
 + - save #21 for possible use in twobest
 + - save #34 for possible use in twobest
 + - save #24 for possible use in twobest
 + - save #26 for possible use in twobest
 + - save #32 for possible use in twobest
 + - save #16 for possible use in twobest
 + - save #33 for possible use in twobest
 + - save #27 for possible use in twobest
 + - save # 3 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save #19 for possible use in twobest
 + - save #22 for possible use in twobest
 + - save #17 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - skip # 5 for twobest: too close to set #22
 + - skip # 2 for twobest: too close to set #17
 + - save # 4 for possible use in twobest
 + - save #11 for possible use in twobest
 + - save #28 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 279.301 .. 1054.4; base clip 189.943 .. 755.831
 +  - versus source range 0.0126321 .. 945.101; base range 0 .. 878.101
 + 32711 total points stored in 320 'RHDD(12.342)' bloks
*[#10896=-0.154667] *[#10907=-0.16237] *[#10917=-0.166641] *[#10920=-0.167235] *[#10923=-0.17156] *[#10925=-0.171681] *[#10928=-0.177433] *[#10933=-0.180168] *[#10936=-0.183534] *[#10941=-0.184953] *[#10945=-0.186854] *[#10948=-0.190772] 
 + - param set #1 has cost=-0.190772
 + -- Parameters = -1.1611 -0.4181 -2.0428 -0.2290 0.1366 -0.1370 1.0009 1.0008 0.9996 -0.0008 0.0093 -0.0006
 + - param set #2 has cost=-0.105589
 + -- Parameters = -0.7885 0.5371 -0.3001 -0.1940 -0.7346 -0.3220 0.9797 0.9998 0.9918 -0.0092 0.0060 -0.0047
 + - param set #3 has cost=0.209256
 + -- Parameters = 4.3075 -4.6930 -7.0075 2.1098 3.7502 2.6528 1.0138 0.9930 0.9910 0.0216 0.0024 0.0059
 + - param set #4 has cost=-0.046180
 + -- Parameters = -2.6188 -2.0235 -4.6525 -1.0781 1.8440 -0.5758 0.9978 1.0041 1.0160 -0.0084 0.0014 0.0066
 + - param set #5 has cost=-0.018521
 + -- Parameters = -2.8767 -3.4070 -2.8579 -0.6339 1.7695 -1.2048 0.9904 0.9883 0.9997 0.0002 0.0074 0.0162
 + - param set #6 has cost=-0.134107
 + -- Parameters = -1.2380 -1.5134 -0.2652 0.1412 1.3646 -1.0161 0.9777 0.9984 0.9728 0.0055 0.0251 0.0327
 + - param set #7 has cost=0.380147
 + -- Parameters = 1.3834 -2.5767 -10.3477 0.4164 7.1914 1.6167 0.9700 0.9970 0.9910 -0.0515 0.0005 -0.0125
 + - param set #8 has cost=0.037811
 + -- Parameters = 2.7854 6.0869 -2.7694 1.8615 -4.0730 1.3871 0.9527 1.0585 0.9862 0.0202 0.0026 -0.0842
 + - param set #9 has cost=0.269304
 + -- Parameters = -3.9210 -2.4454 -1.3108 -0.5379 1.5304 -3.2648 0.9770 1.0045 0.9585 0.0148 -0.0446 0.0227
 + - param set #10 has cost=0.360200
 + -- Parameters = 10.6585 -2.8605 -3.7155 6.4724 0.0848 1.6935 0.9722 0.9954 0.9903 0.0059 -0.0096 -0.0225
 + - param set #11 has cost=0.438556
 + -- Parameters = -14.1079 -6.5874 -8.5059 -5.9235 6.8405 -5.6612 0.9782 0.9881 0.9605 -0.0252 0.0139 0.0009
*[#12013=-0.1916] *[#12016=-0.192036] *[#12017=-0.194055] *[#12018=-0.198678] *[#12019=-0.203855] *[#12021=-0.207367] *[#12022=-0.208452] *[#12023=-0.210993] *[#12027=-0.214379] *[#12028=-0.218077] *[#12036=-0.220109] *[#12039=-0.220804] *[#12040=-0.224291] *[#12041=-0.225256] *[#12042=-0.227793] *[#12045=-0.228795] *[#12046=-0.229342] *[#12051=-0.232807] *[#12052=-0.233424] *[#12053=-0.234472] 
 + - param set #12 has cost=-0.234472
 + -- Parameters = -0.2463 0.4305 -2.0336 0.2340 -0.2076 0.2768 1.0025 1.0123 0.9975 -0.0035 0.0078 -0.0045
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0313 
 + --- dist(#3,#1) = 0.167 
 + --- dist(#4,#1) = 0.0621 
 + --- dist(#5,#1) = 0.0503 
 + --- dist(#6,#1) = 0.0931 
 + --- dist(#7,#1) = 0.359 
 + --- dist(#8,#1) = 0.113 
 + --- dist(#9,#1) = 0.236 
 + --- dist(#10,#1) = 0.136 
 + --- dist(#11,#1) = 0.216 
 + --- dist(#12,#1) = 0.173 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 281.636 .. 1064.46; base clip 190.31 .. 775.178
 +  - versus source range 6.09914e-06 .. 945.103; base range 0 .. 879.071
 + 32433 total points stored in 323 'RHDD(12.2051)' bloks
 + - param set #1 has cost=-0.210693
 + -- Parameters = -0.1904 0.4472 -1.8826 0.2902 -0.1076 0.3342 1.0032 1.0123 0.9984 0.0062 0.0092 -0.0032
 + - param set #2 has cost=-0.171602
 + -- Parameters = -1.0441 -0.2296 -1.8272 -0.1429 0.0073 -0.1144 1.0024 1.0022 1.0001 -0.0001 0.0173 0.0004
 + - param set #3 has cost=-0.151345
 + -- Parameters = -0.6678 -0.8133 -0.0420 0.3267 1.1222 -0.2994 1.0022 1.0111 0.9674 0.0076 0.0232 0.0280
 + - param set #4 has cost=-0.224008
 + -- Parameters = -0.1450 0.9774 -1.3017 0.3316 0.0573 0.1852 0.9950 1.0221 0.9925 0.0026 0.0057 0.0054
 + - param set #5 has cost=-0.156131
 + -- Parameters = -1.1958 -0.5656 -2.2623 -0.2848 1.0497 -0.1760 0.9834 1.0139 1.0125 -0.0097 0.0090 0.0207
 + - param set #6 has cost=-0.148591
 + -- Parameters = -0.1129 -1.4271 -1.9887 0.1699 0.8481 0.5639 0.9988 0.9952 0.9989 0.0021 0.0043 0.0138
 + - param set #7 has cost=-0.097484
 + -- Parameters = 0.0036 3.4432 -2.4361 0.3230 -3.7105 0.5108 1.0020 1.0149 0.9855 0.0069 0.0101 -0.0818
 + - param set #8 has cost=0.051317
 + -- Parameters = 2.6876 -3.3098 -2.6211 1.9510 1.7611 1.3619 0.9886 0.9794 0.9828 0.0269 -0.0018 0.0110
 + - param set #9 has cost=-0.077701
 + -- Parameters = 0.3334 -1.7835 -1.7638 0.0116 1.4486 1.4252 0.9894 1.0000 0.9870 0.0196 -0.0362 0.0185
 + - param set #10 has cost=0.026791
 + -- Parameters = 2.6893 -0.2030 -3.2253 0.9565 0.3509 2.4214 0.9938 0.9992 0.9971 0.0062 -0.0031 -0.0179
 + - param set #11 has cost=0.047759
 + -- Parameters = 1.2362 -1.8989 -4.0900 0.6788 0.4803 1.3598 0.9870 0.9947 1.0233 -0.0434 -0.0024 -0.0070
 + - param set #12 has cost=0.327662
 + -- Parameters = -9.2166 -5.1090 -8.4734 -4.7862 4.9940 -1.7242 0.9749 0.9878 0.9865 -0.0628 0.0215 0.0030
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0383 
 + --- dist(#3,#1) = 0.0543 
 + --- dist(#4,#1) = 0.0692 
 + --- dist(#5,#1) = 0.102 
 + --- dist(#6,#1) = 0.0732 
 + --- dist(#7,#1) = 0.392 
 + --- dist(#8,#1) = 0.189 
 + --- dist(#9,#1) = 0.105 
 + --- dist(#10,#1) = 0.207 
 + --- dist(#11,#1) = 0.116 
 + --- dist(#12,#1) = 0.294 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 284.316 .. 1074.63; base clip 190.481 .. 790.209
 +  - versus source range 0 .. 945.103; base range 0 .. 879.337
 + 33535 total points stored in 348 'RHDD(12.1215)' bloks
 + - param set #1 has cost=-0.161311
 + -- Parameters = -0.2516 1.0202 -1.1820 0.1901 -0.0128 0.2628 0.9954 1.0229 0.9929 0.0025 0.0092 0.0057
 + - param set #2 has cost=-0.148720
 + -- Parameters = -0.1917 0.4420 -1.8193 0.3017 -0.0880 0.3041 1.0028 1.0122 0.9956 0.0056 0.0087 -0.0046
 + - param set #3 has cost=-0.145911
 + -- Parameters = -0.7118 0.4228 -2.0001 0.0149 -0.0676 0.0653 1.0037 1.0120 1.0015 -0.0002 0.0140 -0.0028
 + - param set #4 has cost=-0.127450
 + -- Parameters = -0.8638 -0.2748 -1.8978 -0.1665 0.8053 0.1599 0.9906 1.0158 1.0034 -0.0079 0.0094 0.0177
 + - param set #5 has cost=-0.128798
 + -- Parameters = -0.4874 -0.3822 -0.7474 0.3689 1.0419 -0.1102 0.9957 1.0163 0.9814 0.0052 0.0203 0.0246
 + - param set #6 has cost=-0.137434
 + -- Parameters = -0.2695 -0.6079 -1.7794 0.1982 0.8268 0.3797 0.9983 1.0103 0.9988 0.0036 0.0036 0.0148
 + - param set #7 has cost=-0.045240
 + -- Parameters = -0.1778 3.7527 -1.8346 0.4167 -3.9501 0.2025 1.0033 1.0163 0.9847 0.0062 0.0098 -0.0786
 + - param set #8 has cost=-0.111519
 + -- Parameters = 0.3268 -0.6497 -1.0749 0.4469 1.0704 0.8423 0.9965 1.0118 0.9926 0.0224 -0.0142 0.0258
 + - param set #9 has cost=-0.124195
 + -- Parameters = 0.7054 0.8777 -2.3255 0.7370 0.0287 0.9577 0.9972 1.0221 1.0061 0.0169 -0.0120 -0.0042
 + - param set #10 has cost=-0.079769
 + -- Parameters = 0.5079 -0.4725 -2.8790 0.3207 0.6328 1.0816 0.9833 1.0063 1.0196 0.0046 -0.0084 0.0077
 + - param set #11 has cost=-0.040141
 + -- Parameters = 0.3826 -1.2925 -1.6522 0.8323 0.4374 0.5214 0.9915 0.9905 0.9991 0.0279 -0.0074 0.0084
 + - param set #12 has cost=0.224833
 + -- Parameters = -5.8495 -5.0168 -5.6414 -3.1790 3.0832 -1.1186 0.9701 0.9718 1.0021 -0.0589 0.0247 0.0100
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.046 
 + --- dist(#3,#1) = 0.0381 
 + --- dist(#4,#1) = 0.0411 
 + --- dist(#5,#1) = 0.0852 
 + --- dist(#6,#1) = 0.0544 
 + --- dist(#7,#1) = 0.0957 
 + --- dist(#8,#1) = 0.106 
 + --- dist(#9,#1) = 0.0795 
 + --- dist(#10,#1) = 0.379 
 + --- dist(#11,#1) = 0.114 
 + --- dist(#12,#1) = 0.277 
 + - Total coarse refinement net CPU time = 0.0 s; 3381 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 287.579 .. 1086.6; base clip 190.481 .. 790.209
 +  - versus source range 0 .. 945.466; base range 0 .. 880.105
 + 33483 total points stored in 353 'RHDD(12.0364)' bloks
 + - cost(#1)=-0.117109 *
 + -- Parameters = -0.2516 1.0202 -1.1820 0.1901 -0.0128 0.2628 0.9954 1.0229 0.9929 0.0025 0.0092 0.0057
 + - cost(#2)=-0.108060  
 + -- Parameters = -0.1917 0.4420 -1.8193 0.3017 -0.0880 0.3041 1.0028 1.0122 0.9956 0.0056 0.0087 -0.0046
 + - cost(#3)=-0.101515  
 + -- Parameters = -0.7118 0.4228 -2.0001 0.0149 -0.0676 0.0653 1.0037 1.0120 1.0015 -0.0002 0.0140 -0.0028
 + - cost(#4)=-0.094907  
 + -- Parameters = -0.2695 -0.6079 -1.7794 0.1982 0.8268 0.3797 0.9983 1.0103 0.9988 0.0036 0.0036 0.0148
 + - cost(#5)=-0.087187  
 + -- Parameters = -0.4874 -0.3822 -0.7474 0.3689 1.0419 -0.1102 0.9957 1.0163 0.9814 0.0052 0.0203 0.0246
 + - cost(#6)=-0.082136  
 + -- Parameters = -0.8638 -0.2748 -1.8978 -0.1665 0.8053 0.1599 0.9906 1.0158 1.0034 -0.0079 0.0094 0.0177
 + - cost(#7)=-0.082819  
 + -- Parameters = 0.7054 0.8777 -2.3255 0.7370 0.0287 0.9577 0.9972 1.0221 1.0061 0.0169 -0.0120 -0.0042
 + - cost(#8)=-0.071687  
 + -- Parameters = 0.3268 -0.6497 -1.0749 0.4469 1.0704 0.8423 0.9965 1.0118 0.9926 0.0224 -0.0142 0.0258
 + - cost(#9)=-0.037598  
 + -- Parameters = 0.5079 -0.4725 -2.8790 0.3207 0.6328 1.0816 0.9833 1.0063 1.0196 0.0046 -0.0084 0.0077
 + - cost(#10)=-0.009659  
 + -- Parameters = -0.1778 3.7527 -1.8346 0.4167 -3.9501 0.2025 1.0033 1.0163 0.9847 0.0062 0.0098 -0.0786
 + - cost(#11)=-0.006505  
 + -- Parameters = 0.3826 -1.2925 -1.6522 0.8323 0.4374 0.5214 0.9915 0.9905 0.9991 0.0279 -0.0074 0.0084
 + - cost(#12)=0.260053  
 + -- Parameters = -5.8495 -5.0168 -5.6414 -3.1790 3.0832 -1.1186 0.9701 0.9718 1.0021 -0.0589 0.0247 0.0100
 + - cost(#13)=0.563845  
 + -- Parameters = -1.2056 5.0585 -5.0777 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.119252 *
 + -- Parameters = -0.2414 1.0107 -1.1683 0.1819 -0.0127 0.2808 0.9967 1.0228 0.9918 0.0024 0.0046 0.0053
 + - cost(#2)=-0.111395  
 + -- Parameters = -0.1070 0.6153 -1.6049 0.3062 -0.1808 0.4083 1.0016 1.0131 0.9961 0.0060 0.0044 -0.0026
 + - cost(#3)=-0.106519  
 + -- Parameters = -0.5878 0.4389 -1.9082 0.0508 -0.0569 0.1107 1.0025 1.0136 0.9994 -0.0001 0.0108 -0.0026
 + - cost(#4)=-0.105522  
 + -- Parameters = -0.1717 -0.2954 -1.5799 0.1786 0.8256 0.4742 0.9996 1.0151 0.9944 0.0029 0.0058 0.0153
 + - cost(#5)=-0.100689  
 + -- Parameters = -0.3806 -0.0877 -0.6996 0.1720 0.7608 0.1465 0.9993 1.0169 0.9850 0.0063 0.0147 0.0217
 + - cost(#6)=-0.098691  
 + -- Parameters = -0.3754 0.1239 -1.3489 0.1265 0.6061 0.1597 0.9943 1.0182 1.0010 -0.0029 0.0097 0.0186
 + - cost(#7)=-0.100560  
 + -- Parameters = 0.6245 1.1883 -1.6644 0.6345 -0.2296 1.0099 0.9959 1.0232 0.9962 0.0173 -0.0144 -0.0042
 + - cost(#8)=-0.091508  
 + -- Parameters = 0.4416 -0.5269 -1.0839 0.4641 1.0442 0.9229 1.0006 1.0151 0.9911 0.0134 -0.0091 0.0249
 + - cost(#9)=-0.077370  
 + -- Parameters = 0.3619 -0.1179 -2.5563 0.4299 0.6089 0.9997 1.0009 1.0146 1.0139 0.0089 -0.0081 0.0081
 + - cost(#10)=-0.031508  
 + -- Parameters = -0.2546 3.5517 -1.4399 0.2974 -3.5324 0.2936 1.0031 1.0196 0.9765 0.0020 0.0095 -0.0693
 + - cost(#11)=-0.071980  
 + -- Parameters = 0.5707 -0.3591 -1.8673 0.7583 0.5866 0.7681 1.0035 1.0095 0.9936 0.0261 -0.0066 0.0051
 + - cost(#12)=0.177579  
 + -- Parameters = -4.8321 -4.3234 -3.9571 -2.4411 2.9698 -1.3154 0.9827 0.9823 1.0195 -0.0749 0.0296 0.0368
 + - cost(#13)=-0.098820  
 + -- Parameters = -0.2775 0.2066 -1.6165 0.2745 -0.1071 0.2603 1.0050 1.0070 0.9950 0.0039 0.0052 -0.0025
 + - case #1 is now the best
 + - Initial  cost = -0.119252
 + - Initial fine Parameters = -0.2414 1.0107 -1.1683 0.1819 -0.0127 0.2808 0.9967 1.0228 0.9918 0.0024 0.0046 0.0053
 + - Finalish cost = -0.119458 ; 151 funcs
 + - ini Finalish Parameters = -0.2429 1.0009 -1.1636 0.1762 -0.0141 0.2853 0.9967 1.0229 0.9919 0.0024 0.0045 0.0053
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 287.695 .. 1086.82; base clip 190.481 .. 790.209
 +  - versus source range 0 .. 945.466; base range 0 .. 880.105
*[#15861=-0.650008] *[#15868=-0.653687] *[#15901=-0.655216] *[#15933=-0.655247] *[#15934=-0.655412] *[#15944=-0.655651] *[#15947=-0.655799] *[#15949=-0.655818] *[#15950=-0.655843] *[#15953=-0.655906] *[#15954=-0.65591] *[#15956=-0.655981] *[#15957=-0.655984] *[#15959=-0.655993] *[#15960=-0.656022] *[#15961=-0.656071] *[#15964=-0.656169] *[#15965=-0.656321] *[#15966=-0.65646] *[#15971=-0.656598] *[#15972=-0.656714] *[#15973=-0.656873] *[#15974=-0.656947] *[#15975=-0.6571] *[#15980=-0.657201] *[#15981=-0.657262] *[#15982=-0.657298] *[#15983=-0.657369] *[#15984=-0.65743] *[#15987=-0.657476] *[#15988=-0.657657] *[#15990=-0.657662] *[#15991=-0.657745] *[#15992=-0.657747] *[#15994=-0.657771] *[#15995=-0.657785] *[#15996=-0.65781] *[#15997=-0.657854] *[#15998=-0.657905] *[#15999=-0.657938] *[#16001=-0.658014] *[#16002=-0.658046] *[#16003=-0.658081] *[#16004=-0.65813] *[#16011=-0.658181] *[#16012=-0.658186] *[#16014=-0.65823] *[#16017=-0.658316] *[#16018=-0.658375] *[#16019=-0.658432] *[#16020=-0.658478] *[#16021=-0.658508] *[#16022=-0.658554] *[#16023=-0.658619] *[#16029=-0.658648] *[#16030=-0.658694] *[#16031=-0.658696] *[#16033=-0.658707] *[#16034=-0.658717] *[#16037=-0.658762] *[#16038=-0.658827] *[#16039=-0.658909] *[#16042=-0.65894] *[#16043=-0.658975] *[#16044=-0.659025] *[#16045=-0.659058] *[#16046=-0.659101] *[#16047=-0.659125] *[#16050=-0.65923] *[#16056=-0.659239] *[#16059=-0.659297] *[#16061=-0.659332] *[#16062=-0.659352] *[#16063=-0.65938] *[#16064=-0.659398] *[#16065=-0.659442] *[#16066=-0.659473] *[#16068=-0.659486] *[#16069=-0.659564] *[#16070=-0.6596] *[#16071=-0.659622] *[#16072=-0.659623] *[#16074=-0.659663] *[#16077=-0.659679] *[#16078=-0.659691] *[#16079=-0.659699] *[#16080=-0.659732] *[#16081=-0.659754] *[#16082=-0.659825] *[#16083=-0.659893] *[#16084=-0.659945] *[#16085=-0.660007] *[#16086=-0.660083] *[#16087=-0.66024] *[#16098=-0.660288] *[#16099=-0.660302] *[#16104=-0.660335] *[#16105=-0.660362] *[#16108=-0.660382] *[#16109=-0.660401] *[#16110=-0.66043] *[#16113=-0.660455] *[#16114=-0.660483] *[#16115=-0.660499] *[#16119=-0.660501] *[#16121=-0.660543] *[#16123=-0.66056] *[#16124=-0.660589] *[#16125=-0.660611] *[#16126=-0.66062] *[#16129=-0.660657] *[#16130=-0.660666] *[#16131=-0.660689] *[#16134=-0.660729] *[#16135=-0.660777] *[#16136=-0.660793] *[#16137=-0.660839] *[#16138=-0.660891] *[#16139=-0.660913] *[#16140=-0.660913] *[#16142=-0.66097] *[#16143=-0.660988] *[#16144=-0.660993] *[#16145=-0.661003] *[#16148=-0.66103] *[#16149=-0.661039] *[#16156=-0.661055] *[#16159=-0.661063] *[#16162=-0.661064] *[#16164=-0.661078] *[#16165=-0.66108] *[#16166=-0.661091] *[#16168=-0.661094] *[#16169=-0.661097] *[#16171=-0.661102] *[#16174=-0.661108] *[#16176=-0.661123] *[#16177=-0.661137] *[#16181=-0.661143] *[#16184=-0.661154] *[#16185=-0.661158] *[#16186=-0.66117] *[#16187=-0.661172] *[#16190=-0.661189] *[#16191=-0.661194] *[#16192=-0.661207] *[#16193=-0.661245] *[#16194=-0.661267] *[#16198=-0.66129] *[#16203=-0.661308] *[#16204=-0.661328] *[#16209=-0.661332] *[#16211=-0.661334] *[#16213=-0.661334] *[#16215=-0.661339] *[#16216=-0.661343] *[#16224=-0.661347] *[#16226=-0.661367] *[#16227=-0.661369] *[#16228=-0.66137] *[#16231=-0.661386] *[#16233=-0.661395] *[#16234=-0.66141] *[#16236=-0.661418] *[#16237=-0.661438] *[#16242=-0.661443] *[#16245=-0.661449] *[#16247=-0.661451] *[#16250=-0.661495] *[#16251=-0.661517] *[#16252=-0.661533] *[#16253=-0.661544] *[#16254=-0.661558] *[#16255=-0.661564] *[#16256=-0.661577] *[#16257=-0.661584] *[#16260=-0.661601] *[#16262=-0.661605] *[#16263=-0.661623] *[#16264=-0.661641] *[#16265=-0.661653] *[#16270=-0.661667] *[#16271=-0.661672] *[#16272=-0.661681] *[#16275=-0.661705] *[#16276=-0.661715] *[#16277=-0.661719] *[#16278=-0.661728] *[#16279=-0.661733] *[#16281=-0.661788] *[#16282=-0.661816] *[#16283=-0.661825] *[#16284=-0.661849] *[#16285=-0.661867] *[#16286=-0.661884] *[#16287=-0.661924] *[#16288=-0.661979] *[#16289=-0.662012] *[#16290=-0.662013] *[#16292=-0.662036] *[#16293=-0.662067] *[#16294=-0.662095] *[#16295=-0.662104] *[#16296=-0.662114] *[#16297=-0.662134] *[#16298=-0.662158] *[#16301=-0.662202] *[#16312=-0.662226] *[#16313=-0.662228] *[#16317=-0.66224] *[#16318=-0.662248] *[#16321=-0.662248] *[#16327=-0.662254] *[#16328=-0.662257] *[#16331=-0.662264] *[#16334=-0.662277] *[#16341=-0.662285] *[#16342=-0.662288] *[#16353=-0.662293] *[#16356=-0.662296] *[#16357=-0.662305] *[#16358=-0.662308] *[#16359=-0.662309] *[#16360=-0.66232] *[#16361=-0.662325] *[#16362=-0.662331] *[#16363=-0.662345] *[#16366=-0.662354] *[#16371=-0.662357] *[#16374=-0.662374] *[#16375=-0.662391] *[#16380=-0.6624] *[#16381=-0.662401] *[#16385=-0.662412] *[#16402=-0.662417] *[#16411=-0.662419] *[#16428=-0.662421] *[#16435=-0.662421] *[#16436=-0.662422] *[#16437=-0.662424] *[#16440=-0.662426] *[#16451=-0.662427] *[#16460=-0.66243] *[#16465=-0.662431] *[#16467=-0.662433] *[#16470=-0.662438] *[#16473=-0.66244] *[#16476=-0.662446] *[#16479=-0.662459] *[#16480=-0.662459] *[#16482=-0.66247] *[#16483=-0.662472] *[#16486=-0.66248] *[#16487=-0.662488] *[#16490=-0.66249] *[#16491=-0.662495] *[#16494=-0.662508] *[#16495=-0.662512] *[#16496=-0.662519] *[#16497=-0.662525] *[#16498=-0.662528] *[#16501=-0.662532] *[#16502=-0.662541] *[#16503=-0.662542] *[#16504=-0.662551] *[#16509=-0.662554] *[#16513=-0.662561] *[#16516=-0.662578] *[#16517=-0.662588] *[#16518=-0.662598] *[#16525=-0.662608] *[#16532=-0.662621] *[#16537=-0.662628] *[#16538=-0.662628] *[#16540=-0.662645] *[#16541=-0.66265] *[#16542=-0.662653] *[#16544=-0.662661] *[#16545=-0.66267] *[#16546=-0.662693] *[#16549=-0.6627] *[#16550=-0.662709] *[#16551=-0.662717] *[#16556=-0.662734] *[#16557=-0.662756] *[#16558=-0.662761] *[#16560=-0.662768] *[#16561=-0.662795] *[#16566=-0.662801] *[#16567=-0.662805] *[#16570=-0.662806] *[#16572=-0.662816] *[#16573=-0.662817] *[#16575=-0.662817] *[#16579=-0.662821] *[#16580=-0.662824] *[#16581=-0.662835] *[#16584=-0.662843] *[#16585=-0.662844] *[#16586=-0.662852] *[#16587=-0.662861] *[#16588=-0.662867] *[#16589=-0.662867] *[#16593=-0.662876] *[#16594=-0.66289] *[#16595=-0.662893] *[#16600=-0.662916] *[#16603=-0.662926] *[#16604=-0.662928] *[#16605=-0.662929] *[#16607=-0.662933] *[#16608=-0.662938] *[#16609=-0.662938] *[#16610=-0.662943] *[#16613=-0.662946] *[#16614=-0.662953] *[#16635=-0.662955] *[#16636=-0.662957] *[#16641=-0.662962] *[#16642=-0.662967] *[#16645=-0.662971] *[#16648=-0.662972] *[#16654=-0.662973] *[#16660=-0.66298] *[#16683=-0.662981] *[#16684=-0.662982] *[#16694=-0.662983] *[#16697=-0.662986] *[#16704=-0.662987] *[#16708=-0.662989] *[#16709=-0.66299] *[#16724=-0.662994] *[#16725=-0.662995] *[#16737=-0.662996] *[#16738=-0.662996] *[#16742=-0.662998] *[#16749=-0.663] *[#16754=-0.663001] *[#16763=-0.663007] *[#16770=-0.663008] *[#16777=-0.663009] *[#16783=-0.663013] *[#16786=-0.663019] *[#16791=-0.663022] *[#16796=-0.663026] *[#16797=-0.663028] *[#16808=-0.663031] *[#16809=-0.663032] *[#16814=-0.663036] *[#16817=-0.663038] *[#16818=-0.663043] *[#16821=-0.663046] *[#16824=-0.663052] *[#16825=-0.663052] *[#16827=-0.663061] *[#16828=-0.663063] *[#16835=-0.663065] *[#16837=-0.663067] *[#16850=-0.663068] *[#16857=-0.663071] *[#16866=-0.663076] *[#16869=-0.663084] *[#16870=-0.663085] *[#16874=-0.663087] *[#16879=-0.66309] *[#16880=-0.66309] *[#16884=-0.663099] *[#16885=-0.663105] *[#16892=-0.663106] *[#16901=-0.663109] *[#16904=-0.663116] *[#16905=-0.663122] *[#16910=-0.663122] *[#16912=-0.663125] *[#16913=-0.663128] *[#16920=-0.663129] *[#16924=-0.663133] *[#16927=-0.663134] *[#16930=-0.663136] *[#16931=-0.663136] *[#16952=-0.663137] *[#16969=-0.663137] *[#16970=-0.663138] *[#16973=-0.66314] *[#16974=-0.66314] *[#16991=-0.663141] 
 + - Final    cost = -0.663141 ; 1193 funcs
 + Final fine fit Parameters:
       x-shift=  0.0204   y-shift=  1.4112   z-shift= -1.7928  ...  enorm=  2.2817 mm
       z-angle=  0.3586   x-angle= -0.1139   y-angle=  0.5282  ...  total=  0.6483 deg
       x-scale=  1.0072   y-scale=  1.0291   z-scale=  1.0061  ...  vol3D=  1.0428 = base smaller than source
     y/x-shear=  0.0056 z/x-shear=  0.0003 z/y-shear=  0.0022
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0204 1.4112 -1.7928 0.3586 -0.1139 0.5282 1.0072 1.0291 1.0061 0.0056 0.0003 0.0022
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S21_unflipped_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S21_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 48.8
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_anatSS.sub-S21_lr_al_junk -overwrite ./anatSS.sub-S21_unflipped_ob+orig
++ processing ./anatSS.sub-S21_unflipped_ob+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_ts_ns_wt+orig -source ./__tt_anatSS.sub-S21_lr_al_junk+orig -prefix ./anatSS.sub-S21_flip_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S21_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 13.206333 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 13.206333 degrees from plumb.
++ Source dataset: ./__tt_anatSS.sub-S21_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1414748 voxels in -source_automask+2
++ Zero-pad: ybot=5 ytop=3
++ Zero-pad: zbot=8 ztop=8
++ 37149 voxels [16.8%] in weight mask
++ Number of points for matching = 37149
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.364 35.164 24.839 (index)
 + source center of mass = 130.184 166.339 170.468 (index)
 + source-target CM = -1.838 5.058 -5.078 (xyz)
 + estimated center of mass shifts = -1.838 5.058 -5.078
++ shift param auto-range: -62.5..58.8 -63.3..73.4 -61.7..51.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.838364 .. 8.161636  center = -1.838364
 + Range param#2 [y-shift] = -4.941540 .. 15.058460  center = 5.058460
 + Range param#3 [z-shift] = -15.077744 .. 4.922256  center = -5.077744
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.838364 .. 38.161636  center = -1.838364
 + Range param#2 [y-shift] = -34.941540 .. 45.058460  center = 5.058460
 + Range param#3 [z-shift] = -45.077744 .. 34.922256  center = -5.077744
 + 12 free parameters
++ Normalized convergence radius = 0.0000096
++ Final parameter search ranges:
 +       x-shift =  -41.838 ..   38.162
 +       y-shift =  -34.942 ..   45.058
 +       z-shift =  -45.078 ..   34.922
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1414748 [out of 25259420] voxels
 + base mask has 50083 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - copying weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 276.016 .. 1042.59; base clip 189.533 .. 738.7
 +  - versus source range 0.172097 .. 945.082; base range 0 .. 876.786
 + 32928 total points stored in 301 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o+o-+o...++o-o-+..ooo-.$.+ + - best 45 costs found:
    0 v= 0.509505:  -1.84   5.06  -5.08   0.00   0.00   0.00  [grid]
    1 v= 0.743997: -28.51  -8.27 -18.41 -15.00  15.00 -15.00  [grid]
    2 v= 0.766896: -36.16 -11.53   3.52 -16.34   8.64 -40.54  [rand]
    3 v= 0.778743:  24.83  -8.27 -18.41  15.00  15.00  15.00  [grid]
    4 v= 0.803534:  11.49  -8.27 -18.41 -15.00  15.00  30.00  [grid]
    5 v= 0.807284:  32.49 -11.53   3.52  16.34   8.64  40.54  [rand]
    6 v= 0.828327: -15.17  -8.27 -18.41  15.00  15.00 -30.00  [grid]
    7 v= 0.843714: -17.98  -4.41  19.27 -20.99 -15.73 -16.09  [rand]
    8 v= 0.849441: -15.17  -8.27   8.26 -15.00 -15.00 -15.00  [grid]
    9 v= 0.851766: -10.48 -15.37 -22.55 -25.20  18.50  13.54  [rand]
   10 v= 0.853523:   6.80 -15.37 -22.55  25.20  18.50 -13.54  [rand]
   11 v= 0.866945:  11.49  -8.27   8.26  15.00 -15.00  15.00  [grid]
   12 v= 0.878874: -28.51  -8.27  21.59 -30.00 -15.00 -30.00  [grid]
   13 v= 0.886044:  14.30  -4.41  19.27  20.99 -15.73  16.09  [rand]
   14 v= 0.887817: -17.82 -14.43 -10.80 -20.53   3.14  10.08  [rand]
   15 v= 0.908383: -15.17  -8.27   8.26 -15.00 -15.00  15.00  [grid]
   16 v= 0.912366: -34.32  -9.63   6.73 -11.16   9.40 -34.39  [rand]
   17 v= 0.926825:  14.14 -14.43   0.65  20.53   3.14  10.08  [rand]
   18 v= 0.933296: -28.51  -8.27   8.26 -30.00 -15.00 -15.00  [grid]
   19 v= 0.942253: -17.82 -14.43   0.65 -20.53   3.14 -10.08  [rand]
   20 v= 0.950155:  14.14 -14.43 -10.80  20.53   3.14 -10.08  [rand]
   21 v= 0.954088: -15.17  -8.27 -18.41 -30.00  15.00  15.00  [grid]
   22 v= 0.969685: -17.82 -14.43   0.65 -20.53  -3.14 -10.08  [rand]
   23 v= 0.972615: -15.17  -8.27 -18.41 -15.00  15.00  15.00  [grid]
   24 v= 0.975948: -16.04  -4.39  -0.24 -15.99 -13.53  29.93  [rand]
   25 v= 0.976773: -28.51 -21.61 -18.41 -15.00  30.00 -15.00  [grid]
   26 v= 0.977137:  14.14 -14.43   0.65  20.53  -3.14  10.08  [rand]
   27 v= 0.977331:  11.49  -8.27 -18.41  30.00  15.00 -15.00  [grid]
   28 v= 0.979824:  11.49  -8.27   8.26  15.00 -15.00 -15.00  [grid]
   29 v= 0.979978:  24.83  -8.27  21.59  30.00 -15.00  30.00  [grid]
   30 v= 0.982094:  30.65  -9.63   6.73  11.16   9.40  34.39  [rand]
   31 v= 0.984526: -28.51  -8.27  21.59 -30.00 -15.00 -15.00  [grid]
   32 v= 0.988077:  21.01 -18.52 -15.49   5.91  29.74  29.45  [rand]
   33 v= 1.013439: -17.98  -4.41 -29.43 -20.99  15.73  16.09  [rand]
   34 v= 1.013465: -24.69 -18.52 -15.49  -5.91  29.74 -29.45  [rand]
   35 v= 1.014615:  24.83 -21.61 -18.41  15.00  30.00  15.00  [grid]
   36 v= 1.019588:  24.83  -8.27   8.26  30.00 -15.00  15.00  [grid]
   37 v= 1.021803: -15.17 -21.61 -18.41 -30.00  15.00  15.00  [grid]
   38 v= 1.024558:  11.49  -8.27 -18.41  15.00  15.00 -15.00  [grid]
   39 v= 1.024983:  11.49 -21.61 -31.74 -15.00  30.00  30.00  [grid]
   40 v= 1.026246: -15.17 -21.61 -31.74 -30.00  30.00  15.00  [grid]
   41 v= 1.029033: -15.17  -8.27  21.59 -15.00 -30.00 -15.00  [grid]
   42 v= 1.030243: -15.17  -8.27  21.59 -15.00 -15.00 -30.00  [grid]
   43 v= 1.035612: -15.17 -21.61 -31.74  15.00  30.00 -30.00  [grid]
   44 v= 1.044519:  11.49  -8.27  21.59  15.00 -15.00  30.00  [grid]
 + - A little optimization:*[#8004=0.406989] *[#8013=0.398151] *[#8016=0.39164] *[#8017=0.389498] *[#8018=0.377219] *[#8019=0.368816] *[#8020=0.346368] *[#8021=0.342169] *[#8022=0.341002] *[#8023=0.332961] *[#8025=0.332767] *[#8026=0.317607] *[#8027=0.314013] *[#8029=0.307343] *[#8030=0.299077] *[#8031=0.291179] *[#8033=0.290434] *[#8036=0.286824] *[#8041=0.284752] *[#8042=0.284351] ...............*[#8862=0.284337] *[#8863=0.281302] *[#8864=0.280622] ..............................
 + - costs of the above after a little optimization:
    0 v= 0.284351:  -1.45   1.13   0.75   0.75  -2.26   0.08  [grid]
    1 v= 0.649997: -26.69  -5.62 -12.62 -14.26  12.98 -17.53  [grid]
    2 v= 0.671459: -32.66  -5.59   3.63 -13.66   6.76 -40.07  [rand]
    3 v= 0.675064:  22.03  -7.39 -12.18  15.45  12.98  15.06  [grid]
    4 v= 0.532977:   8.68  -3.56 -11.13   0.69   7.93  13.56  [grid]
    5 v= 0.695688:  31.05  -4.32   6.49  16.59   5.20  41.43  [rand]
    6 v= 0.648559: -11.43  -4.75 -15.69   8.52  10.11 -26.60  [grid]
    7 v= 0.611569: -18.46   4.82   9.70 -11.73 -10.38 -15.50  [rand]
    8 v= 0.462577: -13.86   0.48   2.15  -7.84  -3.37  -2.15  [grid]
    9 v= 0.778120:  -9.61 -13.19 -22.00 -21.74  16.81  14.89  [rand]
   10 v= 0.791678:   7.95 -12.82 -23.24  22.71  17.26 -13.14  [rand]
   11 v= 0.437919:   8.66  -0.51  -0.10   5.90  -1.06   4.43  [grid]
   12 v= 0.732434: -31.34  -1.59  17.16 -25.46 -11.24 -24.40  [grid]
   13 v= 0.683091:  17.05   1.66  13.65  15.01 -13.44  34.61  [rand]
   14 v= 0.426130:  -5.09  -5.28 -11.31  -2.09   6.70   0.77  [rand]
  *15 v= 0.280622:  -2.66   1.13   0.79  -1.13  -2.19   0.86  [grid]
   16 v= 0.656173: -31.51  -3.83   2.39 -13.90   5.62 -36.71  [rand]
   17 v= 0.571302:  16.99  -1.66  -2.79   9.15   1.72  11.32  [rand]
   18 v= 0.626997: -27.42   0.35   3.35 -13.15   0.30 -30.70  [grid]
   19 v= 0.513927: -13.78   1.86  -0.82  -8.42  -2.13  -5.23  [rand]
   20 v= 0.436488:   1.16  -6.57 -12.05   1.30   8.41   2.29  [rand]
   21 v= 0.675763: -15.91  -7.70 -17.75 -22.06  10.10  10.21  [grid]
   22 v= 0.595077: -22.33  -0.88  -0.78 -17.58  -0.98  -7.35  [rand]
   23 v= 0.453486:  -4.95  -4.93 -16.47  -2.75  11.87   0.57  [grid]
   24 v= 0.354571:  -6.41  -1.15  -3.38  -2.86   1.41  -1.93  [rand]
   25 v= 0.629187: -22.38  -4.60 -12.18  -8.12  10.61 -21.20  [grid]
   26 v= 0.597039:  16.19  -3.83  -7.07  14.62   4.42   1.15  [rand]
   27 v= 0.431920:  -5.91  -3.89 -13.01  -1.77   9.56  -1.93  [grid]
   28 v= 0.637185:   5.99   1.16   8.75  10.80 -12.28 -12.03  [grid]
   29 v= 0.713879:  24.68   2.89  13.27  18.89  -7.57  28.46  [grid]
   30 v= 0.687034:  30.47  -4.32   3.19  15.17   7.58  37.80  [rand]
   31 v= 0.656211: -24.49   2.66  12.94 -18.65  -9.40 -19.76  [grid]
   32 v= 0.796672:  19.73 -15.86 -16.81   4.28  22.23  24.80  [rand]
   33 v= 0.646056: -14.05  -5.84 -15.35 -17.47   8.83  10.78  [rand]
   34 v= 0.786151: -26.07 -15.16 -18.73  -4.06  24.60 -26.30  [rand]
   35 v= 0.595203:  12.68  -2.39 -17.27   8.36  13.73   6.39  [grid]
   36 v= 0.572392:  11.11   7.51   6.03   7.07  -6.99  10.24  [grid]
   37 v= 0.490485:  -4.20  -5.22 -17.48  -3.97  12.28   4.26  [grid]
   38 v= 0.369144:  -0.34  -4.11  -8.68   0.92   5.38   0.77  [grid]
   39 v= 0.894620:   9.95 -17.70 -27.56 -16.62  25.62  29.85  [grid]
   40 v= 1.023818: -14.77 -21.61 -31.74 -30.00  29.99  15.00  [grid]
   41 v= 0.593753:  -9.90   3.42   9.89  -5.35 -12.73 -13.55  [grid]
   42 v= 0.546167:  -8.31   6.67   8.39  -2.28  -9.56  -5.58  [grid]
   43 v= 0.674357: -13.47  -6.50 -22.46   6.12  16.54 -22.18  [grid]
   44 v= 0.675015:  12.53   0.31  13.14  11.33 -16.67  27.88  [grid]
 + - save #15 for possible use in twobest
 + - skip # 0 for twobest: too close to set #15
 + - save #24 for possible use in twobest
 + - save #38 for possible use in twobest
 + - save #14 for possible use in twobest
 + - skip #27 for twobest: too close to set #14
 + - skip #20 for twobest: too close to set #38
 + - save #11 for possible use in twobest
 + - skip #23 for twobest: too close to set #27
 + - save # 8 for possible use in twobest
 + - skip #37 for twobest: too close to set #23
 + - skip #19 for twobest: too close to set # 8
 + - save # 4 for possible use in twobest
 + - save #42 for possible use in twobest
 + - save #17 for possible use in twobest
 + - save #36 for possible use in twobest
 + - save #41 for possible use in twobest
 + - save #22 for possible use in twobest
 + - save #35 for possible use in twobest
 + - save #26 for possible use in twobest
 + - save # 7 for possible use in twobest
 + - save #18 for possible use in twobest
 + - save #25 for possible use in twobest
 + - save #28 for possible use in twobest
 + - save #33 for possible use in twobest
 + - save # 6 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - save #16 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 279.302 .. 1054.71; base clip 189.943 .. 755.831
 +  - versus source range 0.0126321 .. 945.101; base range 0 .. 878.101
 + 32711 total points stored in 320 'RHDD(12.342)' bloks
*[#10744=0.279076] *[#10748=0.277969] *[#10753=0.277718] *[#10754=0.277441] *[#10755=0.275406] *[#10758=0.274463] *[#10763=0.273444] *[#10764=0.272986] *[#10765=0.272086] *[#10766=0.270227] *[#10767=0.268627] *[#10769=0.268007] *[#10772=0.267873] *[#10773=0.266521] *[#10774=0.265505] *[#10775=0.264219] *[#10778=0.263129] *[#10779=0.262913] *[#10781=0.262802] *[#10784=0.262692] *[#10787=0.261165] *[#10788=0.260426] *[#10794=0.260057] *[#10795=0.259182] *[#10797=0.258408] *[#10798=0.257424] 
 + - param set #1 has cost=0.257424
 + -- Parameters = -2.0915 1.6857 0.0512 -0.1251 -1.4630 0.2404 0.9748 1.0299 0.9964 -0.0115 0.0011 0.0038
 + - param set #2 has cost=0.329571
 + -- Parameters = -5.1410 -1.7215 -2.4216 -2.2230 0.9497 -0.8923 1.0043 0.9933 0.9955 -0.0051 0.0083 0.0002
 + - param set #3 has cost=0.307342
 + -- Parameters = -0.6553 -2.6081 -4.2360 0.0297 2.1822 2.3607 0.9877 0.9907 1.0014 -0.0166 -0.0016 0.0055
 + - param set #4 has cost=0.294182
 + -- Parameters = -1.3688 -1.3065 -3.0342 -0.4054 1.3943 1.8618 0.9960 1.0074 0.9952 -0.0017 0.0099 0.0093
 + - param set #5 has cost=0.288990
 + -- Parameters = -0.0896 -0.4111 -0.0783 0.4790 0.8607 2.5850 0.9854 1.0018 0.9654 -0.0149 -0.0170 0.0231
 + - param set #6 has cost=0.297352
 + -- Parameters = -2.3612 1.8723 1.3232 -1.0235 -0.6081 1.7589 0.9501 1.0411 0.9892 0.0146 -0.0046 0.0369
 + - param set #7 has cost=0.425317
 + -- Parameters = 1.6056 -6.9910 -9.9586 -0.2528 7.4172 5.3809 0.9550 0.9687 0.9678 -0.0255 0.0013 -0.0169
 + - param set #8 has cost=0.268774
 + -- Parameters = -2.3868 0.7513 -0.4824 -0.9089 -1.2947 0.8504 0.9922 1.0117 0.9853 -0.0128 0.0127 -0.0065
 + - param set #9 has cost=0.456634
 + -- Parameters = 8.4962 -0.2783 -1.6679 7.4912 -0.0478 1.4466 0.9783 0.9987 0.9870 0.0199 0.0054 -0.0110
 + - param set #10 has cost=0.448769
 + -- Parameters = 6.9999 1.5634 3.7944 6.8546 -3.6452 1.9660 0.9933 0.9903 0.9914 0.0177 -0.0089 0.0074
 + - param set #11 has cost=0.370305
 + -- Parameters = -5.1191 1.1085 7.4709 -2.3362 -8.3350 -0.7265 0.9752 1.0244 0.9832 0.0092 0.0158 0.0040
 + - param set #12 has cost=0.279407
 + -- Parameters = -2.2565 0.0992 -0.8778 -0.3017 -0.5810 0.5433 0.9994 1.0088 0.9916 -0.0010 0.0015 0.0021
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0525 
 + --- dist(#3,#1) = 0.0669 
 + --- dist(#4,#1) = 0.0872 
 + --- dist(#5,#1) = 0.0612 
 + --- dist(#6,#1) = 0.149 
 + --- dist(#7,#1) = 0.106 
 + --- dist(#8,#1) = 0.0996 
 + --- dist(#9,#1) = 0.0931 
 + --- dist(#10,#1) = 0.167 
 + --- dist(#11,#1) = 0.131 
 + --- dist(#12,#1) = 0.141 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 282.799 .. 1065.67; base clip 190.31 .. 775.178
 +  - versus source range 6.09914e-06 .. 945.103; base range 0 .. 879.071
 + 32433 total points stored in 323 'RHDD(12.2051)' bloks
 + - param set #1 has cost=0.291810
 + -- Parameters = -1.8550 1.7455 0.0760 -0.2135 -1.2434 0.6210 0.9765 1.0334 0.9911 -0.0130 0.0104 0.0052
 + - param set #2 has cost=0.282651
 + -- Parameters = -2.1268 2.4402 -0.6422 -0.2208 -1.2514 0.4579 0.9916 1.0345 0.9804 -0.0173 0.0108 -0.0104
 + - param set #3 has cost=0.299365
 + -- Parameters = -2.1198 0.9915 -0.8521 -0.4333 -0.0492 0.7476 0.9954 1.0230 0.9796 -0.0059 0.0101 0.0044
 + - param set #4 has cost=0.307503
 + -- Parameters = -1.1225 0.1317 0.0388 0.0741 1.0503 1.7386 0.9859 1.0164 0.9627 -0.0179 -0.0196 0.0269
 + - param set #5 has cost=0.312995
 + -- Parameters = -1.5955 -0.5947 -2.2806 -0.0311 1.1301 0.9031 0.9898 1.0114 0.9936 -0.0111 0.0088 0.0115
 + - param set #6 has cost=0.313525
 + -- Parameters = -2.0731 2.2848 1.1458 -0.3395 -0.1983 0.7760 0.9716 1.0471 0.9813 0.0105 -0.0017 0.0345
 + - param set #7 has cost=0.328434
 + -- Parameters = -1.1184 -1.6016 -3.5001 -0.1744 1.6932 1.7638 0.9896 0.9985 1.0117 -0.0170 0.0046 0.0126
 + - param set #8 has cost=0.299267
 + -- Parameters = -3.3905 0.6825 -1.0538 -1.5107 0.1877 0.6551 1.0064 1.0130 0.9722 -0.0415 0.0310 0.0027
 + - param set #9 has cost=0.325601
 + -- Parameters = -2.5719 1.2667 2.6677 -0.2826 -3.1335 -0.5007 0.9808 1.0210 0.9597 0.0254 0.0268 0.0015
 + - param set #10 has cost=0.348026
 + -- Parameters = -1.0875 -2.9451 -2.9407 -0.7364 1.7239 2.6507 0.9604 0.9718 0.9798 -0.0339 -0.0084 0.0040
 + - param set #11 has cost=0.356878
 + -- Parameters = -0.8115 -0.6150 1.1866 -0.0364 -3.2689 2.9471 0.9800 1.0060 0.9886 0.0499 -0.0341 -0.0093
 + - param set #12 has cost=0.351731
 + -- Parameters = 1.4325 0.2977 -2.0668 1.7219 -0.2537 2.2623 0.9354 1.0104 0.9874 0.0348 -0.0062 -0.0119
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0702 
 + --- dist(#3,#1) = 0.109 
 + --- dist(#4,#1) = 0.0668 
 + --- dist(#5,#1) = 0.168 
 + --- dist(#6,#1) = 0.0983 
 + --- dist(#7,#1) = 0.202 
 + --- dist(#8,#1) = 0.192 
 + --- dist(#9,#1) = 0.103 
 + --- dist(#10,#1) = 0.171 
 + --- dist(#11,#1) = 0.234 
 + --- dist(#12,#1) = 0.303 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + - using 37149 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 284.782 .. 1074.37; base clip 190.481 .. 790.209
 +  - versus source range 0 .. 945.103; base range 0 .. 879.337
 + 33535 total points stored in 348 'RHDD(12.1215)' bloks
 + - param set #1 has cost=0.317584
 + -- Parameters = -2.1102 2.8171 -0.0575 -0.1877 -1.5388 0.3453 0.9900 1.0394 0.9701 -0.0222 0.0177 -0.0115
 + - param set #2 has cost=0.327947
 + -- Parameters = -2.0098 2.1487 0.0087 -0.1734 -1.2477 0.4872 0.9794 1.0365 0.9853 -0.0143 0.0127 0.0014
 + - param set #3 has cost=0.323531
 + -- Parameters = -2.8724 1.6640 -0.8518 -0.6095 -0.0131 -0.0275 0.9949 1.0271 0.9729 -0.0477 0.0224 0.0002
 + - param set #4 has cost=0.326248
 + -- Parameters = -1.8337 1.5923 -0.6323 -0.3578 -0.0860 1.1728 0.9920 1.0311 0.9740 -0.0336 -0.0036 0.0043
 + - param set #5 has cost=0.343183
 + -- Parameters = -1.1349 0.5391 0.2320 0.0361 0.8078 1.8188 0.9884 1.0242 0.9578 -0.0199 -0.0188 0.0255
 + - param set #6 has cost=0.351642
 + -- Parameters = -1.6154 -0.5592 -2.1940 -0.0276 1.0912 0.8982 0.9902 1.0113 0.9936 -0.0108 0.0137 0.0114
 + - param set #7 has cost=0.341822
 + -- Parameters = -2.1222 2.4407 1.2912 -0.3398 -0.5344 0.5485 0.9710 1.0489 0.9681 -0.0051 0.0124 0.0264
 + - param set #8 has cost=0.341271
 + -- Parameters = -2.0067 1.8976 0.8804 -0.1484 -1.8782 0.3472 0.9821 1.0357 0.9617 0.0166 0.0283 -0.0044
 + - param set #9 has cost=0.347603
 + -- Parameters = -1.6929 -0.2911 -1.9395 -0.2409 0.9179 1.3010 0.9957 1.0098 0.9917 -0.0225 0.0004 0.0109
 + - param set #10 has cost=0.363648
 + -- Parameters = -1.5958 -1.0684 -0.9555 -0.2615 0.0466 0.9482 0.9636 0.9873 0.9850 -0.0384 -0.0052 0.0028
 + - param set #11 has cost=0.366913
 + -- Parameters = 0.4303 0.6711 -1.5941 0.9355 -0.2996 2.2424 0.9569 1.0223 0.9875 0.0322 -0.0033 -0.0036
 + - param set #12 has cost=0.365483
 + -- Parameters = -0.4573 0.4987 1.0248 0.4011 -2.5632 2.1620 0.9621 1.0125 0.9704 0.0390 -0.0319 -0.0118
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.115 
 + --- dist(#3,#1) = 0.0961 
 + --- dist(#4,#1) = 0.0583 
 + --- dist(#5,#1) = 0.175 
 + --- dist(#6,#1) = 0.171 
 + --- dist(#7,#1) = 0.166 
 + --- dist(#8,#1) = 0.101 
 + --- dist(#9,#1) = 0.103 
 + --- dist(#10,#1) = 0.142 
 + --- dist(#11,#1) = 0.276 
 + --- dist(#12,#1) = 0.245 
 + - Total coarse refinement net CPU time = 0.0 s; 3483 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=20.6539 usiz=525.007
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 288.627 .. 1087.27; base clip 190.481 .. 790.209
 +  - versus source range 0 .. 945.466; base range 0 .. 880.105
 + 33483 total points stored in 353 'RHDD(12.0364)' bloks
 + - cost(#1)=0.340192 *
 + -- Parameters = -2.1102 2.8171 -0.0575 -0.1877 -1.5388 0.3453 0.9900 1.0394 0.9701 -0.0222 0.0177 -0.0115
 + - cost(#2)=0.346267  
 + -- Parameters = -2.8724 1.6640 -0.8518 -0.6095 -0.0131 -0.0275 0.9949 1.0271 0.9729 -0.0477 0.0224 0.0002
 + - cost(#3)=0.347638  
 + -- Parameters = -1.8337 1.5923 -0.6323 -0.3578 -0.0860 1.1728 0.9920 1.0311 0.9740 -0.0336 -0.0036 0.0043
 + - cost(#4)=0.349988  
 + -- Parameters = -2.0098 2.1487 0.0087 -0.1734 -1.2477 0.4872 0.9794 1.0365 0.9853 -0.0143 0.0127 0.0014
 + - cost(#5)=0.363560  
 + -- Parameters = -2.0067 1.8976 0.8804 -0.1484 -1.8782 0.3472 0.9821 1.0357 0.9617 0.0166 0.0283 -0.0044
 + - cost(#6)=0.362107  
 + -- Parameters = -2.1222 2.4407 1.2912 -0.3398 -0.5344 0.5485 0.9710 1.0489 0.9681 -0.0051 0.0124 0.0264
 + - cost(#7)=0.363165  
 + -- Parameters = -1.1349 0.5391 0.2320 0.0361 0.8078 1.8188 0.9884 1.0242 0.9578 -0.0199 -0.0188 0.0255
 + - cost(#8)=0.367973  
 + -- Parameters = -1.6929 -0.2911 -1.9395 -0.2409 0.9179 1.3010 0.9957 1.0098 0.9917 -0.0225 0.0004 0.0109
 + - cost(#9)=0.372800  
 + -- Parameters = -1.6154 -0.5592 -2.1940 -0.0276 1.0912 0.8982 0.9902 1.0113 0.9936 -0.0108 0.0137 0.0114
 + - cost(#10)=0.382874  
 + -- Parameters = -1.5958 -1.0684 -0.9555 -0.2615 0.0466 0.9482 0.9636 0.9873 0.9850 -0.0384 -0.0052 0.0028
 + - cost(#11)=0.385892  
 + -- Parameters = -0.4573 0.4987 1.0248 0.4011 -2.5632 2.1620 0.9621 1.0125 0.9704 0.0390 -0.0319 -0.0118
 + - cost(#12)=0.385773  
 + -- Parameters = 0.4303 0.6711 -1.5941 0.9355 -0.2996 2.2424 0.9569 1.0223 0.9875 0.0322 -0.0033 -0.0036
 + - cost(#13)=0.545435  
 + -- Parameters = -1.8384 5.0585 -5.0777 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.329772 *
 + -- Parameters = -2.5890 3.3191 0.0316 -0.4254 -1.6927 -0.0187 0.9884 1.0436 0.9649 -0.0754 0.0117 -0.0157
 + - cost(#2)=0.332325  
 + -- Parameters = -3.1811 2.7533 -0.7298 -0.8540 -0.2090 0.0284 0.9996 1.0411 0.9599 -0.0782 0.0226 -0.0045
 + - cost(#3)=0.336090  
 + -- Parameters = -2.2769 2.8175 -0.3295 -0.5602 -0.5205 0.9060 0.9840 1.0439 0.9743 -0.0569 0.0074 0.0022
 + - cost(#4)=0.338821  
 + -- Parameters = -2.4201 2.8253 0.2371 -0.3541 -1.1059 0.2209 0.9866 1.0398 0.9723 -0.0374 0.0226 0.0009
 + - cost(#5)=0.340501  
 + -- Parameters = -2.3384 2.4918 0.1486 -0.4724 -1.9108 0.5898 0.9919 1.0326 0.9738 -0.0349 0.0167 -0.0137
 + - cost(#6)=0.355962  
 + -- Parameters = -2.1676 2.4961 1.3619 -0.2825 -0.4527 0.6015 0.9830 1.0484 0.9675 -0.0139 0.0116 0.0262
 + - cost(#7)=0.350886  
 + -- Parameters = -1.8318 1.4185 0.0416 -0.6797 0.9285 2.1221 0.9923 1.0368 0.9674 -0.0392 -0.0172 0.0297
 + - cost(#8)=0.351659  
 + -- Parameters = -1.6722 0.7681 -1.2364 -0.0556 1.1545 1.0362 0.9887 1.0286 0.9797 -0.0549 -0.0026 0.0200
 + - cost(#9)=0.362980  
 + -- Parameters = -1.6892 0.2116 -1.7764 -0.0249 0.7497 1.0852 0.9919 1.0132 0.9921 -0.0289 0.0088 0.0107
 + - cost(#10)=0.358047  
 + -- Parameters = -1.5030 0.6227 -1.2096 0.1773 0.3877 1.2311 0.9988 1.0153 0.9839 -0.0363 -0.0089 0.0076
 + - cost(#11)=0.382317  
 + -- Parameters = -0.4618 0.6487 1.0157 0.5209 -2.4062 1.8728 0.9636 1.0127 0.9695 0.0346 -0.0313 -0.0118
 + - cost(#12)=0.375838  
 + -- Parameters = -0.7382 1.3179 -1.2293 0.3748 -0.9155 1.5855 0.9690 1.0279 0.9911 0.0329 -0.0023 -0.0070
 + - cost(#13)=0.364535  
 + -- Parameters = -1.3767 0.8797 -0.4426 -0.1586 -1.3082 1.5436 0.9881 1.0118 0.9929 -0.0080 -0.0006 -0.0053
 + - case #1 is now the best
 + - Initial  cost = 0.329772
 + - Initial fine Parameters = -2.5890 3.3191 0.0316 -0.4254 -1.6927 -0.0187 0.9884 1.0436 0.9649 -0.0754 0.0117 -0.0157
 + - Finalish cost = 0.326926 ; 179 funcs
 + - ini Finalish Parameters = -2.8185 3.5775 -0.1485 -0.7199 -1.7048 0.2143 0.9897 1.0439 0.9671 -0.0793 0.0121 -0.0164
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 288.511 .. 1087.75; base clip 190.481 .. 790.209
 +  - versus source range 0 .. 945.466; base range 0 .. 880.105
*[#15780=-0.239027] *[#15787=-0.240828] *[#15819=-0.241109] *[#15821=-0.242559] *[#15828=-0.243665] *[#15834=-0.244952] *[#15868=-0.245152] *[#15870=-0.245327] *[#15871=-0.245449] *[#15872=-0.245619] *[#15873=-0.246199] *[#15874=-0.246619] *[#15876=-0.246664] *[#15878=-0.246716] *[#15881=-0.246728] *[#15883=-0.246835] *[#15885=-0.247112] *[#15890=-0.24755] *[#15891=-0.247661] *[#15893=-0.247754] *[#15895=-0.247761] *[#15899=-0.247773] *[#15901=-0.247795] *[#15911=-0.247829] *[#15917=-0.248179] *[#15918=-0.248295] *[#15921=-0.248382] *[#15922=-0.248454] *[#15926=-0.248762] *[#15933=-0.248932] *[#15934=-0.248938] *[#15938=-0.249175] *[#15939=-0.249454] *[#15942=-0.249598] *[#15943=-0.249734] *[#15944=-0.249758] *[#15945=-0.249801] *[#15946=-0.249813] *[#15952=-0.249972] *[#15953=-0.250146] *[#15960=-0.250178] *[#15961=-0.250273] *[#15962=-0.250289] *[#15965=-0.250361] *[#15972=-0.250404] *[#15974=-0.250433] *[#15976=-0.250482] *[#15981=-0.250492] *[#15983=-0.250498] *[#15989=-0.250691] *[#15990=-0.250715] *[#15997=-0.250761] *[#16000=-0.250815] *[#16003=-0.250876] *[#16014=-0.250878] *[#16016=-0.250945] *[#16021=-0.250987] *[#16038=-0.251031] *[#16051=-0.251045] *[#16052=-0.251052] *[#16054=-0.251056] *[#16055=-0.251067] *[#16056=-0.251083] *[#16057=-0.251109] *[#16058=-0.251129] *[#16059=-0.251131] *[#16061=-0.251148] *[#16064=-0.251156] *[#16065=-0.251164] *[#16066=-0.251166] *[#16069=-0.251171] *[#16070=-0.251186] *[#16071=-0.251209] *[#16072=-0.251214] *[#16075=-0.251231] *[#16076=-0.251244] *[#16079=-0.251274] *[#16080=-0.251301] *[#16081=-0.251329] *[#16082=-0.251341] *[#16083=-0.251376] *[#16084=-0.251398] *[#16085=-0.251414] *[#16088=-0.25142] *[#16089=-0.251432] *[#16090=-0.251453] *[#16091=-0.25147] *[#16094=-0.251471] *[#16098=-0.251486] *[#16099=-0.251504] *[#16100=-0.251525] *[#16101=-0.251559] *[#16102=-0.251568] *[#16105=-0.251578] *[#16109=-0.251586] *[#16110=-0.251612] *[#16111=-0.251641] *[#16112=-0.25167] *[#16113=-0.25169] *[#16114=-0.251711] *[#16115=-0.251734] *[#16116=-0.251749] *[#16117=-0.251755] *[#16121=-0.251779] *[#16126=-0.251786] *[#16127=-0.25179] *[#16129=-0.251792] *[#16131=-0.251796] *[#16132=-0.251798] *[#16133=-0.251799] *[#16138=-0.2518] *[#16139=-0.251803] *[#16140=-0.251803] *[#16143=-0.251805] *[#16144=-0.251813] *[#16145=-0.251816] *[#16146=-0.25182] *[#16147=-0.251824] *[#16148=-0.251829] *[#16149=-0.251832] *[#16160=-0.251835] *[#16161=-0.25184] *[#16162=-0.25184] *[#16164=-0.251843] *[#16165=-0.251849] *[#16166=-0.25185] *[#16167=-0.25185] *[#16169=-0.251853] *[#16171=-0.251857] *[#16172=-0.25187] *[#16173=-0.251873] *[#16174=-0.251875] *[#16175=-0.251878] *[#16176=-0.251879] *[#16177=-0.251881] *[#16178=-0.251884] *[#16179=-0.25189] *[#16182=-0.251903] *[#16183=-0.251907] *[#16186=-0.251916] *[#16187=-0.251925] *[#16188=-0.251933] *[#16189=-0.251943] *[#16190=-0.251955] *[#16191=-0.251973] *[#16192=-0.25199] *[#16193=-0.252022] *[#16194=-0.252053] *[#16199=-0.252083] *[#16202=-0.252084] *[#16206=-0.252104] *[#16207=-0.25211] *[#16208=-0.252116] *[#16209=-0.252126] *[#16210=-0.252131] *[#16213=-0.25214] *[#16214=-0.252145] *[#16215=-0.252148] *[#16216=-0.252157] *[#16219=-0.252161] *[#16220=-0.252165] *[#16221=-0.25217] *[#16222=-0.252172] *[#16223=-0.252178] *[#16224=-0.252187] *[#16227=-0.252187] *[#16231=-0.252195] *[#16232=-0.2522] *[#16233=-0.252203] *[#16234=-0.252212] *[#16235=-0.252219] *[#16236=-0.252219] *[#16244=-0.252228] *[#16245=-0.252233] *[#16250=-0.252236] *[#16253=-0.252244] *[#16254=-0.252253] *[#16257=-0.252258] *[#16260=-0.252261] *[#16266=-0.252262] *[#16268=-0.252264] *[#16269=-0.252269] *[#16270=-0.25227] *[#16271=-0.252271] *[#16272=-0.252277] *[#16275=-0.252277] *[#16279=-0.252279] *[#16280=-0.252281] *[#16289=-0.252282] *[#16294=-0.252284] *[#16297=-0.252284] *[#16299=-0.252284] *[#16301=-0.252285] *[#16310=-0.252285] *[#16313=-0.252286] *[#16317=-0.252286] *[#16318=-0.252289] *[#16319=-0.252289] *[#16321=-0.252292] *[#16322=-0.252295] *[#16323=-0.252301] *[#16328=-0.252304] *[#16335=-0.252304] *[#16338=-0.252306] *[#16341=-0.252307] *[#16342=-0.252307] *[#16343=-0.252309] *[#16352=-0.25231] *[#16353=-0.252311] *[#16358=-0.252312] *[#16359=-0.252313] *[#16362=-0.252314] *[#16367=-0.252315] *[#16372=-0.252315] *[#16375=-0.252316] *[#16382=-0.252316] *[#16383=-0.252317] *[#16386=-0.252317] *[#16391=-0.252318] *[#16392=-0.252318] *[#16395=-0.252318] *[#16401=-0.252319] *[#16408=-0.252321] *[#16411=-0.252322] *[#16416=-0.252324] *[#16417=-0.252325] *[#16420=-0.252328] *[#16421=-0.252328] *[#16423=-0.252329] *[#16424=-0.252331] *[#16425=-0.252332] *[#16426=-0.252332] *[#16430=-0.252334] *[#16435=-0.252335] *[#16439=-0.252335] *[#16444=-0.252335] *[#16445=-0.252335] *[#16451=-0.252335] *[#16453=-0.252336] *[#16482=-0.252336] *[#16484=-0.252336] *[#16514=-0.252336] *[#16522=-0.252336] *[#16548=-0.252336] 
 + - Final    cost = -0.252336 ; 796 funcs
 + Final fine fit Parameters:
       x-shift= -3.6807   y-shift=  4.8062   z-shift= -0.5319  ...  enorm=  6.0770 mm
       z-angle= -1.4977   x-angle= -1.7713   y-angle=  0.2214  ...  total=  2.3323 deg
       x-scale=  1.0058   y-scale=  1.0650   z-scale=  0.9856  ...  vol3D=  1.0557 = base smaller than source
     y/x-shear= -0.1027 z/x-shear=  0.0200 z/y-shear= -0.0135
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -3.6807 4.8062 -0.5319 -1.4977 -1.7713 0.2214 1.0058 1.0650 0.9856 -0.1027 0.0200 -0.0135
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S21_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S21_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 50.5
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S21_unflipped_ob_temp_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 13.206333 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 13.206333 degrees from plumb.
++ Source dataset: ./anatSS.sub-S21_unflipped_ob_temp_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1338320 voxels in -source_automask+2
++ Zero-pad: ybot=5 ytop=3
++ Zero-pad: zbot=8 ztop=8
++ 37149 voxels [16.8%] in weight mask
++ Number of points for matching = 37149
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.364 35.164 24.839 (index)
 + source center of mass = 94.418 86.337 61.161 (index)
 + source-target CM = -0.673 5.155 -3.362 (xyz)
 + estimated center of mass shifts = -0.673 5.155 -3.362
++ shift param auto-range: -61.3..60.0 -63.2..73.5 -59.9..53.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.672577 .. 9.327423  center = -0.672577
 + Range param#2 [y-shift] = -4.844688 .. 15.155312  center = 5.155312
 + Range param#3 [z-shift] = -13.361572 .. 6.638428  center = -3.361572
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.672577 .. 39.327423  center = -0.672577
 + Range param#2 [y-shift] = -34.844688 .. 45.155312  center = 5.155312
 + Range param#3 [z-shift] = -43.361572 .. 36.638428  center = -3.361572
 + 12 free parameters
++ Normalized convergence radius = 0.0000096
++ Final parameter search ranges:
 +       x-shift =  -40.673 ..   39.327
 +       y-shift =  -34.845 ..   45.155
 +       z-shift =  -43.362 ..   36.638
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1338320 [out of 4423680] voxels
 + base mask has 50083 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=70.0737 usiz=499.68
 + - copying weight image
 + - using 37149 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 286.413 .. 1090.08; base clip 190.535 .. 798.392
 +  - versus source range 2.59124e-06 .. 1049.47; base range 0 .. 880.105
 + 33483 total points stored in 353 'RHDD(12.0364)' bloks
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S21_flip_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 13.206333 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 13.206333 degrees from plumb.
++ Source dataset: ./anatSS.sub-S21_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1319939 voxels in -source_automask+2
++ Zero-pad: ybot=5 ytop=3
++ Zero-pad: zbot=8 ztop=8
++ 37149 voxels [16.8%] in weight mask
++ Number of points for matching = 37149
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.364 35.164 24.839 (index)
 + source center of mass = 95.682 86.963 60.908 (index)
 + source-target CM = 0.591 4.529 -3.614 (xyz)
 + estimated center of mass shifts = 0.591 4.529 -3.614
++ shift param auto-range: -60.1..61.3 -63.8..72.9 -60.2..53.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.408951 .. 10.591049  center = 0.591049
 + Range param#2 [y-shift] = -5.470596 .. 14.529404  center = 4.529404
 + Range param#3 [z-shift] = -13.614323 .. 6.385677  center = -3.614323
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.408951 .. 40.591049  center = 0.591049
 + Range param#2 [y-shift] = -35.470596 .. 44.529404  center = 4.529404
 + Range param#3 [z-shift] = -43.614323 .. 36.385677  center = -3.614323
 + 12 free parameters
++ Normalized convergence radius = 0.0000096
++ Final parameter search ranges:
 +       x-shift =  -39.409 ..   40.591
 +       y-shift =  -35.471 ..   44.529
 +       z-shift =  -43.614 ..   36.386
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1319939 [out of 4423680] voxels
 + base mask has 50083 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=70.4148 usiz=499.638
 + - copying weight image
 + - using 37149 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 285.132 .. 1088.97; base clip 190.535 .. 798.392
 +  - versus source range 6.8588e-07 .. 1048.38; base range 0 .. 880.105
 + 33483 total points stored in 353 'RHDD(12.0364)' bloks
++ -allcostX1D finished
No flip cost is -0.650596 for lpc+ZZ cost function
Flip cost is -0.241348 for lpc+ZZ cost function
Data does not need flipping
#Script is running (command trimmed):
  cat_matvec -ONELINE ./anatSS.sub-S21_al_junk_e2a_only_mat.aff12.1D ./anatSS.sub-S21_unflipped_obla2e_mat.1D -I > ./anatSS.sub-S21_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./vr_base_ts_ns+orig -1Dmatrix_apply ./anatSS.sub-S21_al_junk_mat.aff12.1D -prefix ./anatSS.sub-S21_al_junk -input ./anatSS.sub-S21_unflipped+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 13.206333 degrees from plumb.
++ Source dataset: ./anatSS.sub-S21_unflipped+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 31.364 30.164 16.839 (index)
 + source center of mass = 127.549 115.138 112.443 (index)
 + source-target CM = -1.525 21.320 13.960 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -1.525   21.320   13.960
 +  shift search range is +/- =   60.669   60.669   37.316
 +                                  2.5%    35.1%    37.4%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0069 -0.0007 -0.0225 33.9239 -0.0212 -0.2305 -0.9798 197.1059 -0.0097 1.0030 -0.2273 40.7060
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S21_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat anatSS.sub-S21+orig -suffix \
 _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask \
 -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./anatSS.sub-S21_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S21*

# Finished alignment successfully

if ( ! -f anatQQ.sub-S21+tlrc.HEAD ) then
foreach run ( 01 02 03 04 05 06 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.sub-S21.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 13.206333 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S21.r01.tshift+orig.BRIK is 13.206333 degrees from plumb.
++ Reading input dataset ./pb02.sub-S21.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38838 voxels
 + 5652 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.233  pitch=-0.311  yaw=-0.222  dS=-0.390  dL=-0.210  dP=-0.338
++ Mean: roll=-0.104  pitch=-0.043  yaw=-0.037  dS=+0.025  dL=-0.064  dP=-0.083
++ Max : roll=+0.052  pitch=+0.221  yaw=+0.087  dS=+0.638  dL=+0.109  dP=+0.095
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.30(0.30) 0.30(0.33) 0.66(0.40) 0.82(0.17) 0.70(0.13) 0.37(0.46) 0.14(0.28) 0.17(0.27) 0.31(0.34) 0.73(0.43) 0.83(0.22) 0.52(0.33) 0.23(0.42) 0.12(0.29) 0.19(0.23) 0.49(0.35) 0.67(0.18) 0.53(0.15) 0.28(0.33) 0.14(0.18) 0.07(0.12) 0.31(0.27) 0.52(0.25) 0.62(0.10) 0.43(0.21) 0.19(0.28) 0.09(0.19) 0.11(0.11) 0.18(0.23) 0.38(0.23) 0.59(0.21) 0.44(0.17) 0.13(0.37) 0.18(0.26) 0.20(0.12) 0.36(0.42) 0.70(0.35) 0.57(0.16) 0.23(0.44) 0.16(0.26) 0.16(0.11) 0.31(0.40) 0.60(0.30) 0.54(0.08) 0.22(0.38) 0.20(0.33) 0.33(0.25) 0.22(0.38) 0.52(0.30) 0.56(0.09) 0.33(0.39) 0.17(0.33) 0.25(0.28) 0.30(0.10) 0.15(0.33) 0.34(0.20) 0.49(0.15) 0.35(0.22) 0.16(0.36) 0.29(0.25) 0.13(0.17) 0.37(0.49) 0.61(0.24) 0.50(0.13) 0.24(0.36) 0.24(0.32) 0.26(0.17) 0.18(0.35) 0.38(0.24) 0.28(0.11) 0.15(0.35) 0.27(0.16) 0.22(0.15) 0.12(0.26) 0.27(0.22) 0.35(0.12) 0.26(0.46) 0.53(0.37) 0.33(0.29) 0.35(0.49) 0.40(0.30) 0.21(0.41) 0.44(0.28) 0.34(0.17) 0.25(0.23) 0.38(0.20) 0.32(0.15) 0.34(0.35) 0.44(0.24) 0.39(0.09) 0.30(0.31) 0.42(0.26) 0.42(0.10) 0.29(0.28) 0.32(0.08) 0.30(0.05) 0.30(0.15) 0.39(0.17) 0.47(0.12) 0.37(0.13) 0.35(0.29) 0.39(0.10) 0.35(0.07) 0.32(0.29) 0.42(0.16) 0.53(0.14) 0.46(0.14) 0.31(0.37) 0.63(0.53) 0.80(0.18) 0.69(0.30) 0.50(0.39) 0.47(0.35) 0.46(0.13) 0.46(0.42) 0.65(0.30) 0.62(0.07) 0.48(0.37) 0.46(0.29) 0.51(0.27) 0.47(0.07) 0.45(0.46) 0.76(0.44) 0.70(0.09) 0.53(0.47) 0.45(0.27) 0.48(0.25) 0.42(0.32) 0.52(0.27) 0.52(0.07) 0.39(0.21) 0.40(0.25) 0.47(0.23) 0.35(0.15) 0.43(0.31) 0.44(0.09) 0.37(0.16) 0.34(0.34) 0.35(0.21) 0.21(0.36) 0.35(0.19) 0.30(0.07) 0.25(0.30) 0.45(0.24) 0.35(0.20) 0.33(0.38) 0.44(0.18) 0.25(0.34) 0.43(0.32) 0.46(0.26) 0.34(0.17) 0.28(0.33) 0.31(0.05) 0.26(0.30) 0.45(0.24) 0.59(0.19) 0.38(0.25) 0.30(0.37) 0.32(0.07) 0.32(0.31) 0.53(0.26) 0.50(0.13) 0.30(0.29) 0.30(0.17) 0.28(0.07) 0.35(0.28) 0.52(0.20) 0.41(0.17) 0.29(0.20) 0.28(0.14) 0.29(0.05) 0.39(0.25) 0.54(0.18) 0.48(0.09) 0.29(0.33) 0.29(0.05) 0.41(0.32) 0.55(0.22) 0.55(0.02) 0.34(0.27) 0.29(0.23) 0.27(0.13) 0.39(0.22) 0.46(0.25) 0.37(0.11) 0.32(0.15) 0.50(0.35) 0.57(0.16) 0.37(0.26) 0.39(0.11) 0.56(0.28) 0.70(0.16) 0.45(0.31) 0.37(0.18) 0.48(0.23) 0.68(0.23) 0.69(0.04) 0.43(0.34) 0.36(0.11) 0.59(0.35) 0.64(0.19) 0.31(0.48) 0.53(0.55) 0.60(0.12) 0.60(0.20) 0.45(0.29) 0.32(0.23) 0.33(0.24) 0.36(0.07) 0.48(0.30) 0.58(0.14) 0.50(0.16) 0.37(0.35) 0.38(0.25) 0.42(0.13) 0.34(0.27) 0.43(0.14) 0.34(0.30) 0.43(0.18) 0.32(0.25) 0.35(0.04) 0.39(0.15) 0.36(0.26) 0.49(0.16) 0.35(0.31) 0.40(0.26) 0.42(0.20) 0.48(0.37) 0.58(0.11) 0.36(0.35) 0.39(0.32) 0.42(0.19) 0.40(0.29) 0.37(0.06) 0.39(0.25) 0.41(0.03) 0.33(0.21) 0.38(0.08) 0.40(0.25) 0.41(0.05) 0.40(0.31) 0.63(0.28) 0.61(0.10) 0.37(0.36) 0.35(0.20) 0.40(0.10) 0.35(0.20) 0.60(0.39) 0.57(0.04) 0.37(0.36) 0.42(0.21) 0.35(0.11) 0.65(0.58) 1.19(0.57) 1.29(0.15) 1.13(0.26) 0.83(0.38) 0.57(0.48) 0.55(0.11) 0.82(0.33) 0.94(0.12) 0.76(0.24) 0.56(0.34) 0.51(0.15) 0.59(0.32) 0.80(0.25) 0.70(0.13) 0.55(0.25) 0.47(0.23) 0.48(0.08) 0.69(0.37) 0.83(0.15) 0.76(0.10) 0.54(0.29) 0.46(0.19) 0.45(0.11) 0.55(0.28) 0.69(0.19) 0.73(0.13) 0.61(0.15) 0.41(0.33) 0.39(0.27) 0.45(0.12) 0.45(0.27) 0.62(0.20) 0.51(0.18) 0.42(0.28) 0.44(0.07) 0.51(0.28) 0.56(0.07) 0.41(0.28) 0.41(0.15) 0.41(0.06) 0.51(0.33) 0.81(0.34) 0.75(0.11) 0.48(0.36) 0.35(0.34) 0.56(0.27) 0.37(0.38) 0.64(0.32) 0.63(0.04) 0.44(0.28) 0.37(0.24) 0.60(0.32) 0.49(0.12) 0.56(0.41) 0.70(0.15) 0.64(0.07) 0.42(0.31) 0.36(0.27) 0.47(0.24) 0.43(0.30) 0.51(0.11) 0.35(0.25) 0.37(0.16) 0.52(0.16) 0.45(0.36) 0.64(0.23) 0.43(0.24) 0.29(0.34) 0.42(0.15) 0.29(0.20) 0.39(0.13) 0.29(0.20) 0.28(0.08) 0.34(0.10) 0.35(0.06) 0.44(0.21) 0.53(0.12) 0.35(0.27) 0.31(0.28) 0.49(0.21) 0.42(0.37) 0.61(0.23) 0.43(0.19) 0.31(0.35) 0.39(0.11) 0.34(0.30) 0.37(0.06) 0.30(0.26) 0.33(0.12) 0.31(0.08) 0.40(0.11) 0.44(0.20) 0.47(0.30) 0.58(0.20) 0.39(0.40) 0.50(0.29) 0.41(0.22) 0.56(0.35) 0.59(0.06) 0.45(0.40) 0.43(0.13) 0.46(0.31) 0.60(0.23) 0.55(0.11) 0.42(0.37) 0.48(0.27) 0.47(0.10) 0.46(0.42) 0.70(0.33) 0.64(0.08) 0.48(0.30) 0.49(0.33) 0.62(0.37) 0.48(0.37) 0.68(0.34) 0.59(0.13) 0.50(0.38) 0.52(0.24) 0.48(0.14) 0.56(0.33) 0.69(0.18) 0.57(0.19) 0.48(0.38) 0.51(0.26) 0.60(0.21) 0.44(0.37) 0.52(0.24) 0.43(0.28) 0.49(0.16) 0.45(0.14) 0.49(0.31) 0.49(0.05) 0.43(0.36) 0.54(0.30) 0.56(0.07) 0.44(0.44) 0.61(0.27) 0.47(0.33) 0.50(0.25) 0.45(0.07) 0.40(0.19) 0.43(0.18) 0.43(0.15) 0.44(0.09) 0.44(0.16) 0.51(0.13) 0.51(0.14) 0.41(0.45) 0.76(0.49) 0.85(0.23) 0.65(0.28) 0.40(0.38) 0.39(0.35) 0.53(0.18) 0.49(0.32) 0.76(0.42) 0.86(0.11) 0.73(0.21)
++ Max displacement in automask = 1.29 (mm) at sub-brick 255
++ Max delta displ  in automask = 0.58 (mm) at sub-brick 253
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.sub-S21.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S21.aff12.1D anatSS.sub-S21_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source pb02.sub-S21.r01.tshift+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S21.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S21.r01.tshift+orig.BRIK is 13.206333 degrees from plumb.
++ opened source dataset 'pb02.sub-S21.r01.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1382141952
in use bytes     = 1163464576
Total (incl. mmap):
system bytes     = 1382141952
in use bytes     = 1163464576
max mmap regions =          1
max mmap bytes   =  109281280
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 1819.6 sec
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 13.206333 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1382141952
in use bytes     = 1163464736
Total (incl. mmap):
system bytes     = 1382141952
in use bytes     = 1163464736
max mmap regions =          1
max mmap bytes   =  109281280
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.sub-S21.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 13.206333 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S21.r02.tshift+orig.BRIK is 13.206333 degrees from plumb.
++ Reading input dataset ./pb02.sub-S21.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38871 voxels
 + 5682 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.007  pitch=-0.529  yaw=-0.139  dS=-0.019  dL=+0.096  dP=-0.473
++ Mean: roll=+0.163  pitch=-0.181  yaw=+0.104  dS=+0.610  dL=+0.297  dP=-0.150
++ Max : roll=+0.309  pitch=+0.162  yaw=+0.268  dS=+1.234  dL=+0.513  dP=+0.046
++ Max displacements (mm) for each sub-brick:
 1.62(0.00) 1.59(0.17) 1.56(0.21) 1.61(0.14) 1.83(0.31) 1.83(0.11) 1.64(0.23) 1.32(0.42) 1.11(0.46) 1.24(0.14) 1.69(0.58) 1.91(0.26) 1.73(0.22) 1.34(0.50) 1.13(0.41) 1.27(0.17) 1.62(0.49) 1.84(0.29) 1.76(0.10) 1.43(0.43) 1.19(0.39) 1.25(0.25) 1.57(0.47) 1.80(0.37) 1.79(0.11) 1.56(0.28) 1.34(0.30) 1.23(0.32) 1.38(0.17) 1.72(0.52) 1.89(0.24) 1.83(0.08) 1.59(0.33) 1.30(0.40) 1.36(0.22) 1.73(0.51) 1.89(0.21) 1.86(0.05) 1.61(0.33) 1.37(0.37) 1.45(0.27) 1.75(0.34) 1.84(0.25) 1.83(0.08) 1.63(0.25) 1.38(0.38) 1.31(0.27) 1.52(0.27) 1.77(0.36) 1.78(0.06) 1.66(0.17) 1.41(0.36) 1.31(0.28) 1.36(0.07) 1.67(0.47) 1.85(0.28) 1.77(0.11) 1.47(0.41) 1.23(0.37) 1.30(0.15) 1.58(0.41) 1.76(0.31) 1.71(0.09) 1.40(0.46) 1.25(0.33) 1.28(0.18) 1.59(0.43) 1.83(0.36) 1.63(0.26) 1.33(0.46) 1.23(0.22) 1.42(0.26) 1.70(0.47) 1.69(0.11) 1.45(0.36) 1.32(0.20) 1.44(0.23) 1.69(0.39) 1.86(0.25) 1.60(0.32) 1.29(0.51) 1.16(0.30) 1.32(0.20) 1.70(0.57) 2.00(0.43) 2.09(0.16) 1.83(0.36) 1.47(0.44) 1.30(0.42) 1.30(0.09) 1.65(0.46) 1.95(0.46) 1.95(0.05) 1.63(0.46) 1.39(0.39) 1.35(0.24) 1.50(0.19) 1.90(0.60) 2.11(0.35) 2.01(0.11) 1.63(0.52) 1.43(0.39) 1.42(0.17) 1.72(0.43) 1.94(0.33) 1.91(0.06) 1.63(0.39) 1.39(0.33) 1.46(0.14) 1.73(0.42) 1.86(0.19) 1.80(0.08) 1.55(0.35) 1.39(0.25) 1.41(0.10) 1.71(0.36) 1.93(0.34) 1.99(0.10) 1.70(0.32) 1.38(0.46) 1.25(0.34) 1.43(0.22) 1.79(0.57) 1.99(0.27) 1.83(0.21) 1.45(0.49) 1.23(0.37) 1.26(0.20) 1.56(0.48) 1.85(0.44) 1.85(0.11) 1.51(0.48) 1.30(0.36) 1.28(0.25) 1.43(0.20) 1.80(0.50) 1.88(0.22) 1.63(0.27) 1.36(0.33) 1.21(0.30) 1.03(0.32) 1.12(0.10) 1.44(0.52) 1.61(0.32) 1.59(0.05) 1.28(0.40) 1.11(0.29) 1.05(0.26) 1.31(0.37) 1.62(0.46) 1.63(0.06) 1.33(0.37) 1.11(0.38) 1.05(0.17) 1.04(0.20) 1.21(0.21) 1.46(0.37) 1.52(0.13) 1.50(0.07) 1.24(0.36) 1.06(0.26) 1.04(0.18) 1.33(0.40) 1.52(0.30) 1.46(0.08) 1.20(0.35) 1.03(0.25) 1.04(0.18) 1.24(0.25) 1.21(0.11) 0.85(0.55) 0.90(0.10) 1.09(0.30) 0.98(0.14) 0.83(0.26) 0.90(0.11) 1.11(0.34) 1.00(0.13) 0.82(0.38) 0.87(0.12) 1.08(0.34) 1.19(0.16) 0.98(0.28) 0.83(0.30) 0.75(0.18) 0.85(0.16) 1.08(0.44) 1.15(0.17) 0.91(0.36) 0.74(0.35) 0.81(0.18) 1.05(0.39) 1.02(0.08) 0.84(0.31) 0.82(0.14) 1.08(0.37) 1.23(0.22) 1.21(0.04) 0.94(0.38) 0.83(0.28) 0.78(0.17) 0.94(0.32) 1.18(0.39) 1.22(0.08) 0.96(0.33) 0.81(0.39) 0.75(0.35) 0.95(0.30) 1.21(0.42) 1.19(0.05) 0.95(0.38) 0.82(0.27) 0.81(0.13) 1.05(0.50) 1.51(0.51) 1.47(0.09) 1.12(0.48) 1.03(0.38) 0.82(0.32) 0.96(0.27) 1.27(0.51) 1.31(0.12) 0.98(0.47) 0.81(0.47) 0.89(0.11) 1.18(0.54) 1.28(0.19) 1.05(0.31) 0.91(0.25) 0.93(0.06) 1.08(0.24) 1.16(0.15) 1.21(0.08) 1.01(0.26) 0.85(0.27) 0.84(0.12) 1.04(0.30) 1.16(0.22) 1.15(0.08) 0.91(0.32) 0.70(0.37) 0.72(0.18) 0.96(0.38) 1.12(0.27) 1.10(0.07) 0.82(0.40) 0.68(0.32) 0.67(0.07) 0.89(0.36) 1.09(0.37) 1.03(0.08) 0.82(0.33) 0.70(0.30) 0.80(0.13) 1.04(0.37) 0.94(0.20) 0.78(0.31) 0.77(0.06) 1.00(0.33) 1.17(0.21) 1.10(0.10) 0.91(0.36) 0.79(0.26) 0.80(0.09) 0.96(0.35) 1.09(0.23) 0.98(0.15) 0.86(0.38) 0.84(0.16) 1.01(0.34) 1.05(0.12) 0.88(0.32) 0.80(0.24) 0.78(0.21) 0.98(0.45) 1.14(0.34) 1.03(0.14) 0.86(0.37) 0.78(0.31) 0.94(0.26) 1.03(0.29) 0.95(0.22) 0.90(0.22) 0.80(0.30) 0.85(0.16) 1.04(0.54) 0.99(0.09) 0.86(0.41) 0.87(0.19) 0.98(0.30) 1.08(0.28) 0.99(0.12) 0.88(0.48) 0.84(0.22) 0.88(0.16) 1.05(0.46) 1.19(0.26) 1.10(0.12) 0.99(0.34) 0.87(0.36) 0.77(0.22) 0.96(0.38) 1.23(0.59) 1.62(0.56) 1.29(0.36) 0.79(0.61) 0.59(0.37) 0.62(0.04) 0.95(0.53) 1.27(0.37) 1.28(0.13) 0.86(0.46) 0.59(0.41) 0.53(0.22) 0.86(0.38) 1.07(0.27) 1.01(0.09) 0.74(0.31) 0.52(0.24) 0.64(0.13) 1.02(0.46) 1.30(0.33) 1.00(0.31) 0.97(0.14) 0.87(0.32) 0.81(0.18) 1.15(0.42) 1.40(0.27) 1.38(0.06) 1.02(0.38) 0.71(0.36) 0.58(0.35) 0.66(0.10) 1.07(0.57) 1.36(0.31) 0.99(0.39) 0.77(0.33) 0.77(0.11) 0.80(0.04) 0.97(0.22) 1.04(0.09) 1.22(0.21) 1.24(0.06) 0.91(0.36) 0.64(0.32) 0.62(0.20) 0.83(0.33) 1.04(0.24) 0.96(0.11) 0.69(0.35) 0.72(0.11) 0.92(0.24) 1.11(0.23) 0.94(0.22) 0.71(0.27) 0.55(0.18) 0.74(0.21) 1.09(0.43) 0.99(0.12) 0.81(0.28) 0.59(0.26) 0.81(0.28) 0.92(0.15) 0.62(0.34) 0.38(0.33) 0.47(0.10) 1.00(0.64) 1.54(0.56) 1.43(0.13) 0.94(0.51) 0.61(0.35) 0.58(0.31) 0.84(0.33) 1.25(0.45) 1.31(0.14) 0.86(0.46) 0.59(0.32) 0.49(0.21) 0.61(0.13) 0.94(0.41) 1.15(0.23) 0.92(0.24) 0.65(0.29) 0.50(0.27) 0.70(0.24) 1.05(0.38) 1.06(0.06) 0.62(0.46) 0.29(0.45) 0.28(0.14) 0.61(0.45) 0.90(0.31) 0.62(0.30) 0.38(0.39) 0.34(0.11) 0.56(0.31) 0.76(0.26) 0.56(0.21) 0.31(0.38) 0.29(0.17) 0.62(0.45) 1.01(0.46) 0.95(0.08) 0.52(0.49) 0.32(0.36) 0.30(0.32) 0.50(0.44) 1.02(0.61) 1.01(0.07) 0.56(0.53) 0.25(0.49) 0.29(0.14)
++ Max displacement in automask = 2.11 (mm) at sub-brick 98
++ Max delta displ  in automask = 0.64 (mm) at sub-brick 366
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.sub-S21.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S21.aff12.1D anatSS.sub-S21_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source pb02.sub-S21.r02.tshift+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S21.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S21.r02.tshift+orig.BRIK is 13.206333 degrees from plumb.
++ opened source dataset 'pb02.sub-S21.r02.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1367007232
in use bytes     = 1148328352
Total (incl. mmap):
system bytes     = 1367007232
in use bytes     = 1148328352
max mmap regions =          1
max mmap bytes   =  109281280
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 1988.0 sec
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 13.206333 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1367007232
in use bytes     = 1148328512
Total (incl. mmap):
system bytes     = 1367007232
in use bytes     = 1148328512
max mmap regions =          1
max mmap bytes   =  109281280
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.sub-S21.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 13.206333 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S21.r03.tshift+orig.BRIK is 13.206318 degrees from plumb.
++ Reading input dataset ./pb02.sub-S21.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38862 voxels
 + 5623 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.034  pitch=-0.631  yaw=-0.014  dS=+0.681  dL=+0.208  dP=-0.287
++ Mean: roll=+0.126  pitch=-0.411  yaw=+0.278  dS=+1.339  dL=+0.356  dP=-0.029
++ Max : roll=+0.267  pitch=-0.178  yaw=+0.524  dS=+1.919  dL=+0.521  dP=+0.210
++ Max displacements (mm) for each sub-brick:
 2.47(0.00) 2.54(0.21) 2.64(0.22) 2.52(0.19) 2.29(0.36) 2.14(0.31) 2.28(0.20) 2.65(0.56) 2.80(0.19) 2.60(0.25) 2.39(0.32) 2.11(0.35) 2.16(0.14) 2.55(0.51) 2.75(0.30) 2.79(0.17) 2.58(0.27) 2.18(0.49) 2.03(0.56) 2.23(0.26) 2.35(0.38) 2.34(0.14) 2.29(0.21) 2.08(0.31) 2.18(0.13) 2.36(0.33) 2.37(0.10) 2.36(0.09) 2.24(0.21) 2.06(0.28) 2.08(0.08) 2.31(0.35) 2.39(0.16) 2.36(0.08) 2.21(0.23) 2.21(0.10) 2.21(0.13) 2.30(0.18) 2.54(0.32) 2.59(0.11) 2.41(0.25) 2.17(0.31) 2.00(0.33) 2.07(0.09) 2.42(0.46) 2.58(0.23) 2.48(0.15) 2.24(0.32) 2.09(0.26) 2.05(0.24) 2.14(0.10) 2.41(0.35) 2.59(0.20) 2.55(0.08) 2.33(0.29) 2.08(0.28) 1.87(0.42) 2.00(0.14) 2.38(0.50) 2.60(0.26) 2.56(0.14) 2.32(0.30) 2.07(0.31) 1.88(0.32) 2.10(0.23) 2.44(0.54) 2.58(0.22) 2.45(0.18) 2.17(0.36) 1.92(0.36) 2.00(0.09) 2.45(0.59) 2.63(0.26) 2.53(0.13) 2.34(0.27) 2.31(0.09) 2.13(0.27) 2.06(0.15) 2.40(0.45) 2.65(0.32) 2.57(0.11) 2.31(0.39) 2.01(0.41) 2.23(0.37) 2.70(0.62) 2.91(0.36) 2.77(0.17) 2.46(0.41) 2.24(0.34) 2.13(0.21) 2.42(0.35) 2.80(0.50) 2.87(0.19) 2.69(0.21) 2.36(0.45) 2.17(0.38) 2.30(0.14) 2.66(0.48) 2.74(0.14) 2.48(0.31) 2.23(0.30) 2.22(0.18) 2.57(0.45) 2.86(0.41) 2.67(0.24) 2.20(0.65) 2.12(0.34) 2.49(0.51) 2.80(0.45) 2.70(0.14) 2.35(0.50) 2.16(0.29) 2.29(0.18) 2.60(0.41) 2.71(0.14) 2.63(0.11) 2.39(0.35) 2.27(0.17) 2.15(0.15) 2.35(0.22) 2.63(0.37) 2.70(0.09) 2.55(0.20) 2.32(0.34) 2.18(0.16) 2.26(0.09) 2.55(0.36) 2.67(0.17) 2.63(0.10) 2.43(0.26) 2.39(0.10) 2.25(0.16) 2.27(0.03) 2.48(0.29) 2.51(0.10) 2.38(0.21) 2.16(0.28) 2.10(0.17) 2.36(0.33) 2.55(0.27) 2.42(0.18) 2.19(0.38) 2.14(0.08) 2.41(0.38) 2.42(0.05) 2.25(0.28) 2.13(0.14) 2.07(0.12) 2.19(0.15) 2.56(0.44) 2.64(0.18) 2.37(0.30) 2.11(0.38) 1.97(0.33) 1.95(0.14) 2.25(0.47) 2.59(0.41) 2.64(0.13) 2.25(0.47) 2.05(0.37) 1.84(0.29) 1.98(0.15) 2.29(0.51) 2.57(0.32) 2.53(0.12) 2.22(0.41) 2.07(0.30) 1.85(0.27) 1.96(0.11) 2.32(0.59) 2.61(0.40) 2.57(0.07) 2.30(0.37) 2.06(0.40) 1.85(0.37) 1.95(0.12) 2.30(0.53) 2.48(0.30) 2.39(0.12) 2.12(0.39) 2.01(0.31) 2.01(0.07) 2.21(0.36) 2.37(0.31) 2.43(0.07) 2.28(0.20) 2.08(0.34) 1.90(0.26) 1.88(0.18) 2.03(0.25) 2.25(0.34) 2.29(0.09) 2.20(0.14) 1.98(0.33) 1.81(0.24) 1.71(0.31) 1.94(0.30) 2.23(0.42) 2.26(0.22) 2.10(0.20) 1.99(0.22) 1.98(0.28) 1.74(0.32) 1.97(0.36) 2.33(0.53) 2.40(0.12) 2.12(0.34) 1.94(0.34) 1.71(0.30) 1.75(0.14) 2.07(0.46) 2.25(0.27) 2.16(0.14) 1.97(0.30) 1.78(0.26) 1.62(0.30) 1.90(0.36) 2.22(0.45) 2.23(0.08) 2.03(0.25) 1.77(0.39) 1.60(0.38) 1.62(0.13) 1.94(0.42) 2.14(0.33) 2.18(0.08) 1.99(0.23) 1.78(0.34) 1.56(0.32) 1.62(0.09) 1.98(0.55) 2.24(0.33) 2.16(0.11) 1.87(0.41) 1.62(0.37) 1.47(0.38) 1.63(0.18) 1.88(0.40) 1.93(0.16) 1.99(0.07) 1.82(0.22) 1.71(0.22) 1.47(0.34) 1.37(0.30) 1.63(0.36) 1.85(0.33) 1.85(0.08) 1.75(0.15) 1.54(0.33) 1.38(0.44) 1.37(0.11) 1.64(0.36) 1.81(0.23) 1.79(0.05) 1.74(0.20) 1.71(0.20) 1.56(0.17) 1.75(0.33) 1.90(0.22) 1.89(0.07) 1.68(0.28) 1.52(0.25) 1.39(0.19) 1.56(0.23) 1.89(0.42) 2.28(0.49) 2.46(0.27) 2.21(0.33) 1.99(0.33) 1.80(0.43) 1.81(0.39) 2.17(0.54) 2.50(0.50) 2.47(0.11) 2.06(0.55) 1.68(0.52) 1.77(0.28) 2.16(0.60) 2.38(0.33) 2.21(0.20) 1.89(0.43) 1.68(0.38) 1.82(0.14) 2.23(0.57) 2.36(0.25) 2.19(0.20) 1.88(0.38) 1.72(0.33) 1.90(0.21) 2.26(0.47) 2.22(0.11) 1.99(0.28) 1.75(0.31) 1.50(0.32) 1.69(0.22)
++ Max displacement in automask = 2.91 (mm) at sub-brick 85
++ Max delta displ  in automask = 0.65 (mm) at sub-brick 105
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.sub-S21.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S21.aff12.1D anatSS.sub-S21_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source pb02.sub-S21.r03.tshift+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S21.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S21.r03.tshift+orig.BRIK is 13.206318 degrees from plumb.
++ opened source dataset 'pb02.sub-S21.r03.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1382105088
in use bytes     = 1163419248
Total (incl. mmap):
system bytes     = 1382105088
in use bytes     = 1163419248
max mmap regions =          1
max mmap bytes   =  109281280
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1339.1 sec
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 13.206318 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1382105088
in use bytes     = 1163419408
Total (incl. mmap):
system bytes     = 1382105088
in use bytes     = 1163419408
max mmap regions =          1
max mmap bytes   =  109281280
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -cubic -1Dmatrix_save mat.r04.vr.aff12.1D pb02.sub-S21.r04.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 13.206333 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S21.r04.tshift+orig.BRIK is 11.698814 degrees from plumb.
++ centers of base and input datasets are 1.57 mm apart
++ Reading input dataset ./pb02.sub-S21.r04.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38818 voxels
 + 5700 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.565  pitch=+0.889  yaw=+1.022  dS=-1.287  dL=+0.970  dP=-1.046
++ Mean: roll=+0.825  pitch=+1.348  yaw=+1.747  dS=-0.539  dL=+1.303  dP=-0.811
++ Max : roll=+1.168  pitch=+1.861  yaw=+2.327  dS=+0.168  dL=+1.684  dP=-0.681
++ Max displacements (mm) for each sub-brick:
 3.44(0.00) 3.30(0.21) 3.30(0.17) 3.31(0.32) 3.34(0.06) 3.34(0.24) 3.32(0.21) 3.29(0.25) 3.24(0.24) 3.19(0.25) 3.21(0.09) 3.18(0.13) 3.15(0.19) 3.19(0.21) 3.19(0.10) 3.22(0.09) 3.25(0.06) 3.25(0.07) 3.26(0.20) 3.22(0.06) 3.19(0.21) 3.19(0.04) 3.21(0.15) 3.20(0.26) 3.21(0.13) 3.21(0.07) 3.23(0.15) 3.23(0.11) 3.26(0.17) 3.29(0.13) 3.29(0.11) 3.24(0.12) 3.30(0.25) 3.33(0.37) 3.31(0.07) 3.29(0.24) 3.29(0.35) 3.32(0.13) 3.32(0.10) 3.35(0.12) 3.33(0.05) 3.37(0.08) 3.38(0.17) 3.38(0.12) 3.41(0.11) 3.38(0.13) 3.37(0.23) 3.40(0.12) 3.42(0.24) 3.38(0.11) 3.45(0.37) 3.44(0.19) 3.46(0.30) 3.51(0.10) 3.54(0.25) 3.53(0.10) 3.51(0.18) 3.49(0.28) 3.42(0.23) 3.44(0.27) 3.43(0.27) 3.49(0.10) 3.51(0.12) 3.53(0.11) 3.56(0.05) 3.58(0.16) 3.59(0.22) 3.64(0.16) 3.69(0.12) 3.75(0.24) 3.70(0.24) 3.72(0.31) 3.65(0.23) 3.71(0.37) 3.75(0.13) 3.76(0.25) 3.74(0.07) 3.76(0.21) 3.78(0.20) 3.75(0.22) 3.75(0.11) 3.77(0.28) 3.78(0.10) 3.78(0.32) 3.79(0.09) 3.83(0.36) 3.84(0.24) 3.85(0.37) 3.92(0.07) 3.92(0.21) 3.91(0.09) 4.00(0.19) 3.98(0.12) 4.03(0.13) 4.03(0.10) 4.07(0.13) 4.02(0.11) 4.15(0.23) 4.09(0.19) 4.03(0.31) 4.15(0.45) 4.12(0.15) 4.12(0.04) 4.24(0.26) 4.15(0.36) 4.16(0.08) 4.24(0.29) 4.13(0.36) 4.15(0.09) 4.24(0.33) 4.20(0.17) 4.25(0.36) 4.23(0.29) 4.19(0.16) 4.24(0.13) 4.29(0.31) 4.23(0.21) 4.23(0.07) 4.39(0.40) 4.33(0.22) 4.27(0.17) 4.38(0.28) 4.29(0.27) 4.26(0.15) 4.32(0.31) 4.41(0.20) 4.36(0.21) 4.32(0.14) 4.31(0.11) 4.38(0.21) 4.40(0.12) 4.46(0.14) 4.44(0.10) 4.49(0.11) 4.46(0.08) 4.53(0.16) 4.41(0.28) 4.53(0.23) 4.59(0.07) 4.58(0.06) 4.64(0.08) 4.58(0.09) 4.69(0.11) 4.71(0.13) 4.75(0.12) 4.71(0.12) 4.70(0.12) 4.71(0.15) 4.61(0.20) 4.55(0.44) 4.46(0.23) 4.50(0.31) 4.57(0.09) 4.64(0.18) 4.64(0.09) 4.56(0.18) 4.58(0.17) 4.59(0.09) 4.62(0.07) 4.62(0.10) 4.56(0.10) 4.60(0.21) 4.47(0.37) 4.44(0.14) 4.50(0.35) 4.62(0.29) 4.58(0.30) 4.54(0.23) 4.66(0.31) 4.67(0.07) 4.62(0.20) 4.72(0.20) 4.71(0.10) 4.77(0.09) 4.82(0.30) 4.65(0.38) 4.70(0.13) 4.83(0.28) 4.73(0.28) 4.82(0.21) 4.81(0.11) 4.89(0.10) 4.86(0.09) 4.87(0.09) 4.87(0.11) 4.81(0.17) 4.87(0.19) 4.77(0.25) 4.81(0.22) 4.76(0.13) 4.61(0.36) 4.65(0.09) 4.82(0.39) 4.84(0.11) 4.73(0.33) 4.82(0.28) 4.83(0.07) 4.76(0.23) 4.86(0.25) 4.86(0.08) 4.87(0.20) 4.80(0.26) 4.87(0.16) 4.85(0.09) 4.91(0.15) 4.92(0.12) 5.03(0.19) 5.01(0.12) 4.97(0.06) 5.00(0.08) 5.08(0.17) 5.04(0.09) 5.06(0.04) 4.97(0.38) 4.93(0.07) 5.08(0.52) 5.13(0.17) 5.02(0.38) 5.03(0.08) 5.09(0.25) 5.08(0.12) 5.24(0.23) 5.17(0.16) 5.17(0.11) 5.16(0.09) 5.26(0.14) 5.21(0.21) 5.24(0.20) 5.22(0.07) 5.21(0.12) 5.23(0.12) 5.36(0.16) 5.26(0.18) 5.35(0.16) 5.28(0.23) 5.29(0.10) 5.28(0.15) 5.32(0.16) 5.33(0.05) 5.25(0.29) 5.25(0.26) 5.27(0.18) 5.08(0.55) 5.01(0.35) 4.83(0.22) 4.81(0.26) 4.93(0.20) 5.02(0.16) 5.09(0.16) 5.06(0.15) 5.05(0.15) 5.21(0.28) 5.20(0.06) 5.09(0.34) 5.15(0.19) 5.22(0.20) 5.18(0.23) 5.18(0.10) 5.25(0.21) 5.33(0.13) 5.30(0.18) 5.36(0.17) 5.36(0.09) 5.38(0.08) 5.36(0.07) 5.44(0.28) 5.32(0.19) 5.07(0.49) 5.15(0.25) 5.34(0.26) 5.38(0.10) 5.42(0.09) 5.40(0.08) 5.51(0.18) 5.45(0.14) 5.49(0.06) 5.46(0.08) 5.54(0.16) 5.32(0.50) 5.28(0.17) 5.46(0.34) 5.46(0.11) 5.56(0.17) 5.47(0.24) 5.45(0.10) 5.50(0.18) 5.38(0.27) 5.35(0.14) 5.47(0.27) 5.39(0.23) 5.35(0.04) 5.38(0.27) 5.28(0.24) 5.33(0.18) 5.37(0.07) 5.28(0.18) 5.41(0.31) 5.44(0.15) 5.43(0.26) 5.60(0.26) 5.57(0.12) 5.69(0.14) 5.67(0.17) 5.74(0.09) 5.64(0.24) 5.56(0.13) 5.62(0.45) 5.61(0.16) 5.57(0.16) 5.62(0.08) 5.60(0.06) 5.65(0.08) 5.65(0.03) 5.69(0.13) 5.85(0.20) 5.85(0.13) 5.92(0.10) 5.83(0.24) 5.84(0.30) 5.83(0.23) 5.79(0.18) 5.84(0.21) 5.88(0.10) 5.86(0.15) 5.89(0.14) 5.89(0.08) 5.87(0.08) 5.92(0.12) 5.87(0.10) 5.90(0.07) 5.74(0.34) 5.68(0.20) 5.80(0.38) 5.68(0.27) 5.65(0.15) 5.70(0.07) 5.70(0.09) 5.60(0.16) 5.37(0.51) 5.39(0.38) 5.52(0.37) 5.54(0.15) 5.52(0.12) 5.35(0.34) 5.24(0.15) 5.39(0.38) 5.15(0.28) 5.13(0.31) 5.29(0.40) 5.29(0.23) 5.20(0.18) 5.20(0.14) 5.16(0.06) 5.11(0.11) 5.13(0.04) 5.03(0.17) 5.17(0.27) 5.06(0.23) 5.07(0.10) 5.09(0.10) 5.13(0.06) 5.15(0.12) 5.11(0.15) 5.22(0.18) 5.19(0.10) 5.21(0.12) 5.13(0.20) 5.26(0.23) 5.29(0.12) 5.32(0.11) 5.23(0.21) 5.26(0.19) 5.23(0.10) 5.10(0.21) 5.18(0.10) 5.27(0.36) 5.53(0.56) 5.50(0.11) 5.50(0.14) 5.51(0.06) 5.51(0.06) 5.46(0.08) 5.49(0.06) 5.43(0.12) 5.46(0.09) 5.42(0.15) 5.42(0.16) 5.47(0.12) 5.42(0.10) 5.45(0.07) 5.44(0.11) 5.55(0.21) 5.51(0.05) 5.52(0.05) 5.55(0.07) 5.60(0.07) 5.47(0.28) 5.50(0.12) 5.64(0.28) 5.55(0.22) 5.58(0.12) 5.64(0.10) 5.55(0.16) 5.65(0.19) 5.49(0.31) 5.56(0.17) 5.65(0.17) 5.61(0.11) 5.65(0.13) 5.57(0.16) 5.62(0.15) 5.50(0.21)
++ Max displacement in automask = 5.92 (mm) at sub-brick 316
++ Max delta displ  in automask = 0.56 (mm) at sub-brick 376
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb02.sub-S21.r04.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S21.aff12.1D anatSS.sub-S21_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source pb02.sub-S21.r04.tshift+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r04.warp.aff12.1D -prefix rm.epi.nomask.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S21.r04.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S21.r04.tshift+orig.BRIK is 11.698814 degrees from plumb.
++ opened source dataset 'pb02.sub-S21.r04.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1337131008
in use bytes     = 1118450752
Total (incl. mmap):
system bytes     = 1337131008
in use bytes     = 1118450752
max mmap regions =          1
max mmap bytes   =  109281280
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r04+tlrc.BRIK
++ total Elapsed time = 1708.4 sec
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r04.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.698814 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1337131008
in use bytes     = 1118450912
Total (incl. mmap):
system bytes     = 1337131008
in use bytes     = 1118450912
max mmap regions =          1
max mmap bytes   =  109281280
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r05.1D -prefix rm.epi.volreg.r05 -cubic -1Dmatrix_save mat.r05.vr.aff12.1D pb02.sub-S21.r05.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 13.206333 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S21.r05.tshift+orig.BRIK is 11.698814 degrees from plumb.
++ centers of base and input datasets are 1.57 mm apart
++ Reading input dataset ./pb02.sub-S21.r05.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38928 voxels
 + 5680 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.357  pitch=+0.751  yaw=+0.543  dS=+0.059  dL=+0.562  dP=-1.066
++ Mean: roll=+0.798  pitch=+1.110  yaw=+0.890  dS=+0.427  dL=+1.097  dP=-0.860
++ Max : roll=+1.300  pitch=+1.446  yaw=+1.191  dS=+1.015  dL=+1.497  dP=-0.632
++ Max displacements (mm) for each sub-brick:
 2.22(0.00) 2.24(0.51) 2.42(0.23) 2.30(0.35) 2.17(0.37) 2.16(0.12) 2.29(0.34) 2.39(0.15) 2.31(0.17) 2.30(0.18) 2.40(0.12) 2.37(0.10) 2.40(0.08) 2.35(0.08) 2.40(0.07) 2.40(0.07) 2.41(0.04) 2.42(0.07) 2.45(0.23) 2.39(0.25) 2.42(0.06) 2.40(0.09) 2.41(0.04) 2.47(0.10) 2.46(0.05) 2.51(0.07) 2.44(0.10) 2.46(0.06) 2.59(0.13) 2.57(0.04) 2.61(0.07) 2.57(0.06) 2.68(0.29) 2.61(0.25) 2.62(0.06) 2.64(0.03) 2.63(0.07) 2.71(0.11) 2.68(0.06) 2.71(0.07) 2.73(0.11) 2.76(0.07) 2.76(0.05) 2.77(0.03) 2.79(0.11) 2.76(0.16) 2.78(0.22) 2.75(0.06) 2.83(0.14) 2.79(0.09) 2.77(0.08) 2.81(0.06) 2.78(0.06) 2.84(0.08) 2.77(0.09) 2.84(0.16) 2.83(0.05) 2.84(0.07) 2.83(0.11) 2.77(0.28) 2.76(0.11) 2.77(0.02) 2.76(0.14) 2.74(0.12) 2.62(0.23) 2.67(0.43) 2.67(0.11) 2.53(0.30) 2.61(0.32) 2.65(0.18) 2.64(0.27) 2.60(0.07) 2.65(0.10) 2.64(0.11) 2.66(0.06) 2.66(0.02) 2.67(0.07) 2.70(0.07) 2.76(0.07) 2.74(0.09) 2.78(0.10) 2.81(0.08) 2.85(0.05) 2.88(0.08) 2.85(0.11) 2.89(0.10) 2.85(0.05) 2.92(0.10) 2.90(0.03) 2.92(0.05) 2.97(0.06) 2.91(0.06) 2.96(0.06) 2.96(0.06) 2.95(0.05) 3.01(0.09) 2.97(0.06) 2.95(0.03) 2.98(0.06) 2.85(0.17) 2.91(0.11) 3.00(0.09) 3.00(0.05) 3.04(0.07) 3.00(0.05) 3.03(0.05) 3.01(0.10) 3.04(0.09) 3.09(0.06) 3.08(0.04) 3.12(0.07) 3.03(0.13) 3.03(0.09) 3.00(0.09) 2.97(0.09) 3.02(0.13) 3.01(0.03) 3.09(0.10) 3.07(0.08) 3.10(0.04) 3.03(0.09) 3.02(0.03) 3.03(0.06) 3.01(0.10) 3.05(0.15) 3.04(0.38) 3.06(0.25) 2.95(0.17) 2.91(0.16) 2.90(0.15) 2.91(0.31) 2.90(0.09) 2.93(0.23) 2.92(0.18) 2.91(0.04) 2.91(0.10) 2.92(0.11) 2.90(0.10) 2.92(0.09) 2.96(0.07) 2.97(0.09) 3.01(0.09) 3.04(0.08) 3.04(0.08) 3.00(0.05) 3.08(0.08) 3.06(0.09) 3.09(0.06) 3.10(0.04) 3.05(0.11) 3.08(0.13) 3.04(0.05) 3.05(0.06) 3.07(0.02) 3.03(0.04) 3.06(0.05) 3.08(0.04) 3.04(0.07) 3.09(0.09) 3.10(0.03) 3.10(0.04) 3.15(0.06) 3.08(0.10) 3.11(0.07) 3.14(0.05) 3.11(0.06) 3.17(0.06) 3.14(0.09) 3.17(0.11) 3.19(0.07) 3.17(0.06) 3.25(0.13) 3.18(0.07) 3.21(0.07) 3.19(0.11) 3.12(0.21) 3.12(0.15) 3.13(0.05) 3.22(0.14) 3.19(0.06) 3.20(0.07) 3.16(0.05) 3.15(0.04) 3.23(0.12) 3.19(0.06) 3.24(0.06) 3.25(0.11) 3.27(0.22) 3.23(0.11) 3.27(0.07) 3.21(0.14) 3.28(0.15) 3.29(0.04) 3.34(0.12) 3.32(0.10) 3.31(0.06) 3.40(0.11) 3.34(0.10) 3.38(0.06) 3.38(0.04) 3.41(0.08) 3.42(0.08) 3.37(0.20) 3.38(0.09) 3.42(0.12) 3.44(0.05) 3.45(0.06) 3.50(0.06) 3.46(0.07) 3.52(0.07) 3.49(0.09) 3.50(0.13) 3.48(0.10) 3.54(0.32) 3.55(0.33) 3.38(0.28) 3.36(0.35) 3.44(0.14) 3.43(0.19) 3.44(0.11) 3.49(0.07) 3.54(0.06) 3.59(0.11) 3.65(0.13) 3.67(0.14) 3.72(0.18) 3.72(0.23) 3.65(0.10) 3.68(0.18) 3.70(0.09) 3.79(0.24) 3.84(0.16) 3.91(0.21) 3.92(0.16) 3.93(0.16) 3.92(0.16) 3.91(0.06) 3.92(0.08) 3.93(0.06) 3.84(0.14) 3.83(0.15) 3.75(0.08) 3.79(0.16) 3.75(0.05) 3.77(0.13) 3.78(0.05) 3.79(0.11) 3.84(0.12) 3.89(0.14) 3.96(0.17) 3.98(0.14) 3.96(0.11) 3.99(0.11) 3.89(0.27) 3.98(0.23) 4.02(0.10) 4.06(0.11) 4.11(0.09) 4.12(0.13) 4.12(0.07) 4.16(0.09) 4.15(0.03) 4.17(0.09) 4.15(0.13) 4.17(0.06) 4.07(0.11) 4.05(0.14) 4.06(0.13) 4.11(0.09) 4.04(0.10) 4.08(0.07) 4.07(0.05) 4.10(0.06) 4.12(0.07) 4.09(0.04) 4.11(0.05) 4.06(0.09) 4.10(0.06) 4.10(0.05) 4.10(0.11) 4.15(0.08) 4.08(0.09) 4.10(0.05) 4.19(0.14) 4.23(0.08) 4.26(0.12) 4.26(0.10) 4.25(0.05) 4.24(0.25) 4.26(0.06) 4.22(0.07) 4.26(0.10) 4.22(0.07) 4.27(0.11) 4.21(0.08) 4.17(0.08) 4.15(0.04) 4.15(0.06) 4.21(0.08) 4.18(0.07) 4.21(0.09) 4.28(0.13) 4.28(0.09) 4.33(0.07) 4.26(0.15) 4.25(0.14) 4.22(0.07) 4.27(0.10) 4.35(0.14) 4.33(0.06) 4.37(0.07) 4.38(0.06) 4.32(0.13) 4.31(0.08) 4.27(0.06) 4.33(0.10) 4.24(0.10) 4.29(0.12) 4.28(0.14) 4.28(0.13) 4.24(0.05) 4.28(0.04) 4.34(0.10) 4.33(0.06) 4.42(0.12) 4.39(0.10) 4.42(0.10) 4.36(0.13) 4.45(0.15) 4.38(0.13) 4.41(0.22) 4.24(0.42) 4.07(0.35) 3.79(0.31) 3.66(0.34) 3.72(0.14) 3.78(0.16) 3.80(0.04) 3.81(0.08) 3.82(0.09) 3.84(0.12) 3.91(0.11) 3.94(0.05) 3.95(0.06) 3.91(0.07) 3.89(0.07) 3.76(0.20) 3.81(0.06) 3.78(0.08) 3.83(0.14) 3.87(0.08) 3.91(0.11) 3.94(0.14) 3.97(0.14) 4.03(0.15) 4.05(0.10) 4.02(0.07) 4.01(0.18) 4.09(0.15) 4.09(0.06) 4.05(0.21) 4.07(0.18) 4.13(0.08) 4.08(0.10) 4.15(0.08) 4.11(0.09) 4.16(0.11) 4.18(0.08) 4.18(0.09) 4.14(0.11) 4.07(0.14) 4.11(0.09) 4.10(0.08) 4.21(0.12) 4.22(0.06) 4.23(0.07) 4.25(0.06) 4.30(0.11) 4.25(0.13) 4.27(0.17) 4.29(0.05) 4.24(0.07) 4.21(0.05) 4.13(0.11) 4.07(0.26) 4.02(0.13) 4.04(0.07) 3.99(0.08) 3.97(0.08) 3.94(0.07) 3.92(0.03) 3.99(0.09) 3.97(0.06) 3.96(0.04) 3.98(0.10) 3.87(0.15) 3.89(0.18) 3.88(0.15) 3.77(0.26) 3.82(0.09) 3.83(0.26) 3.81(0.22) 3.80(0.08) 3.78(0.20) 3.77(0.26) 3.75(0.18) 3.81(0.17) 3.81(0.10) 3.82(0.08) 3.80(0.14) 3.74(0.27) 3.69(0.39)
++ Max displacement in automask = 4.45 (mm) at sub-brick 328
++ Max delta displ  in automask = 0.51 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r05+orig.BRIK
3dcalc -overwrite -a pb02.sub-S21.r05.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S21.aff12.1D anatSS.sub-S21_al_junk_mat.aff12.1D -I mat.r05.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source pb02.sub-S21.r05.tshift+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r05.warp.aff12.1D -prefix rm.epi.nomask.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S21.r05.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S21.r05.tshift+orig.BRIK is 11.698814 degrees from plumb.
++ opened source dataset 'pb02.sub-S21.r05.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1337131008
in use bytes     = 1118450752
Total (incl. mmap):
system bytes     = 1337131008
in use bytes     = 1118450752
max mmap regions =          1
max mmap bytes   =  109281280
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r05+tlrc.BRIK
++ total Elapsed time = 1779.3 sec
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r05.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.698814 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1337131008
in use bytes     = 1118450912
Total (incl. mmap):
system bytes     = 1337131008
in use bytes     = 1118450912
max mmap regions =          1
max mmap bytes   =  109281280
3dTstat -min -prefix rm.epi.min.r05 rm.epi.1.r05+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r05+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r06.1D -prefix rm.epi.volreg.r06 -cubic -1Dmatrix_save mat.r06.vr.aff12.1D pb02.sub-S21.r06.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 13.206333 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S21.r06.tshift+orig.BRIK is 11.698797 degrees from plumb.
++ centers of base and input datasets are 1.58 mm apart
++ Reading input dataset ./pb02.sub-S21.r06.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 38948 voxels
 + 5675 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.020  pitch=-0.158  yaw=+0.429  dS=+0.358  dL=+0.376  dP=-0.683
++ Mean: roll=+0.228  pitch=+0.452  yaw=+0.574  dS=+0.925  dL=+0.644  dP=-0.450
++ Max : roll=+0.534  pitch=+0.907  yaw=+0.747  dS=+1.616  dL=+0.910  dP=-0.163
++ Max displacements (mm) for each sub-brick:
 2.07(0.00) 2.29(0.27) 2.23(0.14) 2.01(0.37) 1.90(0.30) 2.16(0.35) 2.23(0.12) 2.01(0.35) 1.95(0.12) 2.19(0.34) 2.14(0.07) 1.95(0.33) 1.94(0.11) 2.09(0.25) 1.97(0.13) 2.11(0.15) 1.91(0.27) 1.94(0.12) 2.20(0.36) 2.04(0.22) 1.86(0.28) 2.09(0.32) 2.16(0.12) 1.98(0.31) 1.78(0.30) 1.88(0.19) 2.12(0.36) 2.00(0.18) 1.79(0.27) 1.85(0.16) 2.08(0.32) 2.01(0.15) 1.80(0.33) 1.92(0.27) 2.07(0.21) 1.89(0.24) 1.70(0.27) 1.91(0.27) 2.11(0.24) 1.94(0.24) 1.74(0.29) 1.80(0.17) 1.90(0.24) 1.83(0.20) 1.83(0.14) 1.86(0.28) 2.08(0.26) 1.91(0.24) 1.71(0.35) 1.73(0.20) 2.03(0.36) 1.98(0.14) 1.82(0.43) 1.69(0.21) 1.95(0.35) 2.07(0.17) 1.98(0.20) 1.82(0.30) 1.70(0.21) 1.78(0.26) 2.02(0.38) 1.96(0.13) 1.85(0.40) 1.69(0.27) 1.93(0.30) 2.01(0.14) 1.80(0.36) 1.80(0.09) 1.97(0.36) 1.96(0.06) 1.82(0.29) 1.60(0.30) 1.69(0.25) 1.94(0.34) 2.00(0.07) 1.87(0.16) 1.65(0.29) 1.70(0.11) 2.02(0.36) 2.08(0.10) 1.84(0.31) 1.72(0.21) 1.90(0.31) 2.04(0.17) 1.84(0.37) 1.89(0.12) 1.98(0.17) 1.86(0.24) 1.99(0.21) 1.89(0.23) 1.94(0.14) 1.98(0.11) 1.89(0.22) 2.04(0.20) 1.89(0.26) 1.85(0.11) 2.09(0.36) 2.08(0.08) 1.93(0.34) 1.81(0.21) 1.85(0.20) 2.14(0.37) 2.05(0.20) 1.83(0.38) 1.90(0.21) 2.10(0.35) 2.04(0.16) 1.88(0.38) 2.01(0.29) 2.17(0.24) 2.03(0.22) 1.85(0.42) 1.88(0.15) 2.15(0.43) 2.19(0.09) 2.01(0.30) 1.95(0.11) 2.15(0.30) 2.24(0.15) 2.04(0.31) 1.86(0.26) 1.96(0.17) 2.23(0.29) 2.19(0.05) 2.01(0.35) 1.86(0.26) 2.01(0.33) 2.23(0.31) 2.15(0.18) 2.01(0.42) 1.96(0.17) 2.22(0.38) 2.25(0.09) 2.04(0.39) 2.03(0.04) 2.18(0.34) 2.21(0.07) 2.09(0.33) 1.84(0.32) 1.98(0.28) 2.19(0.26) 2.08(0.19) 2.01(0.25) 1.98(0.21) 2.16(0.22) 2.15(0.07) 1.96(0.36) 1.93(0.15) 2.10(0.26) 2.36(0.32) 2.18(0.21) 1.97(0.36) 1.87(0.15) 2.11(0.35) 2.29(0.22) 2.17(0.34) 1.91(0.31) 1.99(0.25) 2.26(0.30) 2.09(0.33) 1.87(0.32) 2.05(0.32) 2.06(0.10) 2.03(0.10) 2.05(0.13) 2.03(0.12) 2.09(0.17) 2.03(0.26) 2.23(0.35) 2.52(0.36) 2.48(0.07) 2.29(0.31) 2.25(0.16) 2.15(0.24) 2.17(0.15) 2.31(0.33) 2.41(0.16) 2.33(0.26) 2.13(0.32) 2.12(0.14) 2.28(0.31) 2.29(0.05) 2.16(0.23) 2.07(0.20) 2.16(0.19) 2.26(0.22) 2.13(0.31) 2.18(0.18) 2.29(0.21) 2.13(0.32) 2.10(0.19) 2.27(0.29) 2.24(0.11) 2.07(0.23) 2.04(0.14) 2.24(0.31) 2.26(0.14) 2.13(0.28) 2.09(0.20) 2.16(0.16) 2.25(0.23) 2.17(0.20) 2.11(0.18) 2.24(0.29) 2.31(0.17) 2.20(0.26) 2.08(0.22) 2.16(0.20) 2.27(0.33) 2.26(0.14) 2.16(0.31) 2.05(0.27) 2.23(0.26) 2.34(0.12) 2.23(0.16) 2.12(0.31) 2.14(0.17) 2.30(0.31) 2.32(0.12) 2.18(0.23) 2.12(0.13) 2.25(0.27) 2.33(0.15) 2.24(0.32) 2.11(0.27) 2.24(0.25) 2.30(0.17) 2.19(0.27) 2.35(0.28) 2.26(0.17) 2.17(0.23) 2.29(0.28) 2.20(0.26) 2.24(0.08) 2.22(0.14) 2.21(0.16) 2.27(0.15) 2.14(0.21) 2.26(0.16) 2.21(0.11) 2.30(0.22) 2.33(0.12) 2.31(0.17) 2.30(0.09) 2.48(0.26) 2.40(0.13) 2.26(0.30) 2.31(0.25) 2.34(0.21) 2.23(0.36) 2.21(0.12) 2.43(0.45) 2.53(0.20) 2.29(0.45) 2.24(0.16) 2.44(0.35) 2.52(0.09) 2.38(0.24) 2.30(0.31) 2.34(0.14) 2.46(0.37) 2.44(0.21) 2.33(0.37) 2.43(0.29) 2.46(0.14) 2.41(0.45) 2.42(0.11) 2.54(0.43) 2.49(0.19) 2.40(0.41) 2.41(0.15) 2.53(0.38) 2.50(0.32) 2.45(0.21) 2.52(0.31) 2.48(0.30) 2.45(0.14) 2.53(0.30) 2.45(0.31) 2.48(0.20) 2.52(0.23) 2.43(0.40) 2.49(0.23) 2.50(0.17) 2.41(0.36) 2.48(0.29) 2.51(0.07) 2.55(0.41) 2.62(0.33) 2.57(0.14) 2.51(0.26) 2.58(0.16) 2.59(0.07) 2.57(0.11) 2.57(0.16)
++ Max displacement in automask = 2.62 (mm) at sub-brick 288
++ Max delta displ  in automask = 0.45 (mm) at sub-brick 253
++ Wrote dataset to disk in ./rm.epi.volreg.r06+orig.BRIK
3dcalc -overwrite -a pb02.sub-S21.r06.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S21.aff12.1D anatSS.sub-S21_al_junk_mat.aff12.1D -I mat.r06.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source pb02.sub-S21.r06.tshift+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r06.warp.aff12.1D -prefix rm.epi.nomask.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S21.r06.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S21.r06.tshift+orig.BRIK is 11.698797 degrees from plumb.
++ opened source dataset 'pb02.sub-S21.r06.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1351962624
in use bytes     = 1133278608
Total (incl. mmap):
system bytes     = 1351962624
in use bytes     = 1133278608
max mmap regions =          1
max mmap bytes   =  109281280
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r06+tlrc.BRIK
++ total Elapsed time = 1291.0 sec
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S21_WARP.nii mat.r06.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.698797 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1351962624
in use bytes     = 1133278768
Total (incl. mmap):
system bytes     = 1351962624
in use bytes     = 1133278768
max mmap regions =          1
max mmap bytes   =  109281280
3dTstat -min -prefix rm.epi.min.r06 rm.epi.1.r06+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r06+tlrc.BRIK
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D dfile.r04.1D dfile.r05.1D dfile.r06.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD rm.epi.min.r04+tlrc.HEAD rm.epi.min.r05+tlrc.HEAD rm.epi.min.r06+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask_epi_extents+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S21.r01.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S21.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S21.r02.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S21.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S21.r03.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S21.r03.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r04+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S21.r04.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S21.r04.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r05+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S21.r05.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S21.r05.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r06+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S21.r06.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S21.r06.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anatQQ.sub-S21.aff12.1D anatSS.sub-S21_al_junk_mat.aff12.1D -I
3dNwarpApply -master anatQQ.sub-S21+tlrc -dxyz 3 -source vr_base+orig -nwarp anatQQ.sub-S21_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S21+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 13.206333 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     =  132988928
in use bytes     = 1914243888
Total (incl. mmap):
system bytes     =  515629056
in use bytes     = 2296884016
max mmap regions =          1
max mmap bytes   =  382640128
++ Warping:.Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 10.2 sec
3dcopy anatQQ.sub-S21+tlrc anat_final.sub-S21
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.sub-S21+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.sub-S21+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'RHDD(11.07)'
 +        -cmass x y z shifts =   -0.330    5.748   -1.496
 +  shift search range is +/- =   69.336   80.892   68.373
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.155688
   sp   = 0.308682
   mi   = 3.84062
   crM  = 0.0278504
   nmi  = 0.8585
   je   = 3.84062
   hel  = -0.136855
   crA  = 0.167038
   crU  = 0.159881
   lss  = 0.844312
   lpc  = 0.00149725
   lpa  = 0.998503
   lpc+ = 0.0859323
   lpa+ = 1.08294
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.6
++ ###########################################################
3dTstat -mean -prefix rm.signal.vreg.r01 pb03.sub-S21.r01.volreg+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.vreg.r01+tlrc.BRIK
3dDetrend -polort 6 -prefix rm.noise.det -overwrite pb03.sub-S21.r01.volreg+tlrc
++ 3dDetrend: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTstat -stdev -prefix rm.noise.vreg.r01 rm.noise.det+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.vreg.r01+tlrc.BRIK
3dcalc -a rm.signal.vreg.r01+tlrc -b rm.noise.vreg.r01+tlrc -c mask_epi_extents+tlrc -expr c*a/b -prefix TSNR.vreg.r01.sub-S21
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.vreg.r01.sub-S21+tlrc.BRIK
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 3498 survived, 16773718 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 245459 survived, 16531757 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dNwarpApply -source copy_af_anat_w_skull+orig -master anat_final.sub-S21+tlrc -ainterp wsinc5 -nwarp anatQQ.sub-S21_WARP.nii anatQQ.sub-S21.aff12.1D -prefix follow_anat_anat_w_skull
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_anat_w_skull+orig'
++ -master dataset is 'anat_final.sub-S21+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3759788032
in use bytes     = 1605172240
Total (incl. mmap):
system bytes     = 4080766976
in use bytes     = 1926151184
max mmap regions =          1
max mmap bytes   =  320978944
++ Warping:.Z
++ Output dataset ./follow_anat_anat_w_skull+tlrc.BRIK
++ total Elapsed time = 11.0 sec
3dNwarpApply -source copy_af_aaseg+orig -master anat_final.sub-S21+tlrc -ainterp NN -nwarp anatQQ.sub-S21_WARP.nii anatQQ.sub-S21.aff12.1D -prefix follow_ROI_aaseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aaseg+orig'
++ -master dataset is 'anat_final.sub-S21+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3869364224
in use bytes     = 1926432048
Total (incl. mmap):
system bytes     = 3869618176
in use bytes     = 1926686000
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aaseg+tlrc.BRIK
++ total Elapsed time = 8.3 sec
3dNwarpApply -source copy_af_aeseg+orig -master pb03.sub-S21.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S21_WARP.nii anatQQ.sub-S21.aff12.1D -prefix follow_ROI_aeseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aeseg+orig'
++ -master dataset is 'pb03.sub-S21.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3869487104
in use bytes     = 1926564176
Total (incl. mmap):
system bytes     = 3869741056
in use bytes     = 1926818128
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aeseg+tlrc.BRIK
++ total Elapsed time = 8.6 sec
3dNwarpApply -source copy_af_FSvent_erode+orig -master pb03.sub-S21.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S21_WARP.nii anatQQ.sub-S21.aff12.1D -prefix follow_ROI_FSvent
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSvent_erode+orig'
++ -master dataset is 'pb03.sub-S21.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3759915008
in use bytes     = 1605297728
Total (incl. mmap):
system bytes     = 4080893952
in use bytes     = 1926276672
max mmap regions =          1
max mmap bytes   =  320978944
++ Warping:.Z
++ Output dataset ./follow_ROI_FSvent+tlrc.BRIK
++ total Elapsed time = 7.7 sec
3dNwarpApply -source copy_af_FSWe_erode+orig -master pb03.sub-S21.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S21_WARP.nii anatQQ.sub-S21.aff12.1D -prefix follow_ROI_FSWe
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSWe_erode+orig'
++ -master dataset is 'pb03.sub-S21.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3759915008
in use bytes     = 1605297856
Total (incl. mmap):
system bytes     = 4080893952
in use bytes     = 1926276800
max mmap regions =          1
max mmap bytes   =  320978944
++ Warping:.Z
++ Output dataset ./follow_ROI_FSWe+tlrc.BRIK
++ total Elapsed time = 8.5 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb03.volreg pb03.sub-S21.r01.volreg+tlrc.HEAD pb03.sub-S21.r02.volreg+tlrc.HEAD pb03.sub-S21.r03.volreg+tlrc.HEAD pb03.sub-S21.r04.volreg+tlrc.HEAD pb03.sub-S21.r05.volreg+tlrc.HEAD pb03.sub-S21.r06.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.0 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.0 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S21.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S21.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S21.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
....................................................................................................................................................................