echo auto-generated by afni_proc.py, Mon Nov 16 13:27:26 2020
auto-generated by afni_proc.py, Mon Nov 16 13:27:26 2020
echo (version 7.12, April 14, 2020)
(version 7.12, April 14, 2020)
echo execution started: `date`
date
execution started: Mon Nov 16 14:01:34 EST 2020
afni -ver
Precompiled binary linux_centos_7_64: Nov 12 2020 (Version AFNI_20.3.02 'Vespasian')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   12 Nov 2020
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-S27
endif
set output_dir = /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI
if ( -d /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/stimuli
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D01_Anatomical/anatSS.sub-S27.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/anatSS.sub-S27
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D01_Anatomical/anatUAC.sub-S27.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/copy_af_anat_w_skull
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S27/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S27/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S27/SUMA/fs_ap_latvent.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S27/SUMA/fs_ap_wm.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D01_Anatomical/anatQQ.sub-S27.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/anatQQ.sub-S27
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D01_Anatomical/anatQQ.sub-S27.aff12.1D /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/anatQQ.sub-S27.aff12.1D
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D01_Anatomical/anatQQ.sub-S27_WARP.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/anatQQ.sub-S27_WARP.nii
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/pb00.sub-S27.r01.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D00_OriginalData/sub-S27_SleepAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.9 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/pb00.sub-S27.r02.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D00_OriginalData/sub-S27_SleepDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/pb00.sub-S27.r03.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D00_OriginalData/sub-S27_SleepRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/pb00.sub-S27.r04.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D00_OriginalData/sub-S27_WakeAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/pb00.sub-S27.r05.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D00_OriginalData/sub-S27_WakeDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI/pb00.sub-S27.r06.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D00_OriginalData/sub-S27_WakeRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
set tr_counts = ( 412 412 295 412 412 295 )
cd /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S27/D02_Preproc_fMRI
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.sub-S27.r01.tcat+orig.HEAD pb00.sub-S27.r02.tcat+orig.HEAD pb00.sub-S27.r03.tcat+orig.HEAD pb00.sub-S27.r04.tcat+orig.HEAD pb00.sub-S27.r05.tcat+orig.HEAD pb00.sub-S27.r06.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.073539 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r01.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r01.automask+orig.BRIK is 12.073539 degrees from plumb.

-- running correlation on dataset pb00.sub-S27.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.073539 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r01+orig.BRIK is 12.073539 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r01+orig.BRIK is 12.073539 degrees from plumb.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.073539 degrees from plumb.
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.073539 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r02.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r02.automask+orig.BRIK is 12.073539 degrees from plumb.

-- running correlation on dataset pb00.sub-S27.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.073539 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r02+orig.BRIK is 12.073539 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r02+orig.BRIK is 12.073539 degrees from plumb.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.073539 degrees from plumb.
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.073539 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r03.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r03.automask+orig.BRIK is 12.073539 degrees from plumb.

-- running correlation on dataset pb00.sub-S27.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.073539 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r03+orig.BRIK is 12.073539 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r03+orig.BRIK is 12.073539 degrees from plumb.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.073539 degrees from plumb.
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 10.971511 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r04.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r04.automask+orig.BRIK is 10.971511 degrees from plumb.

-- running correlation on dataset pb00.sub-S27.r04.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 10.971511 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r04+orig.BRIK is 10.971511 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r04+orig.BRIK is 10.971511 degrees from plumb.
++ Oblique dataset:./epi.r04+orig.BRIK is 10.971511 degrees from plumb.
++ Wrote dataset: ./radcor.20.r04.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 10.971511 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r05.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r05.automask+orig.BRIK is 10.971511 degrees from plumb.

-- running correlation on dataset pb00.sub-S27.r05.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 10.971511 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r05+orig.BRIK is 10.971511 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r05+orig.BRIK is 10.971511 degrees from plumb.
++ Oblique dataset:./epi.r05+orig.BRIK is 10.971511 degrees from plumb.
++ Wrote dataset: ./radcor.20.r05.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 10.971547 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r06.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r06.automask+orig.BRIK is 10.971547 degrees from plumb.

-- running correlation on dataset pb00.sub-S27.r06.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 10.971547 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r06+orig.BRIK is 10.971547 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r06+orig.BRIK is 10.971547 degrees from plumb.
++ Oblique dataset:./epi.r06+orig.BRIK is 10.971547 degrees from plumb.
++ Wrote dataset: ./radcor.20.r06.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S27.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r01.tcat+orig.BRIK is 12.073539 degrees from plumb.
++ 43087 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S27.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r02.tcat+orig.BRIK is 12.073539 degrees from plumb.
++ 43159 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S27.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r03.tcat+orig.BRIK is 12.073539 degrees from plumb.
++ 43075 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S27.r04.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r04.tcat+orig.BRIK is 10.971511 degrees from plumb.
++ 43154 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S27.r05.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r05.tcat+orig.BRIK is 10.971511 degrees from plumb.
++ 43211 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S27.r06.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r06.tcat+orig.BRIK is 10.971547 degrees from plumb.
++ 43132 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dDespike -NEW -nomask -prefix pb01.sub-S27.r01.despike pb00.sub-S27.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r01.tcat+orig.BRIK is 12.073539 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S27.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #9
++ start OpenMP thread #10
++ start OpenMP thread #8
++ start OpenMP thread #6
++ start OpenMP thread #13
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #12
++ start OpenMP thread #14
++ start OpenMP thread #11
........................................................
++ Elapsed despike time =  1s 379ms

++ FINAL: 53157888 data points, 2053908 edits [3.864%], 178197 big edits [0.335%]
++ Output dataset ./pb01.sub-S27.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S27.r02.despike pb00.sub-S27.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r02.tcat+orig.BRIK is 12.073539 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S27.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #7
++ start OpenMP thread #14
++ start OpenMP thread #8
++ start OpenMP thread #10
++ start OpenMP thread #12
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #6
++ start OpenMP thread #0
++ start OpenMP thread #4
++ start OpenMP thread #13
++ start OpenMP thread #9
++ start OpenMP thread #11
++ start OpenMP thread #2
........................................................
++ Elapsed despike time =  1s 403ms

++ FINAL: 53157476 data points, 1881514 edits [3.540%], 82333 big edits [0.155%]
++ Output dataset ./pb01.sub-S27.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S27.r03.despike pb00.sub-S27.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r03.tcat+orig.BRIK is 12.073539 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S27.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #3
++ start OpenMP thread #7
++ start OpenMP thread #5
++ start OpenMP thread #12
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #13
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #9
++ start OpenMP thread #6
........................................................
++ Elapsed despike time =  901ms

++ FINAL: 38062080 data points, 1324244 edits [3.479%], 50774 big edits [0.133%]
++ Output dataset ./pb01.sub-S27.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S27.r04.despike pb00.sub-S27.r04.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r04.tcat+orig.BRIK is 10.971511 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S27.r04.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #9
++ start OpenMP thread #8
++ start OpenMP thread #12
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #0
++ start OpenMP thread #6
++ start OpenMP thread #11
++ start OpenMP thread #13
++ start OpenMP thread #10
++ start OpenMP thread #14
++ start OpenMP thread #2
........................................................
++ Elapsed despike time =  1s 250ms

++ FINAL: 53157476 data points, 1885522 edits [3.547%], 77119 big edits [0.145%]
++ Output dataset ./pb01.sub-S27.r04.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S27.r05.despike pb00.sub-S27.r05.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r05.tcat+orig.BRIK is 10.971511 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S27.r05.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #14
++ start OpenMP thread #6
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #12
++ start OpenMP thread #8
++ start OpenMP thread #0
++ start OpenMP thread #7
++ start OpenMP thread #13
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #9
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 204ms

++ FINAL: 53157888 data points, 1915484 edits [3.603%], 91047 big edits [0.171%]
++ Output dataset ./pb01.sub-S27.r05.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S27.r06.despike pb00.sub-S27.r06.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S27.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S27.r06.tcat+orig.BRIK is 10.971547 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S27.r06.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #6
++ start OpenMP thread #9
++ start OpenMP thread #14
++ start OpenMP thread #12
++ start OpenMP thread #10
++ start OpenMP thread #1
++ start OpenMP thread #11
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #8
++ start OpenMP thread #7
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  892ms

++ FINAL: 38062080 data points, 1345918 edits [3.536%], 56472 big edits [0.148%]
++ Output dataset ./pb01.sub-S27.r06.despike+orig.BRIK
end
foreach run ( 01 02 03 04 05 06 )
3dTshift -tzero 0 -quintic -prefix pb02.sub-S27.r01.tshift pb01.sub-S27.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S27.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S27.r01.despike+orig.BRIK is 12.073539 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S27.r02.tshift pb01.sub-S27.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S27.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S27.r02.despike+orig.BRIK is 12.073539 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S27.r03.tshift pb01.sub-S27.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S27.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S27.r03.despike+orig.BRIK is 12.073539 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S27.r04.tshift pb01.sub-S27.r04.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S27.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S27.r04.despike+orig.BRIK is 10.971511 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S27.r05.tshift pb01.sub-S27.r05.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S27.r05.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S27.r05.despike+orig.BRIK is 10.971511 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S27.r06.tshift pb01.sub-S27.r06.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S27.r06.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S27.r06.despike+orig.BRIK is 10.971547 degrees from plumb.
end
3dbucket -prefix vr_base pb02.sub-S27.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
align_epi_anat.py -anat2epi -anat anatSS.sub-S27+orig -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S27+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S27*
#Script is running (command trimmed):
  3dcopy ./anatSS.sub-S27+orig ./anatSS.sub-S27_unflipped+orig
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#Script is running (command trimmed):
  3dinfo ./anatSS.sub-S27_unflipped+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D02_Preproc_fMRI/anatSS.sub-S27_unflipped+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D02_Preproc_fMRI/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S27_unflipped+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./anatSS.sub-S27_unflipped_ob -newgrid 1.000000 ./anatSS.sub-S27_unflipped+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./anatSS.sub-S27_unflipped_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./anatSS.sub-S27_unflipped_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.073539 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 323.655090
 + Used gradual clip level = 300.180908 .. 342.764923
 + Number voxels above clip level = 43143
 + Clustering voxels ...
 + Largest cluster has 42977 voxels
 + Clustering voxels ...
 + Largest cluster has 42664 voxels
 + Filled   347 voxels in small holes; now have 43011 voxels
 + Clustering voxels ...
 + Largest cluster has 43011 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 88061 voxels
 + Mask now has 43011 voxels
++ 43011 voxels in the mask [out of 131072: 32.81%]
++ first  10 x-planes are zero [from R]
++ last   10 x-planes are zero [from L]
++ first   0 y-planes are zero [from P]
++ last    1 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_ts_ns+orig
#++ Applying threshold of 792.494690 on /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S27/D02_Preproc_fMRI/vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_ts_ns_wt -a ./vr_base_ts_ns+orig -expr 'min(1,(a/792.494690))'
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./anatSS.sub-S27_unflipped_ob_al_junk_wtal -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S27_unflipped_ob+orig -prefix ./anatSS.sub-S27_unflipped_ob_temp_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S27_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.073539 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.073539 degrees from plumb.
++ Source dataset: ./anatSS.sub-S27_unflipped_ob+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1570481 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=7
++ Zero-pad: zbot=8 ztop=8
++ 43011 voxels [17.7%] in weight mask
++ Output dataset ./anatSS.sub-S27_unflipped_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 43011
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.979 38.786 22.650 (index)
 + source center of mass = 144.069 160.694 194.014 (index)
 + source-target CM = -1.365 2.785 -5.243 (xyz)
 + estimated center of mass shifts = -1.365 2.785 -5.243
++ shift param auto-range: -62.0..59.3 -72.3..77.9 -61.8..51.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.365082 .. 8.634918  center = -1.365082
 + Range param#2 [y-shift] = -7.215092 .. 12.784908  center = 2.784908
 + Range param#3 [z-shift] = -15.243065 .. 4.756935  center = -5.243065
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.365082 .. 38.634918  center = -1.365082
 + Range param#2 [y-shift] = -37.215092 .. 42.784908  center = 2.784908
 + Range param#3 [z-shift] = -45.243065 .. 34.756935  center = -5.243065
 + 12 free parameters
++ Normalized convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -41.365 ..   38.635
 +       y-shift =  -37.215 ..   42.785
 +       z-shift =  -45.243 ..   34.757
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1570481 [out of 28272000] voxels
 + base mask has 57204 [out of 242688] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - copying weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 272.891 .. 1021.89; base clip 222.101 .. 805.355
 +  - versus source range 0.373857 .. 935.797; base range 0 .. 1026.36
 + 38617 total points stored in 355 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o+-.o+-.+--.+-+-.oo-$.- + - best 45 costs found:
    0 v= 0.512309:  -1.37   2.78  -5.24   0.00   0.00   0.00  [grid]
    1 v= 0.727045:  25.30  16.12 -31.91  15.00  15.00 -15.00  [grid]
    2 v= 0.728628: -28.03  16.12 -31.91 -15.00  15.00  15.00  [grid]
    3 v= 0.731935:  12.05  25.47 -36.58   4.37  20.12 -15.12  [rand]
    4 v= 0.735304: -28.03  16.12 -31.91 -15.00  15.00  30.00  [grid]
    5 v= 0.742589:  16.97 -23.36   0.80   6.51 -20.18  -7.56  [rand]
    6 v= 0.743888: -14.78  25.47 -36.58  -4.37  20.12  15.12  [rand]
    7 v= 0.762280:  11.97  16.12 -18.58  15.00  15.00  15.00  [grid]
    8 v= 0.788508: -28.03  16.12 -18.58 -15.00  15.00  15.00  [grid]
    9 v= 0.794243:  32.41 -29.14   2.47  12.26 -17.56 -17.80  [rand]
   10 v= 0.801451:  11.97  16.12 -18.58 -15.00  15.00 -30.00  [grid]
   11 v= 0.803540: -19.70 -23.36   0.80  -6.51 -20.18   7.56  [rand]
   12 v= 0.808020: -28.03 -10.55   8.09 -15.00 -15.00  15.00  [grid]
   13 v= 0.817636:  11.97 -23.88   8.09 -15.00 -15.00 -15.00  [grid]
   14 v= 0.817982:  25.77  21.66 -32.98   5.55  17.35 -23.42  [rand]
   15 v= 0.819986: -28.03 -23.88   8.09 -15.00 -15.00  15.00  [grid]
   16 v= 0.826673: -35.69 -13.80   3.36  16.34  -8.64  40.54  [rand]
   17 v= 0.829011: -33.85 -11.91   6.56  11.16  -9.40  34.39  [rand]
   18 v= 0.832521: -14.70  16.12 -18.58 -15.00  15.00 -15.00  [grid]
   19 v= 0.833699: -35.14 -29.14   2.47 -12.26 -17.56  17.80  [rand]
   20 v= 0.835287:  25.30 -10.55   8.09 -15.00 -15.00 -30.00  [grid]
   21 v= 0.836754: -28.03 -23.88   8.09  15.00 -15.00  30.00  [grid]
   22 v= 0.838869:  32.96 -13.80 -13.85 -16.34  -8.64 -40.54  [rand]
   23 v= 0.843007:  11.97 -23.88   8.09 -30.00 -15.00 -30.00  [grid]
   24 v= 0.846138: -14.70  16.12 -18.58  15.00  15.00  30.00  [grid]
   25 v= 0.848520:  11.97 -23.88   8.09  30.00 -15.00  15.00  [grid]
   26 v= 0.853059:  25.30  16.12 -18.58  15.00  15.00 -15.00  [grid]
   27 v= 0.855639:  25.30 -23.88   8.09 -15.00 -15.00 -30.00  [grid]
   28 v= 0.863538: -14.70 -23.88   8.09  15.00 -15.00  30.00  [grid]
   29 v= 0.867864: -14.70 -23.88   8.09  30.00 -15.00  30.00  [grid]
   30 v= 0.875544: -10.01 -17.65  12.23 -25.20 -18.50 -13.54  [rand]
   31 v= 0.876429:  25.30 -23.88   8.09  15.00 -15.00 -15.00  [grid]
   32 v= 0.877124: -14.70 -23.88   8.09 -30.00 -15.00 -15.00  [grid]
   33 v= 0.881596: -14.70  16.12 -18.58 -30.00  15.00 -15.00  [grid]
   34 v= 0.884779:  25.30  16.12 -31.91  15.00  15.00 -30.00  [grid]
   35 v= 0.885947:  31.12 -11.91   6.56 -11.16  -9.40 -34.39  [rand]
   36 v= 0.895381: -15.57  12.24 -10.08  15.99  13.53  29.93  [rand]
   37 v= 0.897204: -14.70 -23.88   8.09  15.00 -15.00  15.00  [grid]
   38 v= 0.901367:  14.62 -16.71   0.48  20.53  -3.14  10.08  [rand]
   39 v= 0.906145:  32.96 -13.80   3.36 -16.34  -8.64 -40.54  [rand]
   40 v= 0.907933: -33.85 -11.91 -17.05 -11.16  -9.40  34.39  [rand]
   41 v= 0.908784: -14.70 -10.55   8.09  15.00 -15.00  30.00  [grid]
   42 v= 0.909571:  12.84  12.24 -10.08 -15.99  13.53 -29.93  [rand]
   43 v= 0.914269:  25.30 -10.55   8.09  15.00 -15.00 -15.00  [grid]
   44 v= 0.914615:  11.97 -10.55   8.09 -15.00 -15.00 -30.00  [grid]
 + - A little optimization:*[#8004=0.250195] *[#8006=0.219103] *[#8012=0.1731] *[#8013=0.135958] *[#8014=0.133314] *[#8016=0.126386] *[#8018=0.0865487] *[#8019=0.0604929] *[#8020=0.0238983] *[#8021=-0.0321921] *[#8026=-0.0475889] *[#8027=-0.0733881] *[#8034=-0.0907215] *[#8035=-0.107161] *[#8036=-0.113835] *[#8038=-0.116134] *[#8040=-0.136148] *[#8043=-0.138087] *[#8044=-0.155118] *[#8045=-0.16467] *[#8047=-0.186457] *[#8048=-0.200885] *[#8049=-0.209787] *[#8052=-0.247872] .............................................
 + - costs of the above after a little optimization:
  * 0 v=-0.247872:  -0.04   0.50  -2.07   0.18   1.03   0.52  [grid]
    1 v= 0.625220:  24.41  16.85 -25.78  10.91  13.52 -15.99  [grid]
    2 v= 0.594409: -24.08  14.52 -23.01 -12.71  12.77  15.94  [grid]
    3 v= 0.637626:  12.39  23.54 -31.31   4.23  19.72 -13.88  [rand]
    4 v= 0.648339: -28.84  17.33 -30.86 -10.26  14.14  28.63  [grid]
    5 v= 0.501097:  12.31 -15.99   6.55   4.24 -11.11  -6.70  [rand]
    6 v= 0.592993: -13.88  18.79 -28.38  -4.56  17.18  16.33  [rand]
    7 v= 0.158429:   4.91   0.73  -3.83   2.77   2.02  -0.25  [grid]
    8 v= 0.585651: -27.08  10.12 -18.29 -15.01   9.85  13.37  [grid]
    9 v= 0.666224:  31.69 -21.05   1.99  11.59 -15.57 -17.37  [rand]
   10 v= 0.636091:   7.37  14.51 -18.73 -13.71  10.93 -30.51  [grid]
   11 v= 0.520102: -15.16 -15.53   5.36  -0.40 -12.36  11.96  [rand]
   12 v= 0.493207: -21.64  -4.54   0.49  -7.88  -3.19  11.37  [grid]
   13 v= 0.435884:   9.44 -10.02   6.39   5.01  -7.18  -2.73  [grid]
   14 v= 0.685169:  21.54  21.08 -33.27   7.67  17.12 -23.18  [rand]
   15 v= 0.363568: -13.15  -1.88  -2.05  -5.96   0.06   3.82  [grid]
   16 v= 0.625073: -28.17 -13.31  -4.97  15.20  -8.10  39.35  [rand]
   17 v= 0.614597: -26.30  -9.74  -5.23  10.99  -6.69  35.27  [rand]
   18 v=-0.163042:   1.36   0.13   0.14   0.54  -0.22  -1.12  [grid]
   19 v= 0.611641: -25.42 -20.02   6.45  -0.44 -16.66  19.20  [rand]
   20 v= 0.618625:  16.74 -14.13   0.71 -13.89 -10.44 -28.33  [grid]
   21 v= 0.666310: -27.95 -20.99   3.27   9.87 -15.49  30.27  [grid]
   22 v= 0.637253:  33.10 -11.70 -12.23  -8.90  -7.95 -42.40  [rand]
   23 v= 0.687248:  11.52 -19.87   5.01 -21.88 -12.79 -28.45  [grid]
   24 v= 0.627192: -10.89  14.71 -19.47  10.96  11.90  30.95  [grid]
   25 v= 0.697422:   5.36 -19.72   5.63  21.42 -13.10  12.08  [grid]
   26 v= 0.579200:  22.12  11.33 -17.92   8.91   8.98 -14.40  [grid]
   27 v= 0.661722:  21.78 -20.89   1.36 -15.52 -15.38 -32.38  [grid]
   28 v= 0.607076: -20.19 -16.53   6.01   6.56 -13.67  22.08  [grid]
   29 v= 0.741022: -11.76 -23.97   7.79  24.24 -14.31  28.64  [grid]
   30 v= 0.245090:  -8.02  -3.36   1.62  -4.15  -1.78   0.99  [rand]
   31 v= 0.621733:  21.79 -23.70   6.56   9.44 -17.37 -10.65  [grid]
   32 v= 0.768943: -14.68 -22.02   7.68 -27.68 -14.28  -8.84  [grid]
   33 v= 0.547193: -14.38  19.30 -18.22  -6.82  13.55   6.38  [grid]
   34 v= 0.654668:  26.91  13.79 -27.32   8.29  11.10 -25.69  [grid]
   35 v= 0.633759:  22.83 -12.46  -0.71 -15.03  -9.69 -35.65  [rand]
   36 v= 0.604851: -14.88   9.32 -15.59  11.39   7.13  31.38  [rand]
   37 v= 0.561073:  -7.31 -21.73   5.96   2.56 -16.27   7.67  [grid]
   38 v=-0.081302:  -0.25  -0.45   1.08   0.26  -0.86  -0.81  [rand]
   39 v= 0.600013:  20.57 -12.43  -4.14  -8.02  -9.39 -26.55  [rand]
   40 v= 0.638736: -37.65  -8.80 -12.26  -7.18  -7.54  30.97  [rand]
   41 v= 0.478953: -11.68 -11.64   5.84  -1.74 -10.27   7.23  [grid]
   42 v= 0.592331:  11.00   6.39 -13.88 -10.69   5.28 -27.81  [rand]
   43 v= 0.508077:  11.75 -11.74   0.94   6.24  -7.39  -6.95  [grid]
   44 v= 0.628370:  12.45 -12.59   3.94 -15.42 -10.74 -26.09  [grid]
 + - save # 0 for possible use in twobest
 + - skip #18 for twobest: too close to set # 0
 + - skip #38 for twobest: too close to set # 0
 + - skip # 7 for twobest: too close to set #18
 + - save #30 for possible use in twobest
 + - save #15 for possible use in twobest
 + - save #13 for possible use in twobest
 + - save #41 for possible use in twobest
 + - save #12 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - save #43 for possible use in twobest
 + - save #11 for possible use in twobest
 + - save #33 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save #26 for possible use in twobest
 + - save # 8 for possible use in twobest
 + - save #42 for possible use in twobest
 + - save # 6 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - save #39 for possible use in twobest
 + - save #36 for possible use in twobest
 + - save #28 for possible use in twobest
 + - save #19 for possible use in twobest
 + - save #17 for possible use in twobest
 + - save #20 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 275.541 .. 1034.18; base clip 222.725 .. 825.365
 +  - versus source range 0.0267237 .. 935.819; base range 0 .. 1028.42
 + 38481 total points stored in 372 'RHDD(12.342)' bloks
*[#10424=-0.257574] *[#10425=-0.27109] *[#10426=-0.271627] *[#10427=-0.272365] *[#10429=-0.273185] *[#10432=-0.273843] *[#10433=-0.274609] *[#10434=-0.275754] *[#10435=-0.277241] *[#10436=-0.278054] *[#10437=-0.279128] *[#10442=-0.282756] *[#10446=-0.29084] *[#10453=-0.292463] *[#10454=-0.293441] *[#10457=-0.29412] *[#10459=-0.294145] *[#10460=-0.297932] *[#10462=-0.298719] *[#10467=-0.304277] *[#10468=-0.305887] *[#10476=-0.306584] 
 + - param set #1 has cost=-0.306584
 + -- Parameters = -0.0659 0.4170 -1.2081 0.1775 0.5060 0.3214 1.0034 1.0043 0.9941 0.0018 -0.0048 0.0018
 + - param set #2 has cost=-0.233083
 + -- Parameters = -0.8847 -0.2791 -0.4505 -0.3655 -0.5857 0.6380 0.9871 0.9999 0.9979 -0.0209 -0.0205 -0.0106
 + - param set #3 has cost=-0.116165
 + -- Parameters = -2.9077 0.7216 -1.3035 -1.0840 0.4548 1.4146 1.0005 1.0076 0.9909 -0.0066 -0.0043 0.0053
 + - param set #4 has cost=0.017593
 + -- Parameters = 2.3171 -1.3869 0.5223 1.2273 -1.9262 -0.7018 0.9760 1.0043 0.9797 0.0084 -0.0127 -0.0023
 + - param set #5 has cost=0.289320
 + -- Parameters = -6.2784 2.0846 0.6445 -3.5774 -0.0331 2.2219 0.9885 0.9910 1.0126 0.0246 -0.0055 -0.0056
 + - param set #6 has cost=0.402877
 + -- Parameters = -12.4300 -7.1188 0.8467 -4.7805 -3.1391 4.8425 0.9933 0.9996 0.9812 0.0205 -0.0130 0.0014
 + - param set #7 has cost=0.386117
 + -- Parameters = 6.9389 -10.2896 3.6375 1.7525 -6.2791 -3.9720 0.9839 0.9971 0.9817 -0.0243 0.0101 -0.0225
 + - param set #8 has cost=0.272957
 + -- Parameters = 5.8206 -5.0354 3.5323 2.3295 -2.4194 -1.6853 1.0002 0.9803 0.9907 0.0009 0.0072 0.0070
 + - param set #9 has cost=0.401545
 + -- Parameters = -9.4182 -9.2618 5.1727 -4.3452 -5.6146 3.7687 0.9861 0.9936 0.9946 0.0045 0.0097 0.0006
 + - param set #10 has cost=0.484061
 + -- Parameters = -11.1698 13.9032 -18.0446 -5.5336 12.7656 4.4159 0.9875 0.9903 0.9890 0.0013 -0.0035 -0.0025
 + - param set #11 has cost=0.428440
 + -- Parameters = -7.4932 -18.1184 6.5982 -0.2810 -10.8624 5.7092 0.9767 0.9792 0.9834 -0.0143 -0.0521 -0.0655
 + - param set #12 has cost=-0.245137
 + -- Parameters = 0.0772 0.3445 -2.1502 0.2472 1.0986 0.2823 1.0035 0.9988 0.9913 -0.0051 -0.0036 0.0032
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0307 
 + --- dist(#3,#1) = 0.102 
 + --- dist(#4,#1) = 0.0376 
 + --- dist(#5,#1) = 0.0746 
 + --- dist(#6,#1) = 0.0736 
 + --- dist(#7,#1) = 0.103 
 + --- dist(#8,#1) = 0.134 
 + --- dist(#9,#1) = 0.121 
 + --- dist(#10,#1) = 0.155 
 + --- dist(#11,#1) = 0.303 
 + --- dist(#12,#1) = 0.21 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 278.193 .. 1045.12; base clip 223.044 .. 847.1
 +  - versus source range 0.00015499 .. 935.822; base range 0 .. 1030.17
 + 38059 total points stored in 374 'RHDD(12.2051)' bloks
 + - param set #1 has cost=-0.278943
 + -- Parameters = -0.1150 0.4113 -1.2106 0.0916 0.3666 0.2133 1.0030 1.0042 0.9939 0.0017 0.0021 0.0017
 + - param set #2 has cost=-0.280534
 + -- Parameters = -0.3567 0.3418 -0.9126 0.0521 0.3845 0.4967 1.0031 1.0031 0.9934 0.0020 -0.0065 0.0037
 + - param set #3 has cost=-0.257679
 + -- Parameters = -0.6906 0.2551 -0.6686 -0.1637 -0.0797 0.7305 1.0031 1.0049 0.9988 -0.0105 -0.0166 -0.0047
 + - param set #4 has cost=-0.209933
 + -- Parameters = -0.9742 0.6707 -0.9436 -0.4386 0.3013 0.6807 0.9924 1.0078 0.9887 -0.0243 -0.0154 0.0053
 + - param set #5 has cost=-0.152618
 + -- Parameters = 0.6035 0.0083 0.3278 0.7731 -1.2121 0.1333 0.9785 1.0094 0.9963 0.0223 -0.0119 -0.0084
 + - param set #6 has cost=0.037204
 + -- Parameters = 0.9897 -1.5485 -0.4493 0.1109 -0.4718 -1.6485 1.0206 0.9784 1.0168 0.0474 0.0496 -0.0230
 + - param set #7 has cost=-0.207204
 + -- Parameters = -0.7709 1.5723 -0.2990 0.1552 0.2070 0.9782 0.9913 1.0218 1.0046 0.0150 -0.0169 0.0019
 + - param set #8 has cost=-0.153489
 + -- Parameters = 0.3550 -0.6846 -0.5704 -0.4924 -1.2258 -1.1300 1.0114 1.0047 1.0008 -0.0297 0.0239 -0.0272
 + - param set #9 has cost=0.219565
 + -- Parameters = -4.8470 -3.2790 -0.5265 -2.2231 0.5728 1.8857 0.9998 0.9718 0.9790 0.0072 -0.0026 0.0229
 + - param set #10 has cost=-0.006585
 + -- Parameters = -0.9132 -1.3287 1.0499 -0.1120 -1.0865 1.0857 1.0266 0.9951 0.9686 -0.0032 -0.0179 0.0101
 + - param set #11 has cost=0.250894
 + -- Parameters = -6.2369 -3.2828 -2.0514 -1.4872 -3.2052 6.0992 0.9994 0.9738 0.9742 -0.0036 -0.0537 -0.0728
 + - param set #12 has cost=0.495748
 + -- Parameters = -10.5617 12.8623 -17.6024 -5.4004 12.5271 5.0789 0.9878 0.9759 0.9862 0.0050 -0.0002 -0.0027
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0385 
 + --- dist(#3,#1) = 0.0565 
 + --- dist(#4,#1) = 0.118 
 + --- dist(#5,#1) = 0.0586 
 + --- dist(#6,#1) = 0.143 
 + --- dist(#7,#1) = 0.0913 
 + --- dist(#8,#1) = 0.0675 
 + --- dist(#9,#1) = 0.252 
 + --- dist(#10,#1) = 0.0868 
 + --- dist(#11,#1) = 0.344 
 + --- dist(#12,#1) = 0.209 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 281.176 .. 1056.34; base clip 223.422 .. 865.034
 +  - versus source range 0 .. 935.822; base range 0 .. 1030.98
 + 38422 total points stored in 388 'RHDD(12.1215)' bloks
 + - param set #1 has cost=-0.256077
 + -- Parameters = -0.3170 0.4931 -0.7793 0.0574 0.3612 0.4261 1.0009 1.0057 0.9964 0.0027 -0.0065 0.0026
 + - param set #2 has cost=-0.256772
 + -- Parameters = -0.2224 0.4682 -0.8602 0.0485 0.4006 0.2387 1.0016 1.0051 0.9931 0.0025 0.0008 0.0043
 + - param set #3 has cost=-0.254584
 + -- Parameters = -0.4699 0.4792 -0.8146 -0.0085 -0.1982 0.4502 1.0004 1.0083 0.9934 -0.0033 -0.0085 -0.0061
 + - param set #4 has cost=-0.231787
 + -- Parameters = -0.7072 0.6693 -0.4647 -0.3576 0.3580 0.2196 1.0023 1.0091 0.9964 -0.0132 -0.0027 0.0068
 + - param set #5 has cost=-0.254840
 + -- Parameters = -0.2276 0.7889 -0.3444 0.0559 0.1950 0.2543 0.9982 1.0110 1.0008 0.0032 -0.0004 0.0043
 + - param set #6 has cost=-0.215142
 + -- Parameters = -0.1610 -0.1929 -0.8063 -0.2865 -1.1223 -0.6085 1.0042 1.0070 0.9903 -0.0062 0.0275 -0.0226
 + - param set #7 has cost=-0.229139
 + -- Parameters = 0.0928 0.2784 -0.6306 0.6096 -0.4870 0.7896 1.0007 1.0073 0.9986 0.0148 -0.0091 -0.0127
 + - param set #8 has cost=-0.216736
 + -- Parameters = -0.7300 -0.1117 -0.8981 -0.0679 0.2093 0.7448 1.0061 0.9974 0.9893 0.0026 -0.0138 0.0039
 + - param set #9 has cost=-0.103377
 + -- Parameters = 0.9020 0.0673 -0.4744 0.1985 -0.2540 -1.3324 0.9980 1.0045 1.0079 0.0272 0.0506 -0.0110
 + - param set #10 has cost=-0.112456
 + -- Parameters = -1.3035 -0.3438 -1.6695 -0.2514 1.0433 1.4679 0.9933 0.9868 0.9737 -0.0162 -0.0207 0.0166
 + - param set #11 has cost=-0.042868
 + -- Parameters = -1.3443 -2.1104 -2.2530 -0.0928 -2.4099 1.6301 1.0144 0.9907 0.9725 -0.0083 -0.0429 -0.0565
 + - param set #12 has cost=0.506782
 + -- Parameters = -10.5087 12.7081 -17.4325 -5.1893 12.6478 4.7318 0.9956 0.9746 0.9861 0.0036 0.0007 -0.0016
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0326 
 + --- dist(#3,#1) = 0.0211 
 + --- dist(#4,#1) = 0.0467 
 + --- dist(#5,#1) = 0.0705 
 + --- dist(#6,#1) = 0.0763 
 + --- dist(#7,#1) = 0.0656 
 + --- dist(#8,#1) = 0.121 
 + --- dist(#9,#1) = 0.0967 
 + --- dist(#10,#1) = 0.224 
 + --- dist(#11,#1) = 0.274 
 + --- dist(#12,#1) = 0.207 
 + - Total coarse refinement net CPU time = 0.0 s; 3407 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 283.929 .. 1069.57; base clip 223.422 .. 865.034
 +  - versus source range 0 .. 936.178; base range 0 .. 1031.18
 + 38706 total points stored in 397 'RHDD(12.0364)' bloks
 + - cost(#1)=-0.223135 *
 + -- Parameters = -0.2224 0.4682 -0.8602 0.0485 0.4006 0.2387 1.0016 1.0051 0.9931 0.0025 0.0008 0.0043
 + - cost(#2)=-0.221020  
 + -- Parameters = -0.3170 0.4931 -0.7793 0.0574 0.3612 0.4261 1.0009 1.0057 0.9964 0.0027 -0.0065 0.0026
 + - cost(#3)=-0.219539  
 + -- Parameters = -0.2276 0.7889 -0.3444 0.0559 0.1950 0.2543 0.9982 1.0110 1.0008 0.0032 -0.0004 0.0043
 + - cost(#4)=-0.218764  
 + -- Parameters = -0.4699 0.4792 -0.8146 -0.0085 -0.1982 0.4502 1.0004 1.0083 0.9934 -0.0033 -0.0085 -0.0061
 + - cost(#5)=-0.193590  
 + -- Parameters = -0.7072 0.6693 -0.4647 -0.3576 0.3580 0.2196 1.0023 1.0091 0.9964 -0.0132 -0.0027 0.0068
 + - cost(#6)=-0.193899  
 + -- Parameters = 0.0928 0.2784 -0.6306 0.6096 -0.4870 0.7896 1.0007 1.0073 0.9986 0.0148 -0.0091 -0.0127
 + - cost(#7)=-0.180696  
 + -- Parameters = -0.7300 -0.1117 -0.8981 -0.0679 0.2093 0.7448 1.0061 0.9974 0.9893 0.0026 -0.0138 0.0039
 + - cost(#8)=-0.180443  
 + -- Parameters = -0.1610 -0.1929 -0.8063 -0.2865 -1.1223 -0.6085 1.0042 1.0070 0.9903 -0.0062 0.0275 -0.0226
 + - cost(#9)=-0.081904  
 + -- Parameters = -1.3035 -0.3438 -1.6695 -0.2514 1.0433 1.4679 0.9933 0.9868 0.9737 -0.0162 -0.0207 0.0166
 + - cost(#10)=-0.066792  
 + -- Parameters = 0.9020 0.0673 -0.4744 0.1985 -0.2540 -1.3324 0.9980 1.0045 1.0079 0.0272 0.0506 -0.0110
 + - cost(#11)=-0.011337  
 + -- Parameters = -1.3443 -2.1104 -2.2530 -0.0928 -2.4099 1.6301 1.0144 0.9907 0.9725 -0.0083 -0.0429 -0.0565
 + - cost(#12)=0.517603  
 + -- Parameters = -10.5087 12.7081 -17.4325 -5.1893 12.6478 4.7318 0.9956 0.9746 0.9861 0.0036 0.0007 -0.0016
 + - cost(#13)=0.556829  
 + -- Parameters = -1.3651 2.7849 -5.2431 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.224287 *
 + -- Parameters = -0.1483 0.4997 -0.7985 0.0825 0.3872 0.1940 1.0014 1.0055 0.9931 0.0017 0.0002 0.0044
 + - cost(#2)=-0.225236 *
 + -- Parameters = -0.2363 0.5459 -0.7502 0.0819 0.2336 0.3093 0.9998 1.0072 0.9938 0.0037 -0.0031 0.0024
 + - cost(#3)=-0.224913  
 + -- Parameters = -0.1717 0.6364 -0.4681 0.0613 0.1027 0.1981 0.9985 1.0094 0.9974 0.0028 -0.0015 0.0025
 + - cost(#4)=-0.225903 *
 + -- Parameters = -0.3270 0.4302 -0.7497 0.0599 -0.1903 0.4499 1.0010 1.0086 0.9941 0.0010 -0.0072 -0.0057
 + - cost(#5)=-0.213449  
 + -- Parameters = -0.2804 0.7803 -0.6194 -0.0407 0.4805 0.2233 0.9989 1.0087 0.9983 -0.0064 -0.0042 0.0064
 + - cost(#6)=-0.219790  
 + -- Parameters = -0.1919 0.1973 -0.6169 0.2128 -0.5117 0.4658 0.9994 1.0076 0.9976 0.0062 -0.0072 -0.0112
 + - cost(#7)=-0.212606  
 + -- Parameters = -0.4428 0.2393 -0.7893 0.1012 0.1332 0.6565 1.0003 1.0015 0.9941 0.0015 -0.0111 0.0005
 + - cost(#8)=-0.205258  
 + -- Parameters = 0.0571 0.0649 -0.9551 -0.0518 -0.9946 -0.3743 0.9999 1.0110 0.9926 -0.0031 0.0214 -0.0223
 + - cost(#9)=-0.166553  
 + -- Parameters = -0.7141 0.6024 -1.4245 -0.0177 0.9358 0.9169 0.9956 1.0019 0.9768 0.0005 -0.0225 0.0138
 + - cost(#10)=-0.133706  
 + -- Parameters = 0.8333 0.1170 -0.7467 0.1911 -0.1872 -1.2775 0.9985 1.0054 1.0057 0.0112 0.0447 -0.0109
 + - cost(#11)=-0.102882  
 + -- Parameters = -1.0034 -1.5096 -1.9552 -0.0059 -2.3826 1.2693 0.9975 1.0004 0.9749 -0.0055 -0.0272 -0.0506
 + - cost(#12)=0.515845  
 + -- Parameters = -10.5191 12.4846 -17.3780 -5.0609 12.5146 4.8420 1.0032 0.9748 0.9860 0.0035 0.0010 -0.0013
 + - cost(#13)=-0.219751  
 + -- Parameters = -0.2405 0.3412 -0.6469 0.0120 0.1683 0.2530 0.9992 1.0026 0.9966 -0.0020 -0.0017 0.0019
 + - case #4 is now the best
 + - Initial  cost = -0.225903
 + - Initial fine Parameters = -0.3270 0.4302 -0.7497 0.0599 -0.1903 0.4499 1.0010 1.0086 0.9941 0.0010 -0.0072 -0.0057
 + - Finalish cost = -0.228489 ; 179 funcs
 + - ini Finalish Parameters = -0.3261 0.4491 -0.7742 0.0209 -0.1824 0.3791 1.0009 1.0089 0.9935 0.0012 -0.0038 -0.0053
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 283.814 .. 1069.37; base clip 223.422 .. 865.034
 +  - versus source range 0 .. 936.178; base range 0 .. 1031.18
*[#15427=-0.744451] *[#15481=-0.7448] *[#15491=-0.744832] *[#15505=-0.745242] *[#15519=-0.745512] *[#15520=-0.745559] *[#15522=-0.745778] *[#15523=-0.745803] *[#15524=-0.745859] *[#15525=-0.745974] *[#15530=-0.74604] *[#15535=-0.746067] *[#15538=-0.746129] *[#15539=-0.746146] *[#15540=-0.746164] *[#15545=-0.746241] *[#15548=-0.74627] *[#15549=-0.746364] *[#15550=-0.746406] *[#15551=-0.746428] *[#15558=-0.746471] *[#15561=-0.746499] *[#15562=-0.746521] *[#15567=-0.746523] *[#15569=-0.746542] *[#15570=-0.746553] *[#15575=-0.746574] *[#15576=-0.746585] *[#15578=-0.746608] *[#15579=-0.746608] *[#15582=-0.746609] *[#15583=-0.746654] *[#15588=-0.746675] *[#15590=-0.746679] *[#15595=-0.746709] *[#15596=-0.746718] *[#15599=-0.746746] *[#15602=-0.746783] *[#15603=-0.746817] *[#15606=-0.746832] *[#15607=-0.74686] *[#15609=-0.746896] *[#15610=-0.746997] *[#15611=-0.747063] *[#15612=-0.747153] *[#15613=-0.747186] *[#15614=-0.747289] *[#15619=-0.747351] *[#15622=-0.747389] *[#15623=-0.747396] *[#15626=-0.747421] *[#15629=-0.747442] *[#15630=-0.747459] *[#15631=-0.747476] *[#15632=-0.74749] *[#15633=-0.747504] *[#15634=-0.74752] *[#15635=-0.74756] *[#15636=-0.747642] *[#15637=-0.747674] *[#15638=-0.747713] *[#15639=-0.747718] *[#15643=-0.747756] *[#15644=-0.747772] *[#15649=-0.747797] *[#15650=-0.747797] *[#15652=-0.747813] *[#15655=-0.747842] *[#15656=-0.747843] *[#15658=-0.747851] *[#15659=-0.747868] *[#15662=-0.747882] *[#15663=-0.747887] *[#15664=-0.747894] *[#15665=-0.747898] *[#15666=-0.747921] *[#15671=-0.747933] *[#15674=-0.747957] *[#15679=-0.747961] *[#15687=-0.747965] *[#15694=-0.747982] *[#15699=-0.747992] *[#15704=-0.748015] *[#15708=-0.748029] *[#15709=-0.748029] *[#15711=-0.748062] *[#15712=-0.748069] *[#15715=-0.748074] *[#15716=-0.748077] *[#15719=-0.74809] *[#15720=-0.748101] *[#15723=-0.748108] *[#15724=-0.748115] *[#15727=-0.74812] *[#15729=-0.748147] *[#15730=-0.748149] *[#15732=-0.748163] *[#15733=-0.748169] *[#15734=-0.748185] *[#15735=-0.748199] *[#15738=-0.748202] *[#15740=-0.748213] *[#15743=-0.748215] *[#15745=-0.748228] *[#15746=-0.748229] *[#15748=-0.748241] *[#15749=-0.74825] *[#15750=-0.748265] *[#15753=-0.748291] *[#15755=-0.748301] *[#15762=-0.748303] *[#15764=-0.748317] *[#15765=-0.748321] *[#15768=-0.748327] *[#15773=-0.748342] *[#15774=-0.748343] *[#15776=-0.748354] *[#15783=-0.748369] *[#15786=-0.748383] *[#15789=-0.748394] *[#15790=-0.748402] *[#15793=-0.748412] *[#15796=-0.748424] *[#15797=-0.748432] *[#15798=-0.748446] *[#15799=-0.748457] *[#15800=-0.748473] *[#15805=-0.748485] *[#15808=-0.748496] *[#15813=-0.748501] *[#15818=-0.748501] *[#15822=-0.748502] *[#15828=-0.748503] *[#15837=-0.748505] *[#15840=-0.748512] *[#15848=-0.748515] *[#15849=-0.748515] *[#15851=-0.748529] *[#15854=-0.748529] *[#15856=-0.748531] *[#15857=-0.748534] *[#15860=-0.748534] *[#15880=-0.748538] *[#15883=-0.748541] *[#15884=-0.748542] *[#15889=-0.748544] *[#15890=-0.748544] *[#15894=-0.748545] *[#15926=-0.748546] *[#15929=-0.748547] *[#15932=-0.748547] *[#15934=-0.748547] *[#15936=-0.748547] *[#15947=-0.748548] *[#15956=-0.748548] *[#15964=-0.748548] *[#15968=-0.748548] *[#15973=-0.748549] *[#15982=-0.74855] *[#15983=-0.74855] *[#15984=-0.74855] *[#15986=-0.748551] *[#15987=-0.748551] *[#15990=-0.748551] *[#15997=-0.748553] *[#15998=-0.748553] *[#15999=-0.748554] *[#16002=-0.748554] *[#16007=-0.748555] *[#16008=-0.748555] *[#16009=-0.748555] *[#16010=-0.748555] *[#16011=-0.748556] *[#16012=-0.748556] *[#16013=-0.748557] *[#16016=-0.748557] *[#16018=-0.748557] *[#16019=-0.748558] *[#16028=-0.748559] *[#16031=-0.74856] *[#16034=-0.74856] *[#16039=-0.74856] *[#16044=-0.748562] *[#16045=-0.748562] *[#16046=-0.748562] *[#16049=-0.748562] *[#16052=-0.748564] *[#16053=-0.748565] *[#16054=-0.748565] *[#16056=-0.748565] *[#16057=-0.748566] *[#16062=-0.748567] *[#16063=-0.748568] *[#16078=-0.748569] *[#16081=-0.748569] *[#16084=-0.748569] *[#16087=-0.748569] *[#16088=-0.748569] *[#16089=-0.74857] *[#16100=-0.74857] *[#16102=-0.74857] *[#16105=-0.74857] *[#16108=-0.748571] *[#16119=-0.748572] *[#16126=-0.748572] *[#16149=-0.748572] 
 + - Final    cost = -0.748572 ; 764 funcs
 + Final fine fit Parameters:
       x-shift= -0.1566   y-shift=  0.5286   z-shift= -0.6617  ...  enorm=  0.8613 mm
       z-angle=  0.0432   x-angle= -0.1017   y-angle=  0.1354  ...  total=  0.1747 deg
       x-scale=  1.0031   y-scale=  1.0104   z-scale=  0.9981  ...  vol3D=  1.0116 = base smaller than source
     y/x-shear=  0.0008 z/x-shear=  0.0021 z/y-shear= -0.0045
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.1566 0.5286 -0.6617 0.0432 -0.1017 0.1354 1.0031 1.0104 0.9981 0.0008 0.0021 -0.0045
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S27_unflipped_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S27_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 60.5
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_anatSS.sub-S27_lr_al_junk -overwrite ./anatSS.sub-S27_unflipped_ob+orig
++ processing ./anatSS.sub-S27_unflipped_ob+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_ts_ns_wt+orig -source ./__tt_anatSS.sub-S27_lr_al_junk+orig -prefix ./anatSS.sub-S27_flip_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S27_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.073539 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.073539 degrees from plumb.
++ Source dataset: ./__tt_anatSS.sub-S27_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1570481 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=7
++ Zero-pad: zbot=8 ztop=8
++ 43011 voxels [17.7%] in weight mask
++ Number of points for matching = 43011
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.979 38.786 22.650 (index)
 + source center of mass = 139.931 160.694 194.014 (index)
 + source-target CM = -5.504 2.785 -5.243 (xyz)
 + estimated center of mass shifts = -5.504 2.785 -5.243
++ shift param auto-range: -66.2..55.2 -72.3..77.9 -61.8..51.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -15.503571 .. 4.496429  center = -5.503571
 + Range param#2 [y-shift] = -7.215092 .. 12.784908  center = 2.784908
 + Range param#3 [z-shift] = -15.243065 .. 4.756935  center = -5.243065
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -45.503571 .. 34.496429  center = -5.503571
 + Range param#2 [y-shift] = -37.215092 .. 42.784908  center = 2.784908
 + Range param#3 [z-shift] = -45.243065 .. 34.756935  center = -5.243065
 + 12 free parameters
++ Normalized convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -45.504 ..   34.496
 +       y-shift =  -37.215 ..   42.785
 +       z-shift =  -45.243 ..   34.757
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1570481 [out of 28272000] voxels
 + base mask has 57204 [out of 242688] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - copying weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 273.348 .. 1022.47; base clip 222.101 .. 805.355
 +  - versus source range 0.373857 .. 935.797; base range 0 .. 1026.36
 + 38617 total points stored in 355 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o+-.o+-.+.--..+-+..+o+--$..-+ + - best 45 costs found:
    0 v= 0.533075:  -5.50   2.78  -5.24   0.00   0.00   0.00  [grid]
    1 v= 0.711943: -32.17  16.12 -31.91 -15.00  15.00  15.00  [grid]
    2 v= 0.733155:   7.92  25.47 -36.58   4.37  20.12 -15.12  [rand]
    3 v= 0.737120:  21.16  16.12 -31.91  15.00  15.00 -15.00  [grid]
    4 v= 0.738181: -18.92  25.47 -36.58  -4.37  20.12  15.12  [rand]
    5 v= 0.761058: -32.17  16.12 -31.91 -15.00  15.00  30.00  [grid]
    6 v= 0.773131:  12.83 -23.36   0.80   6.51 -20.18  -7.56  [rand]
    7 v= 0.776882: -23.83 -23.36   0.80  -6.51 -20.18   7.56  [rand]
    8 v= 0.782017:   7.83  16.12 -18.58 -15.00  15.00 -30.00  [grid]
    9 v= 0.787153:   7.83  16.12 -18.58  15.00  15.00  15.00  [grid]
   10 v= 0.791931: -39.28 -29.14   2.47 -12.26 -17.56  17.80  [rand]
   11 v= 0.797381: -32.17 -23.88   8.09 -15.00 -15.00  15.00  [grid]
   12 v= 0.799372: -32.17  16.12 -18.58 -15.00  15.00  15.00  [grid]
   13 v= 0.801298: -18.84  16.12 -18.58 -15.00  15.00 -15.00  [grid]
   14 v= 0.809918:  21.63  21.66 -32.98   5.55  17.35 -23.42  [rand]
   15 v= 0.810167:   7.83 -23.88   8.09 -15.00 -15.00 -15.00  [grid]
   16 v= 0.813665: -32.17 -10.55   8.09 -15.00 -15.00  15.00  [grid]
   17 v= 0.831286:  28.27 -29.14   2.47  12.26 -17.56 -17.80  [rand]
   18 v= 0.833849:   7.83 -23.88   8.09 -30.00 -15.00 -30.00  [grid]
   19 v= 0.836293: -32.17 -23.88   8.09  15.00 -15.00  30.00  [grid]
   20 v= 0.838531:  21.16  16.12 -18.58  15.00  15.00 -15.00  [grid]
   21 v= 0.840508: -18.84 -23.88   8.09 -30.00 -15.00 -15.00  [grid]
   22 v= 0.843233:  21.16 -23.88   8.09 -15.00 -15.00 -30.00  [grid]
   23 v= 0.844530:  21.16 -10.55   8.09 -15.00 -15.00 -30.00  [grid]
   24 v= 0.846494: -39.83 -13.80   3.36  16.34  -8.64  40.54  [rand]
   25 v= 0.851407:  28.82 -13.80 -13.85 -16.34  -8.64 -40.54  [rand]
   26 v= 0.855695:  26.98 -11.91   6.56 -11.16  -9.40 -34.39  [rand]
   27 v= 0.856473: -37.99 -11.91   6.56  11.16  -9.40  34.39  [rand]
   28 v= 0.856603:  21.16  16.12 -31.91  15.00  15.00 -30.00  [grid]
   29 v= 0.860478: -18.84  16.12 -18.58 -30.00  15.00 -15.00  [grid]
   30 v= 0.862367: -18.84 -23.88   8.09  15.00 -15.00  30.00  [grid]
   31 v= 0.864961: -18.84  16.12 -18.58  15.00  15.00  30.00  [grid]
   32 v= 0.873320:  28.82 -13.80   3.36 -16.34  -8.64 -40.54  [rand]
   33 v= 0.874972: -14.14 -17.65  12.23 -25.20 -18.50 -13.54  [rand]
   34 v= 0.877627: -18.84 -23.88   8.09  30.00 -15.00  30.00  [grid]
   35 v= 0.878590:   7.83 -23.88   8.09  30.00 -15.00  15.00  [grid]
   36 v= 0.882485: -18.84 -10.55   8.09  15.00 -15.00  30.00  [grid]
   37 v= 0.883105:   8.70  12.24 -10.08 -15.99  13.53 -29.93  [rand]
   38 v= 0.887140: -37.99 -11.91 -17.05 -11.16  -9.40  34.39  [rand]
   39 v= 0.901282:  21.16 -23.88   8.09  15.00 -15.00 -15.00  [grid]
   40 v= 0.906032: -31.81 -23.17  12.55  15.82 -17.65  37.25  [rand]
   41 v= 0.915508: -18.84 -23.88   8.09  15.00 -15.00  15.00  [grid]
   42 v= 0.917306:  26.34  -9.01  -7.98 -23.31  -3.26 -40.47  [rand]
   43 v= 0.918409:   7.83 -10.55   8.09 -15.00 -15.00 -15.00  [grid]
   44 v= 0.922510:  26.34  -9.01  -2.50 -23.31  -3.26 -40.47  [rand]
 + - A little optimization:*[#8004=0.420463] *[#8012=0.411369] *[#8013=0.370575] *[#8014=0.355934] *[#8017=0.34573] *[#8018=0.330441] *[#8020=0.325794] *[#8021=0.323099] *[#8022=0.323004] *[#8026=0.322323] *[#8028=0.322285] .............................................
 + - costs of the above after a little optimization:
  * 0 v= 0.322285:  -2.32   2.49  -2.33   0.34   1.93  -0.58  [grid]
    1 v= 0.604396: -30.16  14.93 -25.53 -12.71  13.66  16.74  [grid]
    2 v= 0.648027:   7.00  24.17 -32.52   3.77  20.22 -15.18  [rand]
    3 v= 0.644067:  20.49  14.88 -26.39  13.79  14.35 -14.38  [grid]
    4 v= 0.606925: -17.30  20.11 -30.00  -6.04  18.65  11.73  [rand]
    5 v= 0.596456: -30.28  13.91 -22.92  -9.64  11.16  20.24  [grid]
    6 v= 0.343961:   1.01  -3.68   3.23   3.72  -3.49  -1.22  [rand]
    7 v= 0.533218: -23.45 -15.96   2.78  -4.63 -11.49  12.15  [rand]
    8 v= 0.614151:   3.71  14.13 -18.89 -13.41  10.57 -30.81  [grid]
    9 v= 0.659983:   2.31  15.61 -19.39  15.82  13.90  15.45  [grid]
   10 v= 0.571654: -30.10 -15.43  -2.16  -6.46 -10.89  18.00  [rand]
   11 v= 0.547774: -25.38 -17.42   1.06  -4.11 -12.41  13.92  [grid]
   12 v= 0.500607: -20.59  10.61 -13.34  -8.25   9.06   4.84  [grid]
   13 v= 0.500376: -21.50  10.03 -10.22  -7.87   7.24   7.02  [grid]
   14 v= 0.576338:   7.07  16.83 -26.14   2.63  15.69 -15.58  [rand]
   15 v= 0.603389:   6.99 -18.31   6.96  -7.17 -14.52 -15.51  [grid]
   16 v= 0.549019: -31.15 -10.99  -0.81  -9.10  -9.72  14.82  [grid]
   17 v= 0.523475:  13.91 -10.67   2.42  11.34  -7.52  -7.29  [rand]
   18 v= 0.694917:   7.09 -21.21   2.94 -21.59 -13.37 -26.74  [grid]
   19 v= 0.656468: -29.33 -21.09   3.63  10.99 -15.75  29.93  [grid]
   20 v= 0.575292:  16.64  11.57 -16.98   8.57   8.78 -13.45  [grid]
   21 v= 0.446995: -18.74  -5.69   0.30  -4.87  -2.69   7.74  [grid]
   22 v= 0.681149:  21.30 -21.18   1.27 -13.35 -15.74 -32.37  [grid]
   23 v= 0.559858:  21.19  -1.49  -5.46   5.38  -0.72 -17.57  [grid]
   24 v= 0.627178: -33.96 -12.42  -4.89  12.91  -8.76  39.07  [rand]
   25 v= 0.636095:  27.89 -10.42 -11.88  -8.35  -7.37 -40.92  [rand]
   26 v= 0.619963:  19.57 -13.17  -3.69 -15.02  -9.45 -36.14  [rand]
   27 v= 0.616422: -34.16 -10.99  -5.81   7.08  -9.54  33.36  [rand]
   28 v= 0.625925:  19.91  13.15 -24.79   7.65  10.64 -23.87  [grid]
   29 v= 0.323410:  -4.73   1.39  -1.25  -1.16   1.04   0.02  [grid]
   30 v= 0.637997: -21.17 -19.24   4.27  11.56 -14.33  24.68  [grid]
   31 v= 0.560944: -13.81   9.32 -15.98   2.64   6.81  15.92  [grid]
   32 v= 0.670124:  23.79  -9.87  -0.77 -17.62  -9.51 -41.24  [rand]
   33 v= 0.713772: -13.55 -18.12  10.30 -24.21 -13.75 -12.87  [rand]
   34 v= 0.782606: -19.78 -24.36   7.84  27.72 -14.39  34.51  [grid]
   35 v= 0.774866:   3.43 -22.98   8.14  25.89 -14.18  13.93  [grid]
   36 v= 0.531662: -13.75 -10.25   9.87  -2.67 -11.45   7.62  [grid]
   37 v= 0.584143:   8.62   5.88 -13.41 -12.07   4.42 -30.13  [rand]
   38 v= 0.640895: -42.87 -11.10 -12.64  -7.76  -9.49  30.38  [rand]
   39 v= 0.476393:   4.47 -11.34   7.12  -1.23  -6.87  -7.05  [grid]
   40 v= 0.563440: -31.12  -8.28  -2.37  -3.80  -8.20  18.02  [rand]
   41 v= 0.417073: -11.75  -8.48   5.28  -2.95  -5.34   3.78  [grid]
   42 v= 0.614381:  22.27  -8.68  -7.42 -15.77  -5.66 -42.04  [rand]
   43 v= 0.424923:   6.59  -7.74   4.08   2.67  -4.80  -5.48  [grid]
   44 v= 0.614076:  24.32  -8.01  -8.82 -15.11  -5.37 -43.28  [rand]
 + - save # 0 for possible use in twobest
 + - skip #29 for twobest: too close to set # 0
 + - save # 6 for possible use in twobest
 + - save #41 for possible use in twobest
 + - save #43 for possible use in twobest
 + - save #21 for possible use in twobest
 + - skip #39 for twobest: too close to set #43
 + - save #13 for possible use in twobest
 + - skip #12 for twobest: too close to set #13
 + - save #17 for possible use in twobest
 + - save #36 for possible use in twobest
 + - save # 7 for possible use in twobest
 + - skip #11 for twobest: too close to set # 7
 + - save #16 for possible use in twobest
 + - save #23 for possible use in twobest
 + - save #31 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save #10 for possible use in twobest
 + - save #20 for possible use in twobest
 + - save #14 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - save #15 for possible use in twobest
 + - skip # 1 for twobest: too close to set # 5
 + - save # 4 for possible use in twobest
 + - save #44 for possible use in twobest
 + - save # 8 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 275.092 .. 1034.37; base clip 222.725 .. 825.365
 +  - versus source range 0.0267237 .. 935.819; base range 0 .. 1028.42
 + 38481 total points stored in 372 'RHDD(12.342)' bloks
*[#10519=0.321563] *[#10520=0.319998] *[#10521=0.317509] *[#10522=0.31639] *[#10524=0.315267] *[#10531=0.310412] *[#10533=0.309574] *[#10535=0.309118] *[#10536=0.308228] *[#10538=0.30778] *[#10540=0.307343] *[#10541=0.306809] *[#10542=0.306186] *[#10543=0.305839] *[#10544=0.305551] *[#10545=0.304513] *[#10546=0.303562] *[#10547=0.302657] *[#10548=0.302325] *[#10550=0.302324] *[#10555=0.301995] *[#10556=0.301619] *[#10557=0.301504] *[#10558=0.301201] *[#10559=0.30109] *[#10560=0.300807] *[#10563=0.299107] *[#10564=0.298998] *[#10568=0.298333] *[#10571=0.297728] *[#10572=0.297219] *[#10573=0.29626] *[#10574=0.295838] *[#10575=0.294725] *[#10576=0.293129] 
 + - param set #1 has cost=0.293129
 + -- Parameters = -2.7982 1.7587 -1.3983 0.7171 -0.0929 0.0728 0.9931 1.0267 0.9785 -0.0222 -0.0036 -0.0012
 + - param set #2 has cost=0.333997
 + -- Parameters = 1.0121 -1.3181 1.6851 3.4360 -1.6511 -1.4131 1.0029 0.9926 1.0130 0.0057 -0.0061 -0.0078
 + - param set #3 has cost=0.401239
 + -- Parameters = -8.4637 -6.0840 2.8428 -2.3164 -3.1319 1.3114 0.9802 1.0008 0.9982 0.0124 -0.0109 0.0024
 + - param set #4 has cost=0.337346
 + -- Parameters = -1.4188 -2.3885 1.3601 1.1370 -2.3055 -0.9900 0.9267 1.0140 0.9946 -0.0008 0.0086 -0.0070
 + - param set #5 has cost=0.390379
 + -- Parameters = -9.9294 -1.2181 -2.9401 -2.1463 -0.1579 3.4935 0.9992 1.0014 0.9676 -0.0079 0.0087 -0.0036
 + - param set #6 has cost=0.495018
 + -- Parameters = -18.5450 7.8941 -7.1641 -6.1506 6.4533 6.7614 0.9629 0.9910 1.0130 0.0036 0.0154 0.0073
 + - param set #7 has cost=0.387923
 + -- Parameters = 6.3946 0.0494 1.1150 4.7225 -0.7867 -4.9920 0.9846 0.9949 1.0094 -0.0374 0.0294 -0.0174
 + - param set #8 has cost=0.429744
 + -- Parameters = -9.9461 -9.8628 5.2303 -2.5309 -5.1072 2.5231 0.9819 0.9880 0.9990 0.0061 0.0104 0.0025
 + - param set #9 has cost=0.487548
 + -- Parameters = -19.3302 -13.3734 1.7225 -3.5343 -5.6629 9.1932 0.9782 0.9851 0.9961 0.0164 -0.0156 -0.0068
 + - param set #10 has cost=0.534699
 + -- Parameters = -26.0898 -10.4589 0.6318 -7.9370 -8.1530 12.1965 0.9861 0.9989 0.9919 -0.0011 -0.0016 -0.0081
 + - param set #11 has cost=0.504502
 + -- Parameters = 22.0275 -1.7048 -4.3611 7.8546 -0.0715 -14.5274 0.9875 0.9849 0.9812 -0.0324 -0.0037 0.0008
 + - param set #12 has cost=0.306205
 + -- Parameters = -1.8446 0.8734 -0.2193 1.4078 -0.0636 -0.1449 0.9999 1.0030 0.9932 -0.0058 -0.0019 -0.0013
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0736 
 + --- dist(#3,#1) = 0.125 
 + --- dist(#4,#1) = 0.181 
 + --- dist(#5,#1) = 0.149 
 + --- dist(#6,#1) = 0.0891 
 + --- dist(#7,#1) = 0.155 
 + --- dist(#8,#1) = 0.145 
 + --- dist(#9,#1) = 0.207 
 + --- dist(#10,#1) = 0.197 
 + --- dist(#11,#1) = 0.31 
 + --- dist(#12,#1) = 0.291 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 278.419 .. 1047.63; base clip 223.044 .. 847.1
 +  - versus source range 0.00015499 .. 935.822; base range 0 .. 1030.17
 + 38059 total points stored in 374 'RHDD(12.2051)' bloks
 + - param set #1 has cost=0.316931
 + -- Parameters = -1.5063 1.8961 -1.5608 1.3028 -0.1331 -0.5219 0.9865 1.0297 0.9782 -0.0244 -0.0077 -0.0029
 + - param set #2 has cost=0.323359
 + -- Parameters = -1.0432 1.2543 0.1033 1.5717 -0.0317 -0.7675 0.9836 1.0149 1.0012 -0.0068 -0.0016 0.0001
 + - param set #3 has cost=0.330855
 + -- Parameters = -0.4350 0.2916 0.1000 2.0599 -0.3013 -0.9242 0.9943 0.9977 1.0018 -0.0026 -0.0071 -0.0076
 + - param set #4 has cost=0.343451
 + -- Parameters = -0.5644 -0.3396 1.3140 1.4528 -1.6766 -1.4192 0.9650 1.0267 1.0013 0.0075 0.0079 -0.0039
 + - param set #5 has cost=0.326908
 + -- Parameters = 1.2207 0.6736 -0.2712 1.5111 -0.2335 -2.9334 0.9941 1.0128 0.9914 -0.0403 0.0374 -0.0019
 + - param set #6 has cost=0.349689
 + -- Parameters = -5.4056 0.0983 -0.9978 0.0173 -1.2536 1.6445 0.9887 1.0203 0.9658 -0.0205 0.0019 -0.0128
 + - param set #7 has cost=0.403632
 + -- Parameters = -6.3278 -5.2625 2.9082 -0.6748 -2.7544 1.6684 0.9982 0.9977 1.0018 0.0112 -0.0118 0.0001
 + - param set #8 has cost=0.433882
 + -- Parameters = -8.3455 -8.2137 5.1051 -2.0403 -4.5675 1.7045 0.9793 0.9888 0.9949 0.0106 0.0123 -0.0008
 + - param set #9 has cost=0.407392
 + -- Parameters = -4.8629 -6.0622 0.6316 -0.6753 -1.9457 -0.0418 0.9770 0.9860 0.9912 0.0381 -0.0208 -0.0023
 + - param set #10 has cost=0.453983
 + -- Parameters = -10.7374 6.6759 -2.1129 -2.8964 4.8788 4.5248 0.9592 0.9407 1.0044 0.0285 0.0334 -0.0051
 + - param set #11 has cost=0.507266
 + -- Parameters = 21.7047 -1.7058 -4.1341 7.9110 -0.0846 -14.4802 0.9877 0.9846 0.9800 -0.0319 0.0021 0.0010
 + - param set #12 has cost=0.408443
 + -- Parameters = -8.5887 -1.3522 -5.2150 0.4204 -1.6700 4.6890 0.9335 0.9690 0.9229 -0.0032 -0.0643 -0.0697
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0792 
 + --- dist(#3,#1) = 0.203 
 + --- dist(#4,#1) = 0.0982 
 + --- dist(#5,#1) = 0.144 
 + --- dist(#6,#1) = 0.0487 
 + --- dist(#7,#1) = 0.16 
 + --- dist(#8,#1) = 0.281 
 + --- dist(#9,#1) = 0.301 
 + --- dist(#10,#1) = 0.157 
 + --- dist(#11,#1) = 0.242 
 + --- dist(#12,#1) = 0.29 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + - using 43011 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 280.946 .. 1057.82; base clip 223.422 .. 865.034
 +  - versus source range 0 .. 935.822; base range 0 .. 1030.98
 + 38422 total points stored in 388 'RHDD(12.1215)' bloks
 + - param set #1 has cost=0.339070
 + -- Parameters = -1.5750 1.7948 -1.4399 1.2885 -0.1451 -0.5055 0.9852 1.0302 0.9792 -0.0242 -0.0081 -0.0033
 + - param set #2 has cost=0.340453
 + -- Parameters = -1.0242 1.1413 0.0439 1.5959 -0.1399 -0.8072 0.9821 1.0192 0.9973 -0.0225 -0.0004 0.0011
 + - param set #3 has cost=0.344980
 + -- Parameters = 0.3833 0.7256 -0.6147 1.6618 -0.2345 -2.1680 0.9902 1.0137 0.9887 -0.0394 0.0358 -0.0039
 + - param set #4 has cost=0.344063
 + -- Parameters = -0.1837 0.2607 -0.3436 2.1265 -0.6938 -1.1902 0.9986 1.0061 0.9946 -0.0184 0.0061 -0.0143
 + - param set #5 has cost=0.348742
 + -- Parameters = -0.9908 0.3188 0.3014 1.6650 -1.1309 -0.8854 0.9707 1.0258 0.9977 -0.0034 0.0137 -0.0081
 + - param set #6 has cost=0.351560
 + -- Parameters = -3.8809 0.5083 -1.6117 0.1786 -0.8965 0.5490 0.9812 1.0219 0.9726 -0.0215 -0.0007 -0.0157
 + - param set #7 has cost=0.398927
 + -- Parameters = -5.0102 -4.1643 1.7650 -0.2516 -2.2950 0.8434 0.9901 1.0034 1.0013 0.0088 -0.0126 -0.0050
 + - param set #8 has cost=0.395782
 + -- Parameters = -3.1445 -3.5379 0.2206 1.0261 -1.9627 1.0503 0.9594 1.0010 0.9836 0.0371 -0.0217 -0.0099
 + - param set #9 has cost=0.402684
 + -- Parameters = -6.7822 -1.0208 -4.1599 0.1619 -1.6030 2.7955 0.9393 0.9854 0.9522 -0.0089 -0.0639 -0.0639
 + - param set #10 has cost=0.439090
 + -- Parameters = -7.6795 -7.4026 4.0986 -1.6151 -4.0570 1.4063 0.9759 0.9999 1.0045 0.0082 0.0118 -0.0022
 + - param set #11 has cost=0.459927
 + -- Parameters = -9.8585 6.4658 -2.0387 -2.2900 4.3732 4.0871 0.9613 0.9547 1.0008 0.0306 0.0314 -0.0026
 + - param set #12 has cost=0.494324
 + -- Parameters = 17.8855 -2.3069 -2.9126 5.1381 -1.1149 -13.0616 1.0060 0.9695 0.9589 -0.0190 0.0712 -0.0403
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0493 
 + --- dist(#3,#1) = 0.0655 
 + --- dist(#4,#1) = 0.198 
 + --- dist(#5,#1) = 0.0979 
 + --- dist(#6,#1) = 0.0559 
 + --- dist(#7,#1) = 0.276 
 + --- dist(#8,#1) = 0.149 
 + --- dist(#9,#1) = 0.273 
 + --- dist(#10,#1) = 0.146 
 + --- dist(#11,#1) = 0.247 
 + --- dist(#12,#1) = 0.357 
 + - Total coarse refinement net CPU time = 0.0 s; 3444 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=28.5995 usiz=513.761
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 283.929 .. 1071.69; base clip 223.422 .. 865.034
 +  - versus source range 0 .. 936.178; base range 0 .. 1031.18
 + 38706 total points stored in 397 'RHDD(12.0364)' bloks
 + - cost(#1)=0.365820 *
 + -- Parameters = -1.5750 1.7948 -1.4399 1.2885 -0.1451 -0.5055 0.9852 1.0302 0.9792 -0.0242 -0.0081 -0.0033
 + - cost(#2)=0.368905  
 + -- Parameters = -1.0242 1.1413 0.0439 1.5959 -0.1399 -0.8072 0.9821 1.0192 0.9973 -0.0225 -0.0004 0.0011
 + - cost(#3)=0.371336  
 + -- Parameters = -0.1837 0.2607 -0.3436 2.1265 -0.6938 -1.1902 0.9986 1.0061 0.9946 -0.0184 0.0061 -0.0143
 + - cost(#4)=0.371863  
 + -- Parameters = 0.3833 0.7256 -0.6147 1.6618 -0.2345 -2.1680 0.9902 1.0137 0.9887 -0.0394 0.0358 -0.0039
 + - cost(#5)=0.375233  
 + -- Parameters = -0.9908 0.3188 0.3014 1.6650 -1.1309 -0.8854 0.9707 1.0258 0.9977 -0.0034 0.0137 -0.0081
 + - cost(#6)=0.376322  
 + -- Parameters = -3.8809 0.5083 -1.6117 0.1786 -0.8965 0.5490 0.9812 1.0219 0.9726 -0.0215 -0.0007 -0.0157
 + - cost(#7)=0.417016  
 + -- Parameters = -3.1445 -3.5379 0.2206 1.0261 -1.9627 1.0503 0.9594 1.0010 0.9836 0.0371 -0.0217 -0.0099
 + - cost(#8)=0.422107  
 + -- Parameters = -5.0102 -4.1643 1.7650 -0.2516 -2.2950 0.8434 0.9901 1.0034 1.0013 0.0088 -0.0126 -0.0050
 + - cost(#9)=0.418696  
 + -- Parameters = -6.7822 -1.0208 -4.1599 0.1619 -1.6030 2.7955 0.9393 0.9854 0.9522 -0.0089 -0.0639 -0.0639
 + - cost(#10)=0.459710  
 + -- Parameters = -7.6795 -7.4026 4.0986 -1.6151 -4.0570 1.4063 0.9759 0.9999 1.0045 0.0082 0.0118 -0.0022
 + - cost(#11)=0.474766  
 + -- Parameters = -9.8585 6.4658 -2.0387 -2.2900 4.3732 4.0871 0.9613 0.9547 1.0008 0.0306 0.0314 -0.0026
 + - cost(#12)=0.507607  
 + -- Parameters = 17.8855 -2.3069 -2.9126 5.1381 -1.1149 -13.0616 1.0060 0.9695 0.9589 -0.0190 0.0712 -0.0403
 + - cost(#13)=0.567614  
 + -- Parameters = -5.5036 2.7849 -5.2431 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.359605 *
 + -- Parameters = -1.7432 1.1809 -1.5342 1.2465 -0.1936 -0.3803 0.9912 1.0203 0.9763 -0.0561 -0.0263 -0.0043
 + - cost(#2)=0.367313  
 + -- Parameters = -1.0911 1.1283 -0.0083 1.5788 -0.2321 -0.7996 0.9828 1.0191 0.9972 -0.0267 0.0001 0.0010
 + - cost(#3)=0.367279  
 + -- Parameters = -0.4978 0.4941 -0.3158 1.9113 -0.7452 -1.1382 0.9908 1.0104 0.9959 -0.0220 0.0047 -0.0153
 + - cost(#4)=0.365367  
 + -- Parameters = 0.0367 0.8288 -0.8126 1.6199 -0.5102 -1.7678 0.9862 1.0182 0.9894 -0.0404 0.0232 -0.0110
 + - cost(#5)=0.368500  
 + -- Parameters = -1.1151 0.7120 0.1275 1.5340 -1.4899 -0.8182 0.9673 1.0348 0.9963 -0.0194 0.0113 -0.0159
 + - cost(#6)=0.364789  
 + -- Parameters = -3.1726 0.6594 -1.2546 0.8060 -1.0780 0.4925 0.9877 1.0277 0.9773 -0.0561 -0.0030 -0.0160
 + - cost(#7)=0.376680  
 + -- Parameters = -3.0392 -0.1000 -0.4560 1.0770 -1.1234 0.4292 0.9973 1.0042 0.9936 -0.0065 -0.0217 -0.0265
 + - cost(#8)=0.380593  
 + -- Parameters = -4.3405 -0.7652 0.9005 0.0812 -1.5966 0.7092 0.9758 0.9993 1.0117 -0.0383 -0.0098 -0.0267
 + - cost(#9)=0.396302  
 + -- Parameters = -5.3955 -1.5025 -4.2694 1.0235 -1.7401 2.4024 0.9723 0.9907 0.9528 -0.0115 -0.0618 -0.0629
 + - cost(#10)=0.387774  
 + -- Parameters = -1.8872 -0.1021 1.9757 1.4729 -1.1386 -0.2142 0.9770 1.0087 1.0182 0.0053 0.0110 -0.0083
 + - cost(#11)=0.464187  
 + -- Parameters = -9.3589 5.3903 -1.1884 -1.9891 3.3717 3.7656 0.9675 0.9601 1.0012 0.0345 0.0317 -0.0002
 + - cost(#12)=0.501188  
 + -- Parameters = 17.7090 -1.8897 -2.7960 5.3183 -1.4205 -12.6770 1.0051 0.9882 0.9660 -0.0153 0.0750 -0.0391
 + - cost(#13)=0.384799  
 + -- Parameters = -0.4106 0.4223 -1.2161 1.8435 0.5538 -1.4313 0.9770 0.9994 0.9812 -0.0065 0.0102 0.0075
 + - case #1 is now the best
 + - Initial  cost = 0.359605
 + - Initial fine Parameters = -1.7432 1.1809 -1.5342 1.2465 -0.1936 -0.3803 0.9912 1.0203 0.9763 -0.0561 -0.0263 -0.0043
 + - Finalish cost = 0.355706 ; 208 funcs
 + - ini Finalish Parameters = -1.9698 1.0464 -1.4939 1.0935 -0.3123 -0.4109 0.9887 1.0177 0.9818 -0.0698 -0.0175 -0.0110
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 284.502 .. 1072.02; base clip 223.422 .. 865.034
 +  - versus source range 0 .. 936.178; base range 0 .. 1031.18
*[#15544=-0.208097] *[#15591=-0.208109] *[#15593=-0.208114] *[#15609=-0.208132] *[#15617=-0.208136] *[#15623=-0.208155] *[#15636=-0.208206] *[#15637=-0.208235] *[#15639=-0.208247] *[#15642=-0.208256] *[#15643=-0.208262] *[#15648=-0.208274] *[#15649=-0.208282] *[#15650=-0.208305] *[#15651=-0.208313] *[#15652=-0.208325] *[#15654=-0.208334] *[#15656=-0.208336] *[#15658=-0.208343] *[#15659=-0.208343] *[#15661=-0.208354] *[#15664=-0.208357] *[#15665=-0.208361] *[#15666=-0.208362] *[#15667=-0.208365] *[#15670=-0.208369] *[#15671=-0.208374] *[#15672=-0.208382] *[#15675=-0.208388] *[#15678=-0.208394] *[#15679=-0.208398] *[#15682=-0.208399] *[#15688=-0.208406] *[#15689=-0.208411] *[#15690=-0.208419] *[#15692=-0.208427] *[#15694=-0.208428] *[#15695=-0.208434] *[#15696=-0.208436] *[#15697=-0.20844] *[#15698=-0.208444] *[#15699=-0.208446] *[#15700=-0.208449] *[#15701=-0.208453] *[#15702=-0.208457] *[#15703=-0.208458] *[#15704=-0.208463] *[#15705=-0.208474] *[#15708=-0.208489] *[#15709=-0.208493] *[#15716=-0.208495] *[#15718=-0.208501] *[#15720=-0.208504] *[#15721=-0.208511] *[#15722=-0.208514] *[#15723=-0.208516] *[#15724=-0.20852] *[#15725=-0.208525] *[#15727=-0.208526] *[#15728=-0.208528] *[#15729=-0.20853] *[#15730=-0.208531] *[#15731=-0.208536] *[#15732=-0.208538] *[#15735=-0.208545] *[#15736=-0.208547] *[#15737=-0.208553] *[#15738=-0.208559] *[#15739=-0.208565] *[#15740=-0.208584] *[#15741=-0.208586] *[#15743=-0.208606] *[#15746=-0.208634] *[#15751=-0.208636] *[#15752=-0.208638] *[#15753=-0.208642] *[#15754=-0.208643] *[#15755=-0.208644] *[#15757=-0.208651] *[#15758=-0.208661] *[#15759=-0.208669] *[#15760=-0.208677] *[#15761=-0.208691] *[#15762=-0.208694] *[#15763=-0.208701] *[#15764=-0.208708] *[#15765=-0.208713] *[#15768=-0.208715] *[#15771=-0.208723] *[#15772=-0.208732] *[#15773=-0.208741] *[#15774=-0.208756] *[#15775=-0.208781] *[#15786=-0.208786] *[#15788=-0.20879] *[#15791=-0.208794] *[#15792=-0.208796] *[#15793=-0.208798] *[#15794=-0.208802] *[#15795=-0.208804] *[#15796=-0.208804] *[#15798=-0.208808] *[#15799=-0.208809] *[#15800=-0.208811] *[#15801=-0.208813] *[#15802=-0.208816] *[#15803=-0.208818] *[#15804=-0.208819] *[#15805=-0.208821] *[#15807=-0.208828] *[#15810=-0.208829] *[#15811=-0.208832] *[#15812=-0.208835] *[#15813=-0.208838] *[#15814=-0.208852] *[#15815=-0.20886] *[#15819=-0.20886] *[#15820=-0.208863] *[#15821=-0.208863] *[#15822=-0.208868] *[#15825=-0.208874] *[#15828=-0.20888] *[#15829=-0.208882] *[#15830=-0.208886] *[#15831=-0.208887] *[#15832=-0.208889] *[#15833=-0.208894] *[#15836=-0.208896] *[#15837=-0.2089] *[#15838=-0.208901] *[#15839=-0.208902] *[#15840=-0.208907] *[#15841=-0.208914] *[#15842=-0.208926] *[#15843=-0.208947] *[#15844=-0.208958] *[#15845=-0.209] *[#15846=-0.209043] *[#15850=-0.209048] *[#15853=-0.20906] *[#15854=-0.209084] *[#15855=-0.2091] *[#15860=-0.209109] *[#15861=-0.209111] *[#15863=-0.209119] *[#15864=-0.209121] *[#15865=-0.209123] *[#15866=-0.209125] *[#15869=-0.209126] *[#15871=-0.209128] *[#15874=-0.209131] *[#15879=-0.209143] *[#15880=-0.209154] *[#15881=-0.209156] *[#15883=-0.209161] *[#15884=-0.209162] *[#15886=-0.209169] *[#15887=-0.209174] *[#15890=-0.209176] *[#15893=-0.209179] *[#15894=-0.209181] *[#15895=-0.209186] *[#15896=-0.209186] *[#15897=-0.209191] *[#15898=-0.209192] *[#15902=-0.209199] *[#15903=-0.209201] *[#15906=-0.209206] *[#15907=-0.209207] *[#15908=-0.20921] *[#15910=-0.209215] *[#15911=-0.209221] *[#15912=-0.209223] *[#15915=-0.209228] *[#15916=-0.209238] *[#15919=-0.20924] *[#15920=-0.20925] *[#15921=-0.209262] *[#15923=-0.209263] *[#15924=-0.209272] *[#15929=-0.209275] *[#15930=-0.209281] *[#15931=-0.209289] *[#15932=-0.209289] *[#15934=-0.209294] *[#15935=-0.209314] *[#15936=-0.209321] *[#15941=-0.209325] *[#15942=-0.209333] *[#15943=-0.209333] *[#15944=-0.209334] *[#15945=-0.20935] *[#15946=-0.209359] *[#15947=-0.209364] *[#15952=-0.209369] *[#15953=-0.209375] *[#15954=-0.209383] *[#15955=-0.209395] *[#15959=-0.209399] *[#15960=-0.209403] *[#15961=-0.209407] *[#15962=-0.209413] *[#15963=-0.209426] *[#15964=-0.209451] *[#15969=-0.209452] *[#15973=-0.209454] *[#15974=-0.209459] *[#15975=-0.209466] *[#15980=-0.209473] *[#15981=-0.209474] *[#15982=-0.209478] *[#15983=-0.209483] *[#15984=-0.209491] *[#15985=-0.209502] *[#15986=-0.209507] *[#15987=-0.209519] *[#15988=-0.20952] *[#15990=-0.209535] *[#15991=-0.20954] *[#15992=-0.209543] *[#15993=-0.209552] *[#15994=-0.209563] *[#15999=-0.209571] *[#16000=-0.209575] *[#16001=-0.209578] *[#16002=-0.20958] *[#16003=-0.209587] *[#16004=-0.209598] *[#16005=-0.209604] *[#16008=-0.209615] *[#16009=-0.209621] *[#16016=-0.209628] *[#16017=-0.209631] *[#16018=-0.209636] *[#16019=-0.209636] *[#16021=-0.209645] *[#16024=-0.209656] *[#16025=-0.209659] *[#16029=-0.209659] *[#16030=-0.209659] *[#16033=-0.209664] *[#16034=-0.209664] *[#16038=-0.209665] *[#16039=-0.209669] *[#16040=-0.209673] *[#16043=-0.209678] *[#16048=-0.209678] *[#16062=-0.209678] *[#16064=-0.209679] *[#16067=-0.209679] *[#16069=-0.20968] *[#16072=-0.20968] *[#16080=-0.209682] *[#16083=-0.209682] *[#16085=-0.209683] *[#16088=-0.209685] *[#16091=-0.209686] *[#16094=-0.209687] *[#16095=-0.209688] *[#16106=-0.209689] *[#16111=-0.209691] *[#16118=-0.209691] *[#16120=-0.209692] *[#16123=-0.209692] *[#16124=-0.209693] *[#16138=-0.209694] *[#16149=-0.209695] *[#16152=-0.209695] *[#16159=-0.209696] *[#16160=-0.209698] *[#16161=-0.209698] *[#16163=-0.209699] *[#16165=-0.2097] *[#16168=-0.209701] *[#16169=-0.209701] *[#16175=-0.209701] *[#16179=-0.209701] *[#16183=-0.209703] *[#16184=-0.209703] *[#16215=-0.209703] *[#16217=-0.209704] *[#16218=-0.209704] *[#16223=-0.209704] *[#16224=-0.209704] *[#16232=-0.209704] *[#16235=-0.209704] *[#16241=-0.209704] *[#16244=-0.209705] *[#16247=-0.209705] *[#16252=-0.209705] *[#16253=-0.209705] *[#16256=-0.209705] *[#16259=-0.209705] *[#16260=-0.209705] *[#16266=-0.209706] *[#16269=-0.209706] *[#16288=-0.209706] *[#16289=-0.209706] *[#16290=-0.209706] *[#16291=-0.209706] *[#16298=-0.209707] *[#16323=-0.209707] *[#16329=-0.209707] *[#16331=-0.209707] *[#16338=-0.209707] *[#16341=-0.209707] *[#16354=-0.209707] *[#16359=-0.209707] *[#16361=-0.209707] *[#16364=-0.209708] *[#16366=-0.209708] *[#16373=-0.209708] *[#16377=-0.209708] *[#16384=-0.209708] *[#16397=-0.209708] *[#16402=-0.209708] *[#16415=-0.209708] *[#16419=-0.209708] *[#16422=-0.209708] *[#16423=-0.209708] *[#16426=-0.209709] *[#16428=-0.209709] *[#16431=-0.209709] *[#16436=-0.209709] *[#16440=-0.209709] *[#16444=-0.209709] *[#16445=-0.209709] *[#16462=-0.209709] *[#16480=-0.209709] 
 + - Final    cost = -0.209709 ; 976 funcs
 + Final fine fit Parameters:
       x-shift= -2.2921   y-shift=  0.9736   z-shift= -1.7373  ...  enorm=  3.0364 mm
       z-angle=  1.1427   x-angle= -0.8781   y-angle= -0.0183  ...  total=  1.4413 deg
       x-scale=  0.9887   y-scale=  1.0281   z-scale=  0.9783  ...  vol3D=  0.9944 = base bigger than source
     y/x-shear= -0.0690 z/x-shear= -0.0311 z/y-shear= -0.0185
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -2.2921 0.9736 -1.7373 1.1427 -0.8781 -0.0183 0.9887 1.0281 0.9783 -0.0690 -0.0311 -0.0185
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S27_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S27_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 63.0
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S27_unflipped_ob_temp_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.073539 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.073539 degrees from plumb.
++ Source dataset: ./anatSS.sub-S27_unflipped_ob_temp_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1524058 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=7
++ Zero-pad: zbot=8 ztop=8
++ 43011 voxels [17.7%] in weight mask
++ Number of points for matching = 43011
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.979 38.786 22.650 (index)
 + source center of mass = 95.639 90.747 51.829 (index)
 + source-target CM = -1.298 2.611 -4.482 (xyz)
 + estimated center of mass shifts = -1.298 2.611 -4.482
++ shift param auto-range: -62.0..59.4 -72.5..77.7 -61.1..52.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.298141 .. 8.701859  center = -1.298141
 + Range param#2 [y-shift] = -7.389259 .. 12.610741  center = 2.610741
 + Range param#3 [z-shift] = -14.482048 .. 5.517952  center = -4.482048
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.298141 .. 38.701859  center = -1.298141
 + Range param#2 [y-shift] = -37.389259 .. 42.610741  center = 2.610741
 + Range param#3 [z-shift] = -44.482048 .. 35.517952  center = -4.482048
 + 12 free parameters
++ Normalized convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -41.298 ..   38.702
 +       y-shift =  -37.389 ..   42.611
 +       z-shift =  -44.482 ..   35.518
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1524058 [out of 4423680] voxels
 + base mask has 57204 [out of 242688] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=88.2907 usiz=483.174
 + - copying weight image
 + - using 43011 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 284.273 .. 1073.03; base clip 223.406 .. 875.706
 +  - versus source range 0.000388429 .. 1056.41; base range 0 .. 1031.18
 + 38706 total points stored in 397 'RHDD(12.0364)' bloks
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S27_flip_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.073539 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.073539 degrees from plumb.
++ Source dataset: ./anatSS.sub-S27_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1545056 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=7
++ Zero-pad: zbot=8 ztop=8
++ 43011 voxels [17.7%] in weight mask
++ Number of points for matching = 43011
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.979 38.786 22.650 (index)
 + source center of mass = 94.813 91.366 51.742 (index)
 + source-target CM = -2.124 1.992 -4.569 (xyz)
 + estimated center of mass shifts = -2.124 1.992 -4.569
++ shift param auto-range: -62.8..58.5 -73.1..77.1 -61.1..52.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -12.124298 .. 7.875702  center = -2.124298
 + Range param#2 [y-shift] = -8.008247 .. 11.991753  center = 1.991753
 + Range param#3 [z-shift] = -14.568756 .. 5.431244  center = -4.568756
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -42.124298 .. 37.875702  center = -2.124298
 + Range param#2 [y-shift] = -38.008247 .. 41.991753  center = 1.991753
 + Range param#3 [z-shift] = -44.568756 .. 35.431244  center = -4.568756
 + 12 free parameters
++ Normalized convergence radius = 0.0000090
++ Final parameter search ranges:
 +       x-shift =  -42.124 ..   37.876
 +       y-shift =  -38.008 ..   41.992
 +       z-shift =  -44.569 ..   35.431
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1545056 [out of 4423680] voxels
 + base mask has 57204 [out of 242688] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=86.3577 usiz=484.433
 + - copying weight image
 + - using 43011 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 284.732 .. 1075.87; base clip 223.406 .. 875.706
 +  - versus source range 0.000286956 .. 1058.55; base range 0 .. 1031.18
 + 38706 total points stored in 397 'RHDD(12.0364)' bloks
++ -allcostX1D finished
No flip cost is -0.718649 for lpc+ZZ cost function
Flip cost is -0.199552 for lpc+ZZ cost function
Data does not need flipping
#Script is running (command trimmed):
  cat_matvec -ONELINE ./anatSS.sub-S27_al_junk_e2a_only_mat.aff12.1D ./anatSS.sub-S27_unflipped_obla2e_mat.1D -I > ./anatSS.sub-S27_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./vr_base_ts_ns+orig -1Dmatrix_apply ./anatSS.sub-S27_al_junk_mat.aff12.1D -prefix ./anatSS.sub-S27_al_junk -input ./anatSS.sub-S27_unflipped+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.073539 degrees from plumb.
++ Source dataset: ./anatSS.sub-S27_unflipped+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 31.979 30.786 14.650 (index)
 + source center of mass = 126.731 94.831 114.614 (index)
 + source-target CM = -2.613 18.663 17.838 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -2.613   18.663   17.838
 +  shift search range is +/- =   60.669   60.669   37.316
 +                                  4.3%    30.8%    47.8%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.9993 0.0314 -0.0784 32.3455 -0.0730 -0.2023 -0.9762 170.4213 -0.0474 0.9894 -0.1925 39.3695
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S27_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat anatSS.sub-S27+orig -suffix \
 _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask \
 -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./anatSS.sub-S27_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S27*

# Finished alignment successfully

if ( ! -f anatQQ.sub-S27+tlrc.HEAD ) then
foreach run ( 01 02 03 04 05 06 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.sub-S27.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.073539 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S27.r01.tshift+orig.BRIK is 12.073539 degrees from plumb.
++ Reading input dataset ./pb02.sub-S27.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44926 voxels
 + 6175 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.122  pitch=-0.056  yaw=-0.289  dS=-0.756  dL=-0.033  dP=-0.173
++ Mean: roll=-0.022  pitch=+0.115  yaw=-0.081  dS=-0.334  dL=+0.042  dP=+0.017
++ Max : roll=+0.057  pitch=+0.465  yaw=+0.017  dS=+0.061  dL=+0.144  dP=+0.121
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.13(0.13) 0.15(0.05) 0.06(0.19) 0.12(0.16) 0.14(0.04) 0.11(0.17) 0.18(0.17) 0.14(0.14) 0.21(0.14) 0.22(0.08) 0.15(0.25) 0.19(0.24) 0.11(0.12) 0.16(0.06) 0.23(0.16) 0.09(0.27) 0.12(0.09) 0.23(0.18) 0.23(0.17) 0.20(0.11) 0.18(0.19) 0.22(0.17) 0.26(0.14) 0.14(0.29) 0.11(0.10) 0.18(0.12) 0.15(0.19) 0.21(0.22) 0.16(0.10) 0.16(0.11) 0.24(0.25) 0.13(0.18) 0.17(0.08) 0.17(0.01) 0.18(0.21) 0.25(0.29) 0.23(0.16) 0.20(0.07) 0.29(0.30) 0.14(0.24) 0.18(0.08) 0.29(0.28) 0.17(0.15) 0.14(0.15) 0.23(0.25) 0.20(0.05) 0.11(0.20) 0.21(0.21) 0.18(0.04) 0.15(0.16) 0.25(0.24) 0.23(0.06) 0.15(0.20) 0.19(0.17) 0.28(0.10) 0.20(0.21) 0.26(0.13) 0.31(0.11) 0.34(0.21) 0.19(0.28) 0.32(0.27) 0.24(0.20) 0.34(0.24) 0.34(0.08) 0.18(0.31) 0.37(0.32) 0.25(0.15) 0.20(0.08) 0.37(0.24) 0.30(0.09) 0.22(0.13) 0.33(0.16) 0.24(0.12) 0.21(0.10) 0.38(0.27) 0.30(0.10) 0.20(0.16) 0.35(0.23) 0.27(0.11) 0.20(0.13) 0.35(0.23) 0.35(0.04) 0.22(0.22) 0.29(0.11) 0.38(0.13) 0.29(0.21) 0.28(0.09) 0.47(0.30) 0.30(0.27) 0.45(0.24) 0.39(0.11) 0.27(0.17) 0.46(0.26) 0.37(0.10) 0.25(0.19) 0.43(0.23) 0.45(0.07) 0.27(0.24) 0.25(0.05) 0.46(0.29) 0.32(0.18) 0.27(0.12) 0.45(0.27) 0.42(0.04) 0.27(0.21) 0.38(0.16) 0.43(0.09) 0.28(0.23) 0.32(0.07) 0.45(0.23) 0.39(0.10) 0.27(0.29) 0.42(0.29) 0.45(0.07) 0.23(0.33) 0.48(0.37) 0.40(0.14) 0.45(0.10) 0.39(0.08) 0.30(0.15) 0.46(0.24) 0.47(0.02) 0.34(0.19) 0.42(0.15) 0.61(0.20) 0.29(0.57) 0.27(0.18) 0.53(0.48) 0.29(0.28) 0.46(0.23) 0.49(0.07) 0.43(0.08) 0.39(0.04) 0.37(0.04) 0.36(0.01) 0.36(0.02) 0.37(0.04) 0.36(0.02) 0.37(0.06) 0.39(0.03) 0.37(0.03) 0.24(0.21) 0.37(0.18) 0.28(0.13) 0.30(0.03) 0.47(0.24) 0.27(0.31) 0.39(0.21) 0.44(0.08) 0.47(0.07) 0.28(0.23) 0.38(0.12) 0.42(0.08) 0.29(0.22) 0.46(0.25) 0.44(0.03) 0.29(0.24) 0.49(0.29) 0.36(0.18) 0.27(0.13) 0.43(0.25) 0.38(0.07) 0.54(0.18) 0.50(0.05) 0.37(0.17) 0.40(0.07) 0.47(0.09) 0.44(0.03) 0.43(0.04) 0.36(0.10) 0.41(0.11) 0.45(0.06) 0.46(0.01) 0.33(0.17) 0.40(0.10) 0.45(0.06) 0.30(0.19) 0.49(0.24) 0.42(0.09) 0.31(0.18) 0.53(0.30) 0.35(0.22) 0.36(0.03) 0.51(0.21) 0.33(0.25) 0.45(0.18) 0.48(0.05) 0.44(0.10) 0.52(0.10) 0.38(0.22) 0.56(0.26) 0.45(0.14) 0.65(0.21) 0.57(0.09) 0.39(0.24) 0.50(0.16) 0.52(0.04) 0.38(0.17) 0.48(0.14) 0.47(0.03) 0.40(0.10) 0.56(0.19) 0.42(0.17) 0.47(0.09) 0.40(0.07) 0.49(0.11) 0.55(0.08) 0.43(0.14) 0.63(0.23) 0.42(0.25) 0.53(0.15) 0.53(0.04) 0.46(0.08) 0.60(0.17) 0.46(0.17) 0.41(0.06) 0.59(0.21) 0.57(0.03) 0.42(0.18) 0.51(0.11) 0.58(0.09) 0.39(0.23) 0.49(0.14) 0.58(0.10) 0.42(0.22) 0.54(0.17) 0.54(0.02) 0.40(0.17) 0.57(0.21) 0.57(0.04) 0.60(0.04) 0.63(0.04) 0.42(0.27) 0.52(0.13) 0.67(0.19) 0.41(0.34) 0.56(0.18) 0.53(0.07) 0.45(0.10) 0.68(0.28) 0.46(0.28) 0.53(0.10) 0.66(0.16) 0.49(0.23) 0.61(0.17) 0.66(0.06) 0.51(0.18) 0.61(0.13) 0.53(0.10) 0.59(0.08) 0.57(0.02) 0.49(0.11) 0.65(0.19) 0.64(0.02) 0.56(0.11) 0.53(0.04) 0.67(0.17) 0.68(0.04) 0.65(0.24) 0.72(0.16) 0.65(0.09) 0.55(0.11) 0.83(0.32) 0.60(0.29) 0.73(0.19) 0.76(0.05) 0.56(0.27) 0.61(0.07) 0.74(0.18) 0.61(0.17) 0.66(0.09) 0.77(0.12) 0.64(0.16) 0.67(0.08) 0.73(0.09) 0.55(0.23) 0.71(0.20) 0.73(0.03) 0.65(0.11) 0.75(0.14) 0.72(0.05) 0.73(0.05) 0.73(0.04) 0.55(0.23) 0.57(0.08) 0.78(0.26) 0.54(0.30) 0.67(0.15) 0.80(0.17) 0.57(0.30) 0.70(0.17) 0.79(0.10) 0.55(0.32) 0.68(0.19) 0.78(0.13) 0.59(0.24) 0.77(0.23) 0.70(0.07) 0.57(0.18) 0.77(0.25) 0.80(0.09) 0.74(0.09) 0.57(0.20) 0.73(0.21) 0.69(0.06) 0.66(0.09) 0.78(0.16) 0.62(0.19) 0.59(0.06) 0.81(0.25) 0.67(0.18) 0.63(0.07) 0.78(0.22) 0.99(0.29) 1.52(0.53) 0.78(0.77) 0.45(0.64) 0.90(0.70) 1.39(0.54) 1.00(0.41) 1.36(0.41) 1.19(0.33) 0.94(0.27) 0.92(0.09) 1.03(0.16) 1.02(0.06) 1.06(0.07) 1.16(0.13) 1.08(0.14) 1.17(0.11) 1.39(0.27) 1.10(0.33) 1.24(0.21) 1.08(0.22) 1.29(0.27) 1.31(0.04) 1.44(0.14) 1.25(0.25) 1.05(0.24) 1.24(0.29) 1.03(0.33) 1.23(0.29) 1.05(0.25) 1.12(0.12) 1.21(0.15) 1.04(0.27) 1.21(0.25) 1.17(0.06) 1.14(0.06) 1.11(0.04) 1.10(0.05) 1.11(0.03) 1.04(0.10) 1.09(0.09) 0.94(0.23) 0.92(0.10) 0.95(0.11) 0.91(0.10) 1.01(0.17) 0.96(0.11) 1.02(0.15) 0.95(0.14) 1.09(0.24) 0.97(0.18) 1.12(0.24) 1.02(0.13) 1.09(0.09) 1.11(0.02) 0.91(0.26) 0.92(0.08) 1.08(0.19) 1.04(0.09) 1.01(0.04) 0.89(0.19) 1.01(0.18) 1.06(0.05) 1.02(0.07) 0.99(0.06) 1.06(0.10) 1.00(0.09) 0.84(0.21) 1.06(0.30) 1.01(0.13) 1.03(0.08) 0.86(0.24) 1.00(0.25) 1.07(0.09) 0.99(0.15) 1.09(0.15) 0.99(0.16) 0.89(0.14) 1.10(0.29) 1.03(0.13) 1.07(0.10) 1.04(0.04) 1.04(0.10) 1.09(0.10) 0.93(0.22) 0.92(0.05) 1.09(0.24) 0.98(0.15) 0.93(0.10) 1.07(0.21) 1.06(0.04) 0.93(0.18) 0.97(0.07) 1.04(0.08) 0.94(0.17) 1.04(0.19) 1.08(0.07) 0.95(0.16)
++ Max displacement in automask = 1.52 (mm) at sub-brick 315
++ Max delta displ  in automask = 0.77 (mm) at sub-brick 316
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.sub-S27.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S27.aff12.1D anatSS.sub-S27_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source pb02.sub-S27.r01.tshift+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S27.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S27.r01.tshift+orig.BRIK is 12.073539 degrees from plumb.
++ opened source dataset 'pb02.sub-S27.r01.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1558794240
in use bytes     = 1322202960
Total (incl. mmap):
system bytes     = 1558794240
in use bytes     = 1322202960
max mmap regions =          1
max mmap bytes   =  118239232
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 1987.5 sec
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.073539 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1558794240
in use bytes     = 1322203120
Total (incl. mmap):
system bytes     = 1558794240
in use bytes     = 1322203120
max mmap regions =          1
max mmap bytes   =  118239232
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.sub-S27.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.073539 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S27.r02.tshift+orig.BRIK is 12.073539 degrees from plumb.
++ Reading input dataset ./pb02.sub-S27.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44894 voxels
 + 6174 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.143  pitch=+0.088  yaw=-0.338  dS=-1.252  dL=-0.016  dP=-0.040
++ Mean: roll=-0.092  pitch=+0.218  yaw=-0.240  dS=-0.890  dL=+0.029  dP=+0.048
++ Max : roll=-0.052  pitch=+0.350  yaw=-0.183  dS=-0.557  dL=+0.100  dP=+0.137
++ Max displacements (mm) for each sub-brick:
 1.09(0.00) 1.31(0.25) 1.40(0.18) 1.20(0.29) 1.24(0.17) 1.21(0.07) 1.20(0.04) 1.04(0.28) 1.19(0.26) 1.52(0.41) 1.14(0.53) 1.34(0.32) 1.21(0.17) 1.26(0.13) 1.28(0.05) 1.26(0.04) 1.28(0.03) 1.09(0.32) 1.08(0.08) 1.16(0.15) 1.12(0.09) 1.21(0.16) 1.10(0.21) 1.24(0.25) 1.11(0.23) 1.17(0.14) 1.26(0.18) 1.23(0.07) 1.22(0.02) 1.05(0.26) 1.16(0.18) 1.09(0.12) 1.03(0.11) 1.19(0.27) 1.10(0.16) 1.03(0.16) 1.18(0.28) 1.20(0.04) 1.21(0.02) 1.06(0.21) 1.02(0.07) 1.20(0.25) 1.19(0.04) 1.14(0.06) 1.02(0.20) 1.16(0.22) 1.17(0.04) 1.09(0.11) 1.17(0.10) 1.18(0.03) 1.20(0.03) 1.17(0.04) 0.97(0.35) 1.09(0.19) 1.12(0.08) 1.02(0.24) 1.16(0.30) 1.04(0.21) 1.14(0.18) 1.22(0.12) 1.06(0.24) 1.15(0.14) 1.20(0.08) 1.03(0.23) 1.14(0.16) 1.05(0.15) 1.03(0.07) 1.19(0.27) 1.17(0.05) 1.11(0.11) 1.05(0.11) 1.14(0.19) 1.07(0.12) 1.14(0.12) 1.17(0.05) 1.17(0.03) 1.08(0.14) 1.04(0.09) 1.18(0.24) 1.05(0.21) 1.10(0.09) 1.16(0.10) 1.16(0.05) 1.15(0.03) 1.07(0.15) 1.18(0.18) 1.12(0.08) 1.16(0.06) 1.09(0.10) 1.11(0.06) 1.09(0.03) 1.04(0.15) 1.17(0.27) 1.02(0.25) 1.10(0.13) 1.09(0.04) 1.03(0.14) 1.14(0.22) 1.03(0.19) 1.15(0.21) 1.20(0.07) 1.03(0.26) 1.03(0.07) 1.18(0.25) 1.05(0.18) 1.14(0.15) 1.10(0.04) 1.09(0.04) 1.17(0.11) 1.14(0.04) 1.05(0.13) 1.16(0.13) 1.19(0.04) 1.01(0.24) 1.15(0.22) 1.10(0.09) 1.17(0.12) 1.14(0.10) 1.11(0.05) 1.27(0.23) 1.10(0.24) 1.06(0.07) 1.18(0.19) 1.07(0.17) 1.22(0.22) 1.12(0.15) 1.20(0.12) 1.15(0.06) 1.10(0.08) 1.22(0.19) 1.14(0.12) 1.20(0.09) 1.21(0.02) 1.08(0.19) 1.21(0.20) 1.10(0.19) 1.22(0.17) 1.21(0.04) 1.15(0.13) 1.30(0.22) 1.24(0.10) 1.20(0.05) 1.16(0.05) 1.13(0.08) 1.21(0.14) 1.12(0.17) 1.28(0.28) 1.17(0.15) 1.24(0.11) 1.12(0.19) 1.21(0.15) 1.34(0.20) 1.14(0.30) 1.24(0.17) 1.17(0.08) 1.13(0.07) 1.28(0.22) 1.13(0.21) 1.26(0.17) 1.26(0.05) 1.25(0.05) 1.27(0.04) 1.31(0.06) 1.29(0.03) 1.12(0.23) 1.22(0.12) 1.36(0.18) 1.32(0.07) 1.12(0.30) 1.24(0.22) 1.21(0.06) 1.20(0.05) 1.33(0.19) 1.24(0.12) 1.38(0.19) 1.28(0.14) 1.26(0.04) 1.29(0.05) 1.23(0.08) 1.35(0.16) 1.18(0.23) 1.29(0.15) 1.42(0.16) 1.14(0.35) 1.24(0.14) 1.30(0.09) 1.18(0.16) 1.42(0.30) 1.36(0.11) 1.40(0.07) 1.36(0.07) 1.31(0.07) 1.36(0.06) 1.30(0.09) 1.35(0.10) 1.29(0.12) 1.42(0.14) 1.20(0.25) 1.26(0.10) 1.28(0.04) 1.23(0.09) 1.37(0.23) 1.29(0.11) 1.31(0.05) 1.22(0.13) 1.42(0.27) 1.35(0.10) 1.27(0.09) 1.28(0.03) 1.26(0.06) 1.34(0.11) 1.30(0.06) 1.42(0.17) 1.27(0.20) 1.29(0.04) 1.41(0.18) 1.39(0.07) 1.23(0.21) 1.37(0.18) 1.44(0.12) 1.39(0.09) 1.35(0.04) 1.38(0.03) 1.29(0.12) 1.44(0.20) 1.36(0.10) 1.22(0.20) 1.40(0.25) 1.20(0.28) 1.33(0.18) 1.29(0.09) 1.33(0.07) 1.32(0.08) 1.34(0.03) 1.40(0.10) 1.33(0.12) 1.45(0.18) 1.47(0.06) 1.38(0.13) 1.36(0.05) 1.46(0.13) 1.46(0.03) 1.42(0.04) 1.34(0.15) 1.43(0.13) 1.50(0.11) 1.42(0.13) 1.27(0.18) 1.49(0.28) 1.34(0.20) 1.29(0.08) 1.50(0.27) 1.47(0.09) 1.31(0.20) 1.46(0.21) 1.51(0.07) 1.32(0.26) 1.45(0.19) 1.34(0.15) 1.42(0.10) 1.50(0.11) 1.37(0.16) 1.52(0.20) 1.40(0.14) 1.33(0.10) 1.49(0.21) 1.50(0.06) 1.51(0.06) 1.50(0.03) 1.45(0.10) 1.51(0.12) 1.56(0.05) 1.42(0.20) 1.48(0.12) 1.56(0.10) 1.40(0.23) 1.57(0.22) 1.44(0.16) 1.47(0.06) 1.60(0.18) 1.37(0.32) 1.48(0.16) 1.61(0.18) 1.39(0.32) 1.55(0.25) 1.54(0.06) 1.48(0.10) 1.60(0.17) 1.48(0.15) 1.56(0.11) 1.48(0.12) 1.40(0.11) 1.63(0.30) 1.47(0.21) 1.47(0.03) 1.62(0.19) 1.42(0.25) 1.44(0.07) 1.64(0.25) 1.49(0.22) 1.48(0.03) 1.63(0.23) 1.51(0.16) 1.40(0.16) 1.66(0.33) 1.51(0.19) 1.54(0.06) 1.67(0.16) 1.53(0.19) 1.50(0.05) 1.58(0.12) 1.45(0.19) 1.66(0.27) 1.64(0.04) 1.66(0.02) 1.48(0.22) 1.55(0.09) 1.70(0.20) 1.58(0.14) 1.63(0.11) 1.61(0.04) 1.47(0.18) 1.63(0.21) 1.58(0.10) 1.50(0.11) 1.68(0.22) 1.51(0.23) 1.63(0.14) 1.73(0.13) 1.50(0.29) 1.71(0.29) 1.62(0.15) 1.64(0.11) 1.65(0.04) 1.53(0.18) 1.75(0.29) 1.58(0.21) 1.60(0.06) 1.77(0.20) 1.59(0.23) 1.64(0.07) 1.73(0.10) 1.58(0.21) 1.61(0.07) 1.73(0.15) 1.70(0.04) 1.69(0.02) 1.57(0.18) 1.71(0.22) 1.71(0.04) 1.54(0.26) 1.65(0.16) 1.58(0.08) 1.62(0.06) 1.82(0.26) 1.64(0.23) 1.63(0.03) 1.82(0.24) 1.78(0.05) 1.59(0.25) 1.64(0.09) 1.82(0.21) 1.67(0.19) 1.59(0.18) 1.80(0.34) 1.65(0.20) 1.72(0.11) 1.70(0.05) 1.66(0.07) 1.76(0.14) 1.64(0.18) 1.79(0.21) 1.72(0.08) 1.57(0.18) 1.74(0.21) 1.78(0.06) 1.74(0.08) 1.65(0.13) 1.76(0.15) 1.69(0.07) 1.78(0.12) 1.76(0.04) 1.61(0.23) 1.77(0.23) 1.68(0.12) 1.77(0.11) 1.90(0.15) 1.71(0.24) 1.83(0.18) 1.73(0.13) 1.67(0.11) 1.85(0.25) 1.74(0.14) 1.59(0.19) 1.84(0.32) 1.78(0.08) 1.75(0.07) 1.87(0.16) 1.74(0.15) 1.75(0.03) 1.87(0.16) 1.81(0.08) 1.75(0.10) 1.83(0.15) 1.84(0.04) 1.68(0.21) 1.79(0.15) 1.68(0.12) 1.63(0.12) 1.68(0.08) 1.66(0.05) 1.81(0.21)
++ Max displacement in automask = 1.90 (mm) at sub-brick 386
++ Max delta displ  in automask = 0.53 (mm) at sub-brick 10
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.sub-S27.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S27.aff12.1D anatSS.sub-S27_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source pb02.sub-S27.r02.tshift+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S27.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S27.r02.tshift+orig.BRIK is 12.073539 degrees from plumb.
++ opened source dataset 'pb02.sub-S27.r02.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1575415808
in use bytes     = 1338827088
Total (incl. mmap):
system bytes     = 1575415808
in use bytes     = 1338827088
max mmap regions =          1
max mmap bytes   =  118239232
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 2021.6 sec
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.073539 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1575415808
in use bytes     = 1338827248
Total (incl. mmap):
system bytes     = 1575415808
in use bytes     = 1338827248
max mmap regions =          1
max mmap bytes   =  118239232
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.sub-S27.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.073539 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S27.r03.tshift+orig.BRIK is 12.073539 degrees from plumb.
++ Reading input dataset ./pb02.sub-S27.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44859 voxels
 + 6159 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.080  pitch=-0.182  yaw=-0.043  dS=-0.058  dL=-0.086  dP=+0.807
++ Mean: roll=-0.042  pitch=-0.051  yaw=+0.022  dS=+0.306  dL=-0.051  dP=+0.896
++ Max : roll=-0.004  pitch=+0.039  yaw=+0.082  dS=+0.630  dL=+0.024  dP=+0.968
++ Max displacements (mm) for each sub-brick:
 1.08(0.00) 1.08(0.15) 1.06(0.04) 1.06(0.03) 1.04(0.09) 1.08(0.21) 1.10(0.13) 1.12(0.16) 1.11(0.19) 1.11(0.04) 1.08(0.04) 1.07(0.03) 1.07(0.08) 1.12(0.20) 1.11(0.20) 1.09(0.08) 1.06(0.05) 1.06(0.15) 1.10(0.12) 1.10(0.21) 1.09(0.25) 1.08(0.21) 1.07(0.03) 1.08(0.17) 1.08(0.24) 1.06(0.03) 1.05(0.02) 1.07(0.16) 1.07(0.13) 1.07(0.06) 1.07(0.23) 1.09(0.12) 1.09(0.11) 1.11(0.13) 1.09(0.07) 1.11(0.14) 1.08(0.22) 1.06(0.15) 1.07(0.10) 1.08(0.07) 1.09(0.12) 1.07(0.03) 1.07(0.12) 1.07(0.13) 1.07(0.01) 1.05(0.04) 1.07(0.23) 1.08(0.08) 1.08(0.09) 1.08(0.24) 1.08(0.26) 1.09(0.19) 1.10(0.02) 1.09(0.16) 1.09(0.17) 1.08(0.25) 1.07(0.03) 1.05(0.03) 1.05(0.06) 1.06(0.03) 1.02(0.10) 1.04(0.05) 1.04(0.06) 1.06(0.18) 1.14(0.28) 1.12(0.26) 1.13(0.22) 1.12(0.14) 1.10(0.05) 1.13(0.11) 1.08(0.27) 1.09(0.22) 1.08(0.22) 1.09(0.18) 1.08(0.15) 1.08(0.08) 1.09(0.12) 1.09(0.20) 1.06(0.10) 1.08(0.09) 1.06(0.12) 1.04(0.05) 1.03(0.07) 1.03(0.02) 1.05(0.04) 1.08(0.19) 1.07(0.18) 1.07(0.12) 1.06(0.14) 1.06(0.07) 1.13(0.24) 1.17(0.07) 1.11(0.16) 1.15(0.21) 1.08(0.24) 1.13(0.24) 1.12(0.26) 1.10(0.08) 1.11(0.03) 1.10(0.12) 1.10(0.21) 1.09(0.26) 1.09(0.17) 1.09(0.10) 1.08(0.10) 1.07(0.11) 1.07(0.08) 1.08(0.03) 1.09(0.16) 1.07(0.19) 1.05(0.10) 1.05(0.03) 1.05(0.18) 1.15(0.21) 1.09(0.29) 1.12(0.26) 1.09(0.18) 1.10(0.08) 1.07(0.08) 1.05(0.22) 1.01(0.09) 1.02(0.05) 1.03(0.11) 1.03(0.03) 1.03(0.12) 1.04(0.05) 1.05(0.14) 1.05(0.07) 1.07(0.08) 1.09(0.21) 1.07(0.13) 1.07(0.02) 1.16(0.31) 1.11(0.32) 1.13(0.25) 1.08(0.25) 1.08(0.13) 1.07(0.06) 1.05(0.25) 1.01(0.10) 1.01(0.18) 1.02(0.15) 1.02(0.06) 1.01(0.09) 1.03(0.11) 1.04(0.15) 1.03(0.07) 1.05(0.25) 1.13(0.16) 1.09(0.21) 1.12(0.28) 1.10(0.28) 1.06(0.10) 1.08(0.29) 1.08(0.26) 1.08(0.10) 1.03(0.20) 1.09(0.13) 1.07(0.26) 1.06(0.25) 1.07(0.20) 1.05(0.07) 1.04(0.05) 1.03(0.09) 1.03(0.16) 1.06(0.09) 1.05(0.20) 1.04(0.08) 1.03(0.09) 1.04(0.04) 1.04(0.04) 1.08(0.29) 1.08(0.19) 1.09(0.04) 1.08(0.19) 1.05(0.29) 1.06(0.05) 1.05(0.30) 1.07(0.14) 1.07(0.22) 1.05(0.25) 1.05(0.11) 1.03(0.05) 1.05(0.17) 1.04(0.29) 1.02(0.22) 1.02(0.10) 1.03(0.11) 1.00(0.20) 1.00(0.19) 1.01(0.05) 1.00(0.12) 0.99(0.03) 1.02(0.13) 1.02(0.10) 1.04(0.13) 1.03(0.20) 1.02(0.16) 1.04(0.23) 1.02(0.18) 1.05(0.05) 1.04(0.18) 1.01(0.22) 1.05(0.20) 1.02(0.10) 1.06(0.16) 1.06(0.29) 1.03(0.22) 1.06(0.13) 1.05(0.06) 1.04(0.23) 1.05(0.23) 1.05(0.04) 1.02(0.15) 1.05(0.12) 1.05(0.07) 1.02(0.04) 1.03(0.03) 1.02(0.08) 1.02(0.14) 1.04(0.11) 1.04(0.07) 1.02(0.24) 1.03(0.19) 1.05(0.05) 1.04(0.28) 1.03(0.24) 1.05(0.17) 1.06(0.05) 1.06(0.16) 1.01(0.16) 1.01(0.26) 1.00(0.08) 0.97(0.17) 1.00(0.20) 0.99(0.18) 1.01(0.13) 1.00(0.06) 0.98(0.02) 1.01(0.13) 0.98(0.18) 0.98(0.17) 0.97(0.03) 0.96(0.24) 0.99(0.20) 0.99(0.12) 0.99(0.09) 0.97(0.05) 0.98(0.11) 0.97(0.07) 1.00(0.18) 1.01(0.34) 0.96(0.18) 0.97(0.09) 0.97(0.05) 0.97(0.10) 0.98(0.18) 0.96(0.21) 0.96(0.11) 0.99(0.10) 0.96(0.18) 0.97(0.11) 1.00(0.11) 0.96(0.26) 0.97(0.09) 0.98(0.02) 1.02(0.09) 1.00(0.24) 0.94(0.20) 0.97(0.20) 0.96(0.06) 0.94(0.23) 0.98(0.26) 0.96(0.13) 0.96(0.10) 0.98(0.29) 0.94(0.17) 0.94(0.10) 0.95(0.24) 0.94(0.15) 0.95(0.06) 0.95(0.17) 0.96(0.07) 0.93(0.13) 0.96(0.20) 0.98(0.13) 0.96(0.12) 0.98(0.27) 0.96(0.20) 0.93(0.04) 0.97(0.25) 0.94(0.26) 0.94(0.15) 0.94(0.05) 0.94(0.20)
++ Max displacement in automask = 1.17 (mm) at sub-brick 91
++ Max delta displ  in automask = 0.34 (mm) at sub-brick 251
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.sub-S27.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S27.aff12.1D anatSS.sub-S27_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source pb02.sub-S27.r03.tshift+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S27.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S27.r03.tshift+orig.BRIK is 12.073539 degrees from plumb.
++ opened source dataset 'pb02.sub-S27.r03.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1575378944
in use bytes     = 1338781776
Total (incl. mmap):
system bytes     = 1575378944
in use bytes     = 1338781776
max mmap regions =          1
max mmap bytes   =  118239232
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1428.1 sec
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.073539 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1575378944
in use bytes     = 1338781936
Total (incl. mmap):
system bytes     = 1575378944
in use bytes     = 1338781936
max mmap regions =          1
max mmap bytes   =  118239232
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -cubic -1Dmatrix_save mat.r04.vr.aff12.1D pb02.sub-S27.r04.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.073539 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S27.r04.tshift+orig.BRIK is 10.971511 degrees from plumb.
++ centers of base and input datasets are 0.57 mm apart
++ Reading input dataset ./pb02.sub-S27.r04.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44912 voxels
 + 6162 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.186  pitch=+0.144  yaw=+0.236  dS=-1.255  dL=-0.228  dP=-0.719
++ Mean: roll=-0.124  pitch=+0.293  yaw=+0.395  dS=-0.800  dL=-0.157  dP=-0.604
++ Max : roll=-0.060  pitch=+0.451  yaw=+0.498  dS=-0.328  dL=-0.041  dP=-0.481
++ Max displacements (mm) for each sub-brick:
 1.19(0.00) 1.15(0.10) 1.10(0.07) 1.17(0.12) 1.10(0.16) 1.16(0.15) 1.09(0.13) 1.16(0.11) 1.13(0.06) 1.14(0.02) 1.12(0.02) 1.13(0.07) 1.14(0.07) 1.12(0.07) 1.17(0.10) 1.15(0.04) 1.20(0.09) 1.12(0.19) 1.13(0.07) 1.21(0.21) 1.11(0.23) 1.18(0.14) 1.15(0.04) 1.19(0.06) 1.13(0.08) 1.20(0.11) 1.12(0.12) 1.21(0.15) 1.11(0.18) 1.20(0.15) 1.18(0.06) 1.18(0.06) 1.29(0.18) 1.21(0.17) 1.10(0.19) 1.22(0.26) 1.19(0.06) 1.18(0.07) 1.20(0.06) 1.18(0.07) 1.24(0.09) 1.21(0.07) 1.24(0.04) 1.20(0.08) 1.24(0.08) 1.26(0.07) 1.27(0.06) 1.17(0.23) 1.25(0.18) 1.23(0.07) 1.19(0.08) 1.25(0.14) 1.27(0.06) 1.20(0.13) 1.26(0.12) 1.23(0.07) 1.29(0.09) 1.24(0.09) 1.20(0.07) 1.32(0.22) 1.32(0.06) 1.24(0.11) 1.34(0.14) 1.34(0.04) 1.32(0.04) 1.33(0.02) 1.29(0.06) 1.20(0.13) 1.37(0.28) 1.29(0.14) 1.18(0.19) 1.37(0.32) 1.33(0.08) 1.29(0.07) 1.37(0.13) 1.29(0.11) 1.37(0.10) 1.26(0.17) 1.34(0.14) 1.27(0.11) 1.30(0.06) 1.34(0.08) 1.27(0.10) 1.46(0.27) 1.41(0.09) 1.37(0.07) 1.24(0.20) 1.38(0.25) 1.30(0.13) 1.37(0.10) 1.50(0.18) 1.33(0.23) 1.39(0.06) 1.35(0.05) 1.40(0.13) 1.32(0.12) 1.42(0.16) 1.48(0.10) 1.45(0.05) 1.26(0.31) 1.39(0.24) 1.40(0.04) 1.38(0.07) 1.53(0.22) 1.31(0.34) 1.41(0.19) 1.42(0.05) 1.33(0.13) 1.50(0.24) 1.53(0.08) 1.41(0.16) 1.46(0.07) 1.34(0.18) 1.42(0.14) 1.41(0.06) 1.42(0.04) 1.42(0.01) 1.31(0.16) 1.47(0.23) 1.34(0.18) 1.44(0.15) 1.42(0.08) 1.49(0.07) 1.46(0.06) 1.44(0.07) 1.54(0.14) 1.52(0.05) 1.38(0.22) 1.69(0.40) 1.53(0.21) 1.40(0.23) 1.51(0.20) 1.38(0.18) 1.53(0.21) 1.44(0.13) 1.59(0.20) 1.66(0.11) 1.55(0.17) 1.46(0.13) 1.65(0.27) 1.60(0.07) 1.46(0.22) 1.61(0.20) 1.48(0.16) 1.65(0.21) 1.64(0.05) 1.52(0.18) 1.65(0.17) 1.49(0.23) 1.53(0.10) 1.59(0.10) 1.53(0.11) 1.67(0.21) 1.53(0.19) 1.65(0.15) 1.68(0.09) 1.58(0.15) 1.52(0.10) 1.66(0.22) 1.56(0.13) 1.47(0.17) 1.63(0.21) 1.49(0.18) 1.66(0.24) 1.63(0.08) 1.70(0.11) 1.61(0.13) 1.56(0.06) 1.76(0.27) 1.73(0.08) 1.53(0.29) 1.65(0.17) 1.69(0.08) 1.53(0.24) 1.75(0.31) 1.71(0.06) 1.55(0.26) 1.74(0.26) 1.59(0.19) 1.66(0.09) 1.77(0.17) 1.62(0.23) 1.78(0.23) 1.78(0.05) 1.58(0.28) 1.65(0.11) 1.83(0.23) 1.64(0.24) 1.66(0.08) 1.77(0.17) 1.64(0.19) 1.65(0.05) 1.80(0.21) 1.70(0.15) 1.59(0.17) 1.79(0.29) 1.65(0.18) 1.73(0.10) 1.75(0.06) 1.59(0.28) 1.73(0.23) 1.67(0.07) 1.66(0.05) 1.81(0.22) 1.66(0.22) 1.78(0.17) 1.82(0.08) 1.64(0.27) 1.65(0.03) 1.83(0.25) 1.77(0.09) 1.66(0.17) 1.82(0.21) 1.71(0.12) 1.79(0.09) 1.84(0.09) 1.62(0.32) 1.68(0.12) 1.93(0.34) 1.72(0.29) 1.79(0.07) 1.90(0.20) 1.65(0.35) 1.67(0.05) 1.84(0.26) 1.64(0.30) 1.79(0.21) 1.87(0.12) 1.69(0.25) 1.81(0.16) 1.81(0.04) 1.66(0.21) 1.81(0.19) 1.73(0.09) 1.67(0.12) 1.85(0.25) 1.71(0.20) 1.72(0.04) 1.83(0.18) 1.69(0.21) 1.86(0.22) 1.82(0.05) 1.67(0.22) 1.87(0.27) 1.85(0.06) 1.66(0.28) 1.87(0.27) 1.79(0.10) 1.67(0.18) 1.90(0.31) 1.71(0.24) 1.76(0.05) 1.91(0.22) 1.73(0.25) 1.92(0.23) 1.82(0.12) 1.69(0.19) 1.97(0.38) 1.83(0.20) 1.74(0.14) 1.91(0.26) 1.75(0.22) 1.94(0.22) 1.86(0.08) 1.78(0.13) 1.91(0.18) 1.86(0.08) 1.98(0.15) 1.82(0.19) 1.91(0.10) 1.85(0.08) 1.70(0.18) 2.00(0.37) 1.82(0.23) 1.84(0.07) 1.76(0.10) 1.80(0.11) 1.90(0.15) 1.88(0.07) 2.07(0.26) 1.97(0.13) 1.86(0.14) 2.01(0.20) 1.97(0.05) 1.83(0.20) 1.97(0.18) 2.03(0.08) 1.94(0.13) 1.77(0.19) 2.01(0.30) 1.94(0.08) 1.88(0.09) 2.05(0.22) 1.96(0.12) 1.73(0.30) 1.82(0.17) 1.77(0.14) 1.90(0.17) 1.88(0.11) 1.91(0.05) 2.08(0.22) 1.90(0.24) 1.84(0.07) 1.93(0.12) 1.98(0.06) 1.88(0.14) 1.81(0.09) 1.99(0.23) 1.89(0.13) 1.90(0.02) 1.96(0.08) 1.78(0.26) 1.93(0.20) 1.87(0.07) 1.84(0.05) 2.07(0.29) 1.89(0.27) 1.88(0.04) 2.06(0.23) 1.99(0.10) 1.89(0.11) 2.04(0.18) 1.96(0.09) 1.84(0.17) 2.02(0.23) 1.92(0.11) 1.84(0.14) 2.08(0.33) 1.92(0.21) 1.89(0.06) 2.11(0.30) 1.95(0.22) 2.07(0.16) 2.05(0.03) 1.85(0.28) 2.07(0.28) 2.07(0.05) 1.85(0.31) 2.06(0.27) 2.12(0.11) 2.01(0.16) 2.23(0.34) 1.94(0.39) 1.88(0.12) 2.16(0.40) 2.12(0.07) 1.92(0.26) 2.05(0.18) 2.15(0.13) 1.96(0.25) 2.01(0.07) 2.18(0.22) 2.14(0.08) 1.99(0.19) 1.99(0.05) 2.17(0.22) 2.11(0.07) 1.94(0.21) 2.10(0.19) 2.08(0.07) 1.91(0.22) 2.09(0.23) 2.12(0.04) 1.89(0.30) 2.08(0.26) 2.05(0.04) 1.81(0.32) 2.12(0.41) 1.98(0.20) 2.19(0.26) 2.06(0.17) 2.04(0.03) 2.20(0.22) 2.00(0.26) 2.01(0.07) 2.19(0.23) 2.09(0.14) 1.99(0.11) 2.15(0.20) 2.17(0.04) 2.05(0.16) 2.03(0.04) 2.16(0.15) 2.18(0.04) 2.03(0.20) 1.97(0.09) 2.13(0.23) 1.95(0.26) 2.22(0.33) 2.15(0.09) 1.99(0.19) 2.23(0.32) 2.08(0.23) 2.07(0.08) 2.27(0.26) 2.12(0.21) 2.23(0.15) 2.14(0.12) 2.13(0.02) 2.17(0.06) 2.11(0.08) 2.22(0.13) 2.20(0.03) 2.18(0.05) 2.11(0.08) 2.20(0.11) 2.09(0.14) 2.06(0.04) 2.21(0.20) 2.06(0.22) 2.09(0.08) 2.18(0.10)
++ Max displacement in automask = 2.27 (mm) at sub-brick 394
++ Max delta displ  in automask = 0.41 (mm) at sub-brick 367
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb02.sub-S27.r04.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S27.aff12.1D anatSS.sub-S27_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source pb02.sub-S27.r04.tshift+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r04.warp.aff12.1D -prefix rm.epi.nomask.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S27.r04.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S27.r04.tshift+orig.BRIK is 10.971511 degrees from plumb.
++ opened source dataset 'pb02.sub-S27.r04.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1558794240
in use bytes     = 1322202960
Total (incl. mmap):
system bytes     = 1558794240
in use bytes     = 1322202960
max mmap regions =          1
max mmap bytes   =  118239232
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r04+tlrc.BRIK
++ total Elapsed time = 1993.6 sec
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r04.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.971511 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1558794240
in use bytes     = 1322203120
Total (incl. mmap):
system bytes     = 1558794240
in use bytes     = 1322203120
max mmap regions =          1
max mmap bytes   =  118239232
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r05.1D -prefix rm.epi.volreg.r05 -cubic -1Dmatrix_save mat.r05.vr.aff12.1D pb02.sub-S27.r05.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.073539 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S27.r05.tshift+orig.BRIK is 10.971511 degrees from plumb.
++ centers of base and input datasets are 0.57 mm apart
++ Reading input dataset ./pb02.sub-S27.r05.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 45019 voxels
 + 6216 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.142  pitch=+0.793  yaw=+0.319  dS=-1.952  dL=-0.155  dP=-0.861
++ Mean: roll=-0.059  pitch=+0.944  yaw=+0.494  dS=-1.499  dL=-0.090  dP=-0.721
++ Max : roll=+0.008  pitch=+1.037  yaw=+0.637  dS=-1.158  dL=+0.020  dP=-0.602
++ Max displacements (mm) for each sub-brick:
 2.97(0.00) 2.90(0.21) 2.76(0.17) 2.84(0.11) 2.95(0.13) 2.77(0.21) 2.91(0.17) 2.92(0.03) 2.88(0.05) 2.69(0.22) 2.83(0.21) 2.79(0.08) 2.89(0.11) 2.82(0.08) 2.89(0.09) 2.85(0.06) 2.93(0.08) 2.77(0.19) 2.97(0.26) 2.89(0.11) 3.00(0.12) 2.94(0.08) 2.94(0.04) 2.94(0.03) 3.01(0.07) 2.99(0.04) 2.99(0.02) 2.89(0.12) 2.87(0.06) 3.03(0.19) 3.00(0.05) 2.98(0.06) 2.95(0.03) 3.09(0.17) 3.09(0.03) 3.08(0.02) 3.07(0.02) 3.09(0.02) 2.97(0.18) 2.91(0.07) 3.03(0.14) 2.92(0.13) 3.01(0.09) 2.93(0.08) 3.09(0.18) 2.96(0.17) 3.46(0.55) 3.30(0.23) 3.24(0.07) 3.31(0.11) 3.13(0.24) 3.26(0.19) 3.16(0.13) 3.22(0.09) 3.24(0.07) 3.27(0.06) 3.15(0.14) 3.21(0.08) 3.34(0.16) 3.16(0.23) 3.10(0.07) 3.28(0.23) 3.21(0.09) 3.24(0.03) 3.12(0.13) 3.22(0.13) 3.23(0.02) 3.14(0.13) 3.17(0.08) 3.22(0.06) 3.21(0.05) 3.28(0.09) 3.18(0.13) 3.28(0.13) 3.15(0.15) 3.27(0.14) 3.23(0.05) 3.29(0.08) 3.16(0.16) 3.12(0.05) 3.27(0.17) 3.21(0.09) 3.20(0.04) 3.15(0.06) 3.28(0.14) 3.15(0.17) 3.34(0.23) 3.17(0.20) 3.30(0.16) 3.21(0.11) 3.25(0.04) 3.29(0.05) 3.28(0.05) 3.17(0.13) 3.27(0.13) 3.26(0.04) 3.29(0.08) 3.31(0.02) 3.33(0.03) 3.24(0.10) 3.30(0.09) 3.30(0.02) 3.26(0.07) 3.05(0.24) 3.24(0.27) 3.17(0.10) 3.17(0.06) 3.26(0.12) 3.22(0.06) 3.30(0.10) 3.21(0.10) 3.33(0.13) 3.26(0.07) 3.29(0.07) 3.29(0.04) 3.37(0.10) 3.31(0.09) 3.20(0.12) 3.34(0.16) 3.19(0.19) 3.33(0.17) 3.23(0.12) 3.29(0.08) 3.31(0.03) 3.21(0.12) 3.41(0.22) 3.40(0.02) 3.39(0.02) 3.41(0.02) 3.36(0.06) 3.27(0.09) 3.31(0.05) 3.15(0.18) 3.34(0.24) 3.22(0.16) 3.33(0.15) 3.31(0.05) 3.21(0.12) 3.35(0.18) 3.34(0.04) 3.35(0.02) 3.31(0.04) 3.34(0.05) 3.25(0.09) 3.36(0.14) 3.36(0.07) 3.28(0.11) 3.31(0.08) 3.36(0.06) 3.27(0.13) 3.40(0.17) 3.40(0.05) 3.29(0.14) 3.37(0.10) 3.29(0.09) 3.35(0.09) 3.37(0.03) 3.21(0.20) 3.36(0.19) 3.30(0.07) 3.36(0.06) 3.35(0.02) 3.29(0.10) 3.14(0.21) 3.41(0.37) 3.41(0.05) 3.42(0.12) 3.38(0.10) 3.44(0.09) 3.26(0.23) 3.37(0.15) 3.40(0.04) 3.37(0.08) 3.29(0.08) 3.46(0.20) 3.39(0.11) 3.29(0.11) 3.46(0.22) 3.40(0.07) 3.40(0.04) 3.29(0.13) 3.43(0.17) 3.27(0.19) 3.36(0.14) 3.32(0.10) 3.31(0.09) 3.44(0.16) 3.43(0.05) 3.42(0.01) 3.26(0.19) 3.39(0.16) 3.32(0.09) 3.32(0.03) 3.45(0.15) 3.20(0.31) 3.22(0.08) 3.38(0.20) 2.99(0.53) 3.05(0.17) 3.37(0.44) 3.25(0.22) 3.23(0.05) 3.38(0.20) 3.34(0.10) 3.30(0.04) 3.28(0.02) 3.30(0.02) 3.29(0.02) 3.28(0.01) 3.30(0.05) 3.20(0.12) 3.31(0.15) 3.30(0.09) 3.34(0.06) 3.31(0.04) 3.37(0.08) 3.20(0.20) 3.38(0.22) 3.26(0.16) 3.11(0.19) 3.30(0.27) 3.20(0.15) 3.31(0.13) 3.22(0.11) 3.37(0.17) 3.30(0.08) 3.36(0.08) 3.47(0.14) 3.36(0.14) 3.26(0.11) 3.35(0.10) 3.28(0.08) 3.40(0.13) 3.35(0.06) 3.46(0.14) 3.27(0.22) 3.42(0.18) 3.33(0.11) 3.20(0.15) 3.43(0.29) 3.33(0.13) 3.38(0.09) 3.30(0.10) 3.36(0.15) 3.33(0.04) 3.15(0.25) 3.31(0.21) 3.19(0.15) 3.30(0.13) 3.26(0.08) 3.33(0.08) 3.29(0.08) 3.39(0.13) 3.31(0.11) 3.38(0.08) 3.30(0.11) 3.41(0.15) 3.34(0.10) 3.40(0.08) 3.32(0.10) 3.43(0.13) 3.35(0.09) 3.31(0.04) 3.48(0.19) 3.30(0.22) 3.39(0.11) 3.46(0.09) 3.47(0.06) 3.46(0.03) 3.47(0.02) 3.34(0.17) 3.45(0.14) 3.49(0.07) 3.31(0.23) 3.36(0.07) 3.43(0.08) 3.30(0.15) 3.52(0.26) 3.50(0.03) 3.36(0.19) 3.42(0.10) 3.49(0.09) 3.39(0.14) 3.58(0.24) 3.43(0.18) 3.41(0.02) 3.50(0.10) 3.35(0.18) 3.47(0.15) 3.39(0.11) 3.48(0.11) 3.38(0.11) 3.51(0.20) 3.53(0.18) 3.51(0.09) 3.32(0.24) 3.45(0.14) 3.28(0.21) 3.39(0.15) 3.37(0.09) 3.34(0.05) 3.50(0.19) 3.44(0.07) 3.49(0.08) 3.40(0.10) 3.54(0.18) 3.58(0.10) 3.37(0.25) 3.25(0.16) 3.53(0.32) 3.45(0.11) 3.26(0.25) 3.43(0.23) 3.35(0.11) 3.50(0.17) 3.42(0.10) 3.41(0.03) 3.54(0.18) 3.38(0.19) 3.51(0.15) 3.47(0.04) 3.42(0.07) 3.53(0.15) 3.44(0.11) 3.23(0.25) 3.46(0.27) 3.41(0.07) 3.46(0.11) 3.55(0.14) 3.33(0.27) 3.41(0.10) 3.48(0.12) 3.24(0.30) 3.44(0.27) 3.32(0.16) 3.38(0.07) 3.46(0.11) 3.37(0.12) 3.55(0.22) 3.48(0.09) 3.35(0.17) 3.50(0.20) 3.54(0.08) 3.32(0.26) 3.30(0.08) 3.42(0.14) 3.33(0.13) 3.47(0.16) 3.36(0.14) 3.45(0.11) 3.34(0.14) 3.49(0.19) 3.43(0.08) 3.40(0.05) 3.56(0.21) 3.55(0.07) 3.45(0.12) 3.50(0.08) 3.53(0.04) 3.41(0.15) 3.44(0.08) 3.53(0.10) 3.31(0.27) 3.45(0.17) 3.25(0.24) 3.38(0.18) 3.36(0.06) 3.40(0.04) 3.58(0.21) 3.43(0.19) 3.66(0.25) 3.45(0.24) 3.42(0.03) 3.61(0.22) 3.61(0.07) 3.52(0.11) 3.53(0.04) 3.59(0.08) 3.48(0.12) 3.56(0.11) 3.54(0.03) 3.36(0.22) 3.57(0.25) 3.53(0.17) 3.35(0.20) 3.51(0.24) 3.39(0.14) 3.58(0.19) 3.40(0.20) 3.63(0.27) 3.56(0.09) 3.46(0.11) 3.64(0.21) 3.55(0.11) 3.48(0.07) 3.61(0.16) 3.62(0.07) 3.63(0.04) 3.47(0.18) 3.58(0.15) 3.65(0.08) 3.47(0.20) 3.49(0.04) 3.59(0.12) 3.44(0.19) 3.55(0.13) 3.57(0.05) 3.39(0.24) 3.56(0.21) 3.55(0.03) 3.42(0.17) 3.64(0.26)
++ Max displacement in automask = 3.66 (mm) at sub-brick 370
++ Max delta displ  in automask = 0.55 (mm) at sub-brick 46
++ Wrote dataset to disk in ./rm.epi.volreg.r05+orig.BRIK
3dcalc -overwrite -a pb02.sub-S27.r05.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S27.aff12.1D anatSS.sub-S27_al_junk_mat.aff12.1D -I mat.r05.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source pb02.sub-S27.r05.tshift+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r05.warp.aff12.1D -prefix rm.epi.nomask.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S27.r05.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S27.r05.tshift+orig.BRIK is 10.971511 degrees from plumb.
++ opened source dataset 'pb02.sub-S27.r05.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1558794240
in use bytes     = 1322202960
Total (incl. mmap):
system bytes     = 1558794240
in use bytes     = 1322202960
max mmap regions =          1
max mmap bytes   =  118239232
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r05+tlrc.BRIK
++ total Elapsed time = 1989.0 sec
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r05.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.971511 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1558794240
in use bytes     = 1322203120
Total (incl. mmap):
system bytes     = 1558794240
in use bytes     = 1322203120
max mmap regions =          1
max mmap bytes   =  118239232
3dTstat -min -prefix rm.epi.min.r05 rm.epi.1.r05+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r05+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r06.1D -prefix rm.epi.volreg.r06 -cubic -1Dmatrix_save mat.r06.vr.aff12.1D pb02.sub-S27.r06.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.073539 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S27.r06.tshift+orig.BRIK is 10.971547 degrees from plumb.
++ centers of base and input datasets are 0.57 mm apart
++ Reading input dataset ./pb02.sub-S27.r06.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44888 voxels
 + 6174 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.332  pitch=-0.324  yaw=+0.250  dS=-0.584  dL=-0.510  dP=-0.390
++ Mean: roll=-0.249  pitch=-0.103  yaw=+0.319  dS=-0.125  dL=-0.412  dP=-0.241
++ Max : roll=-0.189  pitch=+0.148  yaw=+0.371  dS=+0.223  dL=-0.297  dP=-0.091
++ Max displacements (mm) for each sub-brick:
 1.22(0.00) 1.12(0.14) 1.16(0.09) 1.07(0.23) 1.12(0.15) 1.13(0.05) 1.18(0.10) 1.11(0.19) 1.10(0.03) 1.13(0.06) 1.20(0.18) 1.13(0.23) 1.15(0.08) 1.22(0.16) 1.14(0.25) 1.19(0.13) 1.16(0.10) 1.20(0.12) 1.20(0.05) 1.22(0.10) 1.18(0.20) 1.16(0.04) 1.26(0.22) 1.23(0.06) 1.17(0.25) 1.18(0.09) 1.24(0.16) 1.20(0.14) 1.20(0.05) 1.19(0.07) 1.24(0.15) 1.22(0.09) 1.22(0.06) 1.22(0.08) 1.21(0.08) 1.20(0.05) 1.27(0.15) 1.24(0.07) 1.22(0.12) 1.27(0.15) 1.20(0.24) 1.24(0.12) 1.20(0.15) 1.24(0.13) 1.21(0.11) 1.22(0.02) 1.21(0.07) 1.22(0.11) 1.23(0.03) 1.23(0.03) 1.26(0.07) 1.21(0.21) 1.27(0.19) 1.29(0.07) 1.21(0.20) 1.22(0.10) 1.26(0.08) 1.32(0.19) 1.22(0.33) 1.23(0.07) 1.23(0.01) 1.20(0.10) 1.19(0.07) 1.20(0.09) 1.20(0.09) 1.14(0.22) 1.15(0.08) 1.31(0.29) 1.27(0.16) 1.35(0.22) 1.29(0.21) 1.32(0.16) 1.29(0.11) 1.28(0.11) 1.35(0.10) 1.29(0.26) 1.35(0.29) 1.30(0.19) 1.30(0.07) 1.32(0.07) 1.28(0.15) 1.32(0.18) 1.29(0.15) 1.28(0.05) 1.23(0.11) 1.18(0.06) 1.18(0.03) 1.26(0.21) 1.32(0.11) 1.23(0.26) 1.31(0.26) 1.25(0.14) 1.19(0.20) 1.25(0.27) 1.24(0.13) 1.23(0.12) 1.20(0.10) 1.19(0.11) 1.16(0.12) 1.15(0.06) 1.27(0.29) 1.20(0.29) 1.24(0.19) 1.24(0.10) 1.14(0.26) 1.15(0.19) 1.13(0.24) 1.10(0.08) 1.14(0.13) 1.20(0.19) 1.13(0.30) 1.07(0.09) 1.17(0.27) 1.14(0.21) 1.14(0.15) 1.11(0.26) 1.08(0.07) 1.09(0.12) 1.13(0.06) 1.11(0.05) 1.13(0.10) 1.12(0.10) 1.11(0.09) 1.14(0.04) 1.14(0.05) 1.15(0.05) 1.14(0.11) 1.15(0.16) 1.16(0.27) 1.14(0.21) 1.15(0.06) 1.15(0.16) 1.14(0.06) 1.12(0.07) 1.10(0.08) 1.06(0.15) 1.04(0.03) 1.13(0.35) 1.13(0.20) 1.10(0.12) 1.10(0.16) 1.09(0.14) 1.06(0.08) 1.06(0.19) 1.10(0.18) 1.07(0.08) 1.09(0.14) 1.14(0.27) 1.11(0.25) 1.09(0.11) 1.09(0.11) 1.09(0.07) 1.11(0.06) 1.11(0.08) 1.11(0.06) 1.11(0.13) 1.11(0.16) 1.12(0.17) 1.10(0.18) 1.12(0.16) 1.11(0.04) 1.12(0.08) 1.09(0.14) 1.13(0.14) 1.11(0.02) 1.11(0.07) 1.11(0.13) 1.12(0.18) 1.13(0.17) 1.12(0.23) 1.15(0.16) 1.16(0.31) 1.15(0.16) 1.15(0.05) 1.15(0.08) 1.14(0.17) 1.15(0.25) 1.14(0.05) 1.13(0.24) 1.15(0.15) 1.14(0.10) 1.14(0.10) 1.13(0.21) 1.14(0.25) 1.12(0.08) 1.13(0.10) 1.16(0.25) 1.15(0.09) 1.16(0.09) 1.15(0.14) 1.16(0.21) 1.15(0.15) 1.19(0.18) 1.13(0.14) 1.16(0.10) 1.17(0.11) 1.13(0.14) 1.17(0.09) 1.14(0.24) 1.16(0.16) 1.15(0.11) 1.12(0.12) 1.15(0.15) 1.15(0.06) 1.18(0.03) 1.14(0.23) 1.17(0.13) 1.16(0.05) 1.17(0.05) 1.19(0.19) 1.14(0.21) 1.15(0.27) 1.17(0.10) 1.09(0.26) 1.09(0.07) 1.13(0.20) 1.10(0.07) 1.11(0.10) 1.12(0.05) 1.11(0.04) 1.12(0.03) 1.12(0.04) 1.10(0.08) 1.14(0.16) 1.07(0.16) 1.16(0.24) 1.08(0.15) 1.10(0.22) 1.12(0.19) 1.08(0.13) 1.14(0.16) 1.09(0.17) 1.18(0.27) 1.13(0.13) 1.09(0.13) 1.17(0.29) 1.25(0.20) 1.13(0.30) 1.17(0.12) 1.13(0.09) 1.15(0.03) 1.21(0.18) 1.14(0.16) 1.21(0.17) 1.21(0.04) 1.17(0.11) 1.20(0.07) 1.16(0.07) 1.18(0.04) 1.22(0.09) 1.16(0.16) 1.20(0.14) 1.22(0.12) 1.14(0.35) 1.22(0.16) 1.18(0.08) 1.19(0.07) 1.23(0.17) 1.20(0.17) 1.30(0.30) 1.21(0.18) 1.29(0.16) 1.25(0.05) 1.20(0.12) 1.23(0.08) 1.17(0.14) 1.26(0.16) 1.25(0.03) 1.21(0.11) 1.15(0.12) 1.24(0.20) 1.19(0.12) 1.26(0.16) 1.19(0.12) 1.27(0.20) 1.18(0.10) 1.26(0.09) 1.17(0.13) 1.19(0.15) 1.27(0.23) 1.19(0.19) 1.31(0.23) 1.28(0.03) 1.20(0.21) 1.35(0.28) 1.28(0.09) 1.20(0.21) 1.31(0.21) 1.33(0.11) 1.18(0.27) 1.26(0.11) 1.29(0.08) 1.19(0.22) 1.32(0.28) 1.24(0.12)
++ Max displacement in automask = 1.35 (mm) at sub-brick 76
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 253
++ Wrote dataset to disk in ./rm.epi.volreg.r06+orig.BRIK
3dcalc -overwrite -a pb02.sub-S27.r06.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S27.aff12.1D anatSS.sub-S27_al_junk_mat.aff12.1D -I mat.r06.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S27+tlrc -dxyz 3 -source pb02.sub-S27.r06.tshift+orig -nwarp anatQQ.sub-S27_WARP.nii mat.r06.warp.aff12.1D -prefix rm.epi.nomask.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S27+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S27.r06.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S27.r06.tshift+orig.BRIK is 10.971547 degrees from plumb.
++ opened source dataset 'pb02.sub-S27.r06.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1558753280
in use bytes     = 1322157648
Total (incl. mmap):
system bytes     = 1558753280
in use bytes     = 1322157648
max mmap regions =          1
max mmap bytes   =  118239232
++ Warping:.................................