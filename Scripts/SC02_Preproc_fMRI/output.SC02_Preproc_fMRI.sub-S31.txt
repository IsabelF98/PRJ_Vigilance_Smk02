echo auto-generated by afni_proc.py, Mon Nov 16 13:27:49 2020
auto-generated by afni_proc.py, Mon Nov 16 13:27:49 2020
echo (version 7.12, April 14, 2020)
(version 7.12, April 14, 2020)
echo execution started: `date`
date
execution started: Mon Nov 16 14:01:37 EST 2020
afni -ver
Precompiled binary linux_centos_7_64: Nov 12 2020 (Version AFNI_20.3.02 'Vespasian')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   12 Nov 2020
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-S31
endif
set output_dir = /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI
if ( -d /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/stimuli
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D01_Anatomical/anatSS.sub-S31.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/anatSS.sub-S31
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D01_Anatomical/anatUAC.sub-S31.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/copy_af_anat_w_skull
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S31/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S31/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S31/SUMA/fs_ap_latvent.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S31/SUMA/fs_ap_wm.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D01_Anatomical/anatQQ.sub-S31.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/anatQQ.sub-S31
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D01_Anatomical/anatQQ.sub-S31.aff12.1D /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/anatQQ.sub-S31.aff12.1D
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D01_Anatomical/anatQQ.sub-S31_WARP.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/anatQQ.sub-S31_WARP.nii
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/pb00.sub-S31.r01.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D00_OriginalData/sub-S31_SleepAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/pb00.sub-S31.r02.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D00_OriginalData/sub-S31_SleepDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/pb00.sub-S31.r03.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D00_OriginalData/sub-S31_SleepRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/pb00.sub-S31.r04.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D00_OriginalData/sub-S31_WakeAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/pb00.sub-S31.r05.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D00_OriginalData/sub-S31_WakeDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI/pb00.sub-S31.r06.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D00_OriginalData/sub-S31_WakeRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
set tr_counts = ( 412 412 295 412 412 295 )
cd /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S31/D02_Preproc_fMRI
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.sub-S31.r01.tcat+orig.HEAD pb00.sub-S31.r02.tcat+orig.HEAD pb00.sub-S31.r03.tcat+orig.HEAD pb00.sub-S31.r04.tcat+orig.HEAD pb00.sub-S31.r05.tcat+orig.HEAD pb00.sub-S31.r06.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.747056 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r01.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r01.automask+orig.BRIK is 12.747056 degrees from plumb.

-- running correlation on dataset pb00.sub-S31.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.747056 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r01+orig.BRIK is 12.747056 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r01+orig.BRIK is 12.747056 degrees from plumb.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.747056 degrees from plumb.
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.747056 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r02.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r02.automask+orig.BRIK is 12.747056 degrees from plumb.

-- running correlation on dataset pb00.sub-S31.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.747056 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r02+orig.BRIK is 12.747056 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r02+orig.BRIK is 12.747056 degrees from plumb.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.747056 degrees from plumb.
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.747056 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r03.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r03.automask+orig.BRIK is 12.747056 degrees from plumb.

-- running correlation on dataset pb00.sub-S31.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.747056 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r03+orig.BRIK is 12.747056 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r03+orig.BRIK is 12.747056 degrees from plumb.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.747056 degrees from plumb.
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 10.125178 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r04.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r04.automask+orig.BRIK is 10.125178 degrees from plumb.

-- running correlation on dataset pb00.sub-S31.r04.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 10.125178 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r04+orig.BRIK is 10.125178 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r04+orig.BRIK is 10.125178 degrees from plumb.
++ Oblique dataset:./epi.r04+orig.BRIK is 10.125178 degrees from plumb.
++ Wrote dataset: ./radcor.20.r04.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 10.125178 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r05.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r05.automask+orig.BRIK is 10.125178 degrees from plumb.

-- running correlation on dataset pb00.sub-S31.r05.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 10.125178 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r05+orig.BRIK is 10.125178 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r05+orig.BRIK is 10.125178 degrees from plumb.
++ Oblique dataset:./epi.r05+orig.BRIK is 10.125178 degrees from plumb.
++ Wrote dataset: ./radcor.20.r05.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 10.125197 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r06.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r06.automask+orig.BRIK is 10.125197 degrees from plumb.

-- running correlation on dataset pb00.sub-S31.r06.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 10.125197 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r06+orig.BRIK is 10.125197 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r06+orig.BRIK is 10.125197 degrees from plumb.
++ Oblique dataset:./epi.r06+orig.BRIK is 10.125197 degrees from plumb.
++ Wrote dataset: ./radcor.20.r06.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S31.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r01.tcat+orig.BRIK is 12.747056 degrees from plumb.
++ 40243 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S31.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r02.tcat+orig.BRIK is 12.747056 degrees from plumb.
++ 40197 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S31.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r03.tcat+orig.BRIK is 12.747056 degrees from plumb.
++ 40070 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S31.r04.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r04.tcat+orig.BRIK is 10.125178 degrees from plumb.
++ 40065 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S31.r05.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r05.tcat+orig.BRIK is 10.125178 degrees from plumb.
++ 40077 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S31.r06.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r06.tcat+orig.BRIK is 10.125197 degrees from plumb.
++ 40130 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dDespike -NEW -nomask -prefix pb01.sub-S31.r01.despike pb00.sub-S31.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r01.tcat+orig.BRIK is 12.747056 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S31.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #9
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #5
++ start OpenMP thread #13
++ start OpenMP thread #11
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #2
++ start OpenMP thread #7
++ start OpenMP thread #12
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 63ms

++ FINAL: 53157888 data points, 2130836 edits [4.009%], 224550 big edits [0.422%]
++ Output dataset ./pb01.sub-S31.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S31.r02.despike pb00.sub-S31.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r02.tcat+orig.BRIK is 12.747056 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S31.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #9
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #6
++ start OpenMP thread #13
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #8
++ start OpenMP thread #11
++ start OpenMP thread #7
........................................................
++ Elapsed despike time =  1s 190ms

++ FINAL: 53157888 data points, 1978842 edits [3.723%], 120586 big edits [0.227%]
++ Output dataset ./pb01.sub-S31.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S31.r03.despike pb00.sub-S31.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r03.tcat+orig.BRIK is 12.747056 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S31.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #7
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #11
++ start OpenMP thread #14
++ start OpenMP thread #13
++ start OpenMP thread #8
++ start OpenMP thread #5
++ start OpenMP thread #10
++ start OpenMP thread #4
++ start OpenMP thread #2
++ start OpenMP thread #9
++ start OpenMP thread #3
........................................................
++ Elapsed despike time =  756ms

++ FINAL: 38062080 data points, 1504006 edits [3.951%], 122949 big edits [0.323%]
++ Output dataset ./pb01.sub-S31.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S31.r04.despike pb00.sub-S31.r04.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r04.tcat+orig.BRIK is 10.125178 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S31.r04.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #13
++ start OpenMP thread #12
++ start OpenMP thread #7
++ start OpenMP thread #8
++ start OpenMP thread #4
++ start OpenMP thread #10
++ start OpenMP thread #14
++ start OpenMP thread #11
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #6
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 168ms

++ FINAL: 53157888 data points, 2526540 edits [4.753%], 320422 big edits [0.603%]
++ Output dataset ./pb01.sub-S31.r04.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S31.r05.despike pb00.sub-S31.r05.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r05.tcat+orig.BRIK is 10.125178 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S31.r05.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #14
++ start OpenMP thread #12
++ start OpenMP thread #2
++ start OpenMP thread #6
++ start OpenMP thread #7
++ start OpenMP thread #8
++ start OpenMP thread #4
++ start OpenMP thread #9
++ start OpenMP thread #10
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #11
........................................................
++ Elapsed despike time =  1s 243ms

++ FINAL: 53157888 data points, 2035714 edits [3.830%], 158996 big edits [0.299%]
++ Output dataset ./pb01.sub-S31.r05.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S31.r06.despike pb00.sub-S31.r06.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S31.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S31.r06.tcat+orig.BRIK is 10.125197 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S31.r06.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #11
++ start OpenMP thread #5
++ start OpenMP thread #7
++ start OpenMP thread #12
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #8
++ start OpenMP thread #2
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #13
++ start OpenMP thread #9
++ start OpenMP thread #6
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  714ms

++ FINAL: 38062080 data points, 1442148 edits [3.789%], 83368 big edits [0.219%]
++ Output dataset ./pb01.sub-S31.r06.despike+orig.BRIK
end
foreach run ( 01 02 03 04 05 06 )
3dTshift -tzero 0 -quintic -prefix pb02.sub-S31.r01.tshift pb01.sub-S31.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S31.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S31.r01.despike+orig.BRIK is 12.747056 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S31.r02.tshift pb01.sub-S31.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S31.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S31.r02.despike+orig.BRIK is 12.747056 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S31.r03.tshift pb01.sub-S31.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S31.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S31.r03.despike+orig.BRIK is 12.747056 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S31.r04.tshift pb01.sub-S31.r04.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S31.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S31.r04.despike+orig.BRIK is 10.125178 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S31.r05.tshift pb01.sub-S31.r05.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S31.r05.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S31.r05.despike+orig.BRIK is 10.125178 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S31.r06.tshift pb01.sub-S31.r06.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S31.r06.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S31.r06.despike+orig.BRIK is 10.125197 degrees from plumb.
end
3dbucket -prefix vr_base pb02.sub-S31.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
align_epi_anat.py -anat2epi -anat anatSS.sub-S31+orig -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S31+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S31*
#Script is running (command trimmed):
  3dcopy ./anatSS.sub-S31+orig ./anatSS.sub-S31_unflipped+orig
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#Script is running (command trimmed):
  3dinfo ./anatSS.sub-S31_unflipped+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D02_Preproc_fMRI/anatSS.sub-S31_unflipped+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D02_Preproc_fMRI/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S31_unflipped+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./anatSS.sub-S31_unflipped_ob -newgrid 1.000000 ./anatSS.sub-S31_unflipped+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./anatSS.sub-S31_unflipped_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./anatSS.sub-S31_unflipped_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.747056 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 284.002380
 + Used gradual clip level = 251.099136 .. 315.819000
 + Number voxels above clip level = 40832
 + Clustering voxels ...
 + Largest cluster has 40669 voxels
 + Clustering voxels ...
 + Largest cluster has 39816 voxels
 + Filled   406 voxels in small holes; now have 40222 voxels
 + Filled     3 voxels in large holes; now have 40225 voxels
 + Clustering voxels ...
 + Largest cluster has 40223 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 90848 voxels
 + Mask now has 40224 voxels
++ 40224 voxels in the mask [out of 131072: 30.69%]
++ first  10 x-planes are zero [from R]
++ last   10 x-planes are zero [from L]
++ first   1 y-planes are zero [from P]
++ last    2 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_ts_ns+orig
#++ Applying threshold of 703.272339 on /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S31/D02_Preproc_fMRI/vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_ts_ns_wt -a ./vr_base_ts_ns+orig -expr 'min(1,(a/703.272339))'
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./anatSS.sub-S31_unflipped_ob_al_junk_wtal -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S31_unflipped_ob+orig -prefix ./anatSS.sub-S31_unflipped_ob_temp_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S31_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.747056 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.747056 degrees from plumb.
++ Source dataset: ./anatSS.sub-S31_unflipped_ob+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1510473 voxels in -source_automask+2
++ Zero-pad: ybot=7 ytop=6
++ Zero-pad: zbot=8 ztop=8
++ 40224 voxels [17.0%] in weight mask
++ Output dataset ./anatSS.sub-S31_unflipped_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 40224
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.439 38.092 22.726 (index)
 + source center of mass = 136.261 161.085 184.899 (index)
 + source-target CM = -0.372 5.086 -4.523 (xyz)
 + estimated center of mass shifts = -0.372 5.086 -4.523
++ shift param auto-range: -61.0..60.3 -68.1..78.3 -61.1..52.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.372093 .. 9.627907  center = -0.372093
 + Range param#2 [y-shift] = -4.914032 .. 15.085968  center = 5.085968
 + Range param#3 [z-shift] = -14.523216 .. 5.476784  center = -4.523216
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.372093 .. 39.627907  center = -0.372093
 + Range param#2 [y-shift] = -34.914032 .. 45.085968  center = 5.085968
 + Range param#3 [z-shift] = -44.523216 .. 35.476784  center = -4.523216
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -40.372 ..   39.628
 +       y-shift =  -34.914 ..   45.086
 +       z-shift =  -44.523 ..   35.477
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1510473 [out of 26717077] voxels
 + base mask has 53868 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=35.61 usiz=512.549
 + - copying weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 275.32 .. 1033.86; base clip 195.377 .. 715.312
 +  - versus source range 1.17306 .. 943.443; base range 0 .. 904.303
 + 35724 total points stored in 328 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o++.+-..+-+o--+.$o + - best 45 costs found:
    0 v= 0.561137:  -0.37   5.09  -4.52   0.00   0.00   0.00  [grid]
    1 v= 0.731909: -16.35 -14.41 -10.25 -20.53  -3.14  10.08  [rand]
    2 v= 0.756258:  26.29  -8.25   8.81  15.00 -15.00 -15.00  [grid]
    3 v= 0.761508:  12.96  -8.25   8.81 -15.00 -15.00 -30.00  [grid]
    4 v= 0.773125:  12.96  18.42 -17.86  15.00  15.00  15.00  [grid]
    5 v= 0.779184: -32.86  -9.61 -16.33 -11.16  -9.40  34.39  [rand]
    6 v= 0.786810:  12.96 -21.58   8.81 -15.00 -15.00 -30.00  [grid]
    7 v= 0.787457: -16.35 -14.41 -10.25 -20.53   3.14  10.08  [rand]
    8 v= 0.811036: -13.71  -8.25   8.81  15.00 -15.00  30.00  [grid]
    9 v= 0.812629: -16.35 -14.41   1.20 -20.53  -3.14  10.08  [rand]
   10 v= 0.814092: -14.58  -4.37   0.32  15.99 -13.53  29.93  [rand]
   11 v= 0.818160:  33.95 -11.50 -13.13  16.34  -8.64 -40.54  [rand]
   12 v= 0.847597:  -9.01 -15.35  12.95 -25.20 -18.50 -13.54  [rand]
   13 v= 0.850792:   8.27 -15.35  12.95  25.20 -18.50  13.54  [rand]
   14 v= 0.851369: -18.70 -21.06   1.52  -6.51 -20.18   7.56  [rand]
   15 v= 0.863557:  12.96  -8.25   8.81  30.00 -15.00  15.00  [grid]
   16 v= 0.879009: -27.04  -8.25   8.81 -15.00 -15.00  15.00  [grid]
   17 v= 0.884031: -13.71 -21.58   8.81 -30.00 -15.00 -15.00  [grid]
   18 v= 0.891612:  12.96  18.42 -17.86  15.00  15.00 -15.00  [grid]
   19 v= 0.893541:  12.96  18.42 -31.19  15.00  30.00  15.00  [grid]
   20 v= 0.896969: -27.04 -21.58 -17.86 -15.00 -15.00  30.00  [grid]
   21 v= 0.898047:  17.96 -21.06   1.52   6.51 -20.18  -7.56  [rand]
   22 v= 0.903435: -34.70 -11.50 -13.13 -16.34  -8.64  40.54  [rand]
   23 v= 0.923174:  26.29 -21.58   8.81  15.00 -30.00 -15.00  [grid]
   24 v= 0.941237: -16.35 -14.41   1.20 -20.53  -3.14 -10.08  [rand]
   25 v= 0.941465:  12.96  -8.25   8.81  15.00 -15.00 -15.00  [grid]
   26 v= 0.946789:  12.96 -21.58   8.81 -15.00 -30.00 -30.00  [grid]
   27 v= 0.949920:  12.96 -21.58   8.81 -30.00 -15.00 -30.00  [grid]
   28 v= 0.951302:  12.96  18.42 -31.19  15.00  30.00 -15.00  [grid]
   29 v= 0.954943:  25.94 -20.87  13.27 -15.82 -17.65 -37.25  [rand]
   30 v= 0.955640:  26.29  18.42 -17.86  15.00  15.00 -15.00  [grid]
   31 v= 0.959480:  12.96  18.42 -31.19  15.00  30.00  30.00  [grid]
   32 v= 0.961368:  15.61 -14.41   1.20  20.53  -3.14 -10.08  [rand]
   33 v= 0.964196:   3.71  11.31 -12.32  -4.32  22.85 -18.95  [rand]
   34 v= 0.964561: -27.04 -21.58 -17.86 -30.00 -15.00  30.00  [grid]
   35 v= 0.966376:  22.48 -18.49   5.89  -5.91 -29.74 -29.45  [rand]
   36 v= 0.975669: -13.71  18.42 -17.86 -15.00  15.00  15.00  [grid]
   37 v= 0.976146: -13.71 -21.58   8.81  15.00 -30.00  30.00  [grid]
   38 v= 0.978055: -26.68 -20.87 -22.32 -15.82 -17.65  37.25  [rand]
   39 v= 0.987244: -16.51  -4.38 -28.87 -20.99  15.73  16.09  [rand]
   40 v= 0.989877: -27.04  -8.25 -17.86 -15.00 -15.00  30.00  [grid]
   41 v= 0.991546:  13.83  -4.37   0.32 -15.99 -13.53 -29.93  [rand]
   42 v= 0.992434:  15.61 -14.41 -10.25  20.53  -3.14 -10.08  [rand]
   43 v= 0.993554: -10.70 -23.73  10.49 -30.67 -17.79 -20.52  [rand]
   44 v= 1.004392:  26.29  18.42 -17.86  15.00  15.00 -30.00  [grid]
 + - A little optimization:*[#8004=0.456876] *[#8006=0.395128] *[#8013=0.389999] *[#8014=0.38013] *[#8015=0.375469] *[#8016=0.342422] *[#8018=0.323968] *[#8019=0.26636] *[#8020=0.25973] *[#8022=0.246213] *[#8023=0.244269] *[#8024=0.215285] *[#8027=0.181139] *[#8028=0.163844] *[#8031=0.139713] *[#8032=0.133585] *[#8033=0.132615] *[#8036=0.108172] *[#8037=0.0990536] *[#8040=0.0803137] *[#8041=0.0650804] *[#8046=0.0438216] *[#8047=0.0202897] *[#8048=-0.0110426] *[#8049=-0.0487396] *[#8051=-0.0723359] *[#8055=-0.0821763] *[#8058=-0.0957618] .............................................
 + - costs of the above after a little optimization:
  * 0 v=-0.095762:  -0.87  -0.20  -0.76  -0.31   0.22   0.74  [grid]
    1 v= 0.063691:  -2.17  -1.46   1.95  -0.61  -2.17   1.99  [rand]
    2 v= 0.604254:  20.74  -7.89   1.24  10.36 -10.21 -15.46  [grid]
    3 v= 0.613935:  12.14  -9.71   2.60 -10.34  -9.11 -27.48  [grid]
    4 v= 0.601566:   3.37   8.54 -15.35  10.91   9.74  13.69  [grid]
    5 v= 0.678050: -24.18  -8.99 -15.87  -6.88  -6.78  35.55  [rand]
    6 v= 0.598203:  10.22  -6.40  -0.86  -9.03  -5.00 -26.34  [grid]
    7 v=-0.018316:  -1.25  -0.83  -0.87  -1.11   0.11   0.94  [rand]
    8 v= 0.586645:  -9.93  -2.54 -11.64   2.56  -1.77  21.81  [grid]
    9 v=-0.071662:  -0.51  -0.52  -0.38   0.68  -0.38   1.14  [rand]
   10 v= 0.646570: -13.43  -9.18  -4.36  10.97 -11.67  30.79  [rand]
   11 v= 0.748578:  34.35  -7.29 -11.17  13.42  -7.16 -41.90  [rand]
   12 v= 0.148883:  -1.44  -1.99   3.70  -0.96  -2.86  -0.74  [rand]
   13 v= 0.184605:  -1.46  -2.10   2.55  -0.75  -2.11  -1.92  [rand]
   14 v= 0.261402:  -4.19  -2.87   2.33  -3.47  -1.26  -1.15  [rand]
   15 v= 0.508684:   8.84  -8.55   4.87  10.11  -7.97  -3.44  [grid]
   16 v= 0.533911: -12.55 -10.96   1.79 -11.70  -9.45   7.13  [grid]
   17 v= 0.755831:  -8.40 -18.64   7.37 -27.45 -12.82 -14.31  [grid]
   18 v= 0.593262:  12.57  10.97 -14.44   9.16  12.71  -5.73  [grid]
   19 v= 0.768134:   8.47  16.21 -27.64  12.85  25.32   8.38  [grid]
   20 v= 0.746525: -24.33 -18.20 -12.45 -15.07 -15.23  27.19  [grid]
   21 v= 0.640116:  13.23 -19.27   5.32   7.91 -19.64 -10.87  [rand]
   22 v= 0.650605: -22.80  -4.76 -14.75  -8.11  -3.83  31.15  [rand]
   23 v= 0.739618:  22.88 -18.43   4.53  13.00 -22.07 -17.28  [grid]
   24 v=-0.003964:   0.34  -1.03   1.68   0.45  -1.42   0.14  [rand]
   25 v= 0.420511:  -1.95  -2.61   5.51   0.58  -7.22   5.15  [grid]
   26 v= 0.584923:  12.73 -10.08   2.07  -1.36  -8.92 -17.44  [grid]
   27 v= 0.702121:  10.31 -18.99   6.67 -20.01 -15.61 -31.37  [grid]
   28 v= 0.740157:  11.95  13.41 -25.39  12.56  22.96  -3.87  [grid]
   29 v= 0.668774:  20.08 -15.80   2.88 -12.21 -13.88 -37.71  [rand]
   30 v= 0.630502:  12.63   9.24 -16.37   5.74  11.87 -18.91  [grid]
   31 v= 0.861981:   8.66  18.43 -30.67  14.88  28.68  28.84  [grid]
   32 v= 0.236249:   4.04   0.19   1.99   2.73  -1.79  -2.14  [rand]
   33 v=-0.088730:  -0.81  -0.41   0.03  -0.12  -0.05   0.64  [rand]
   34 v= 0.784836: -29.09 -18.65 -14.60 -17.90 -14.12  31.49  [grid]
   35 v= 0.582646:  12.40 -10.46   2.76  -2.20 -10.19 -17.43  [rand]
   36 v= 0.060380:   0.93  -1.15   2.32   1.04  -2.03  -0.18  [grid]
   37 v= 0.518234:   3.02 -11.54   7.69   5.88 -13.81   0.79  [grid]
   38 v= 0.773413: -28.77 -16.98 -17.76 -13.87 -14.03  37.60  [rand]
   39 v= 0.615534: -16.00  -3.13  -9.89 -17.46   5.99   8.93  [rand]
   40 v= 0.351842:  -7.47  -3.01  -1.06  -3.35  -1.72   3.13  [grid]
   41 v= 0.604853:  13.58  -5.83  -1.82  -9.09  -5.85 -28.74  [rand]
   42 v= 0.333912:   4.46  -1.99   4.01   1.41  -3.41  -1.50  [rand]
   43 v= 0.663436:   3.65 -18.07   7.05 -15.59 -16.29 -18.99  [rand]
   44 v= 0.247397:  -1.42   0.67  -0.70  -0.36   2.85   1.61  [grid]
 + - save # 0 for possible use in twobest
 + - skip #33 for twobest: too close to set # 0
 + - skip # 9 for twobest: too close to set # 0
 + - skip # 7 for twobest: too close to set # 0
 + - skip #24 for twobest: too close to set # 0
 + - skip #36 for twobest: too close to set # 0
 + - skip # 1 for twobest: too close to set # 0
 + - skip #12 for twobest: too close to set #33
 + - skip #13 for twobest: too close to set # 0
 + - skip #32 for twobest: too close to set #24
 + - skip #44 for twobest: too close to set # 0
 + - skip #14 for twobest: too close to set # 0
 + - skip #42 for twobest: too close to set #36
 + - skip #40 for twobest: too close to set #14
 + - save #25 for possible use in twobest
 + - save #15 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save #16 for possible use in twobest
 + - save #35 for possible use in twobest
 + - skip #26 for twobest: too close to set #35
 + - save # 8 for possible use in twobest
 + - save #18 for possible use in twobest
 + - save # 6 for possible use in twobest
 + - save # 4 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - skip #41 for twobest: too close to set # 6
 + - skip # 3 for twobest: too close to set # 6
 + - save #39 for possible use in twobest
 + - save #30 for possible use in twobest
 + - save #21 for possible use in twobest
 + - save #10 for possible use in twobest
 + - save #22 for possible use in twobest
 + - save #43 for possible use in twobest
 + - save #29 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - save #27 for possible use in twobest
 + - save #23 for possible use in twobest
 + - save #28 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 279.004 .. 1044.13; base clip 195.95 .. 726.875
 +  - versus source range 0.153775 .. 943.148; base range 0 .. 906.149
 + 35709 total points stored in 347 'RHDD(12.342)' bloks
*[#10874=-0.104602] *[#10875=-0.104774] *[#10878=-0.106363] *[#10879=-0.106734] *[#10881=-0.107917] *[#10886=-0.114055] *[#10889=-0.115725] 
 + - param set #1 has cost=-0.115725
 + -- Parameters = -0.7908 -0.5541 -0.3694 -0.1856 -0.1788 0.8448 0.9997 1.0007 0.9999 -0.0005 -0.0002 -0.0001
 + - param set #2 has cost=-0.091933
 + -- Parameters = -0.8485 -0.7982 -0.1025 -0.0380 -0.7708 1.3238 0.9852 0.9952 0.9892 -0.0072 -0.0160 -0.0025
 + - param set #3 has cost=0.087312
 + -- Parameters = -0.8959 -1.7581 1.3850 -0.2986 -1.7954 0.6958 0.9978 0.9923 1.0339 0.0205 0.0221 -0.0165
 + - param set #4 has cost=0.053033
 + -- Parameters = 0.9085 -1.4007 0.4870 0.4115 -3.3570 -1.1646 0.9912 1.0006 0.9769 0.0181 0.0120 -0.0408
 + - param set #5 has cost=0.081614
 + -- Parameters = -1.3311 -1.3068 -0.3930 -0.6432 -2.2932 0.2407 1.0202 1.0134 0.9369 0.0113 -0.0079 -0.0046
 + - param set #6 has cost=0.397904
 + -- Parameters = 5.7655 -5.8625 1.9497 1.0057 -7.4408 -5.4567 1.0028 1.0206 0.9137 -0.0156 0.0181 -0.0181
 + - param set #7 has cost=0.537960
 + -- Parameters = -4.2131 0.7425 -14.6365 1.8903 1.2971 15.6950 0.9914 0.9915 0.9842 0.0158 0.0079 -0.0094
 + - param set #8 has cost=0.526220
 + -- Parameters = 11.7112 8.2957 -15.3654 8.7031 14.4952 -5.0329 0.9815 0.9544 0.9865 -0.0009 -0.0039 0.0000
 + - param set #9 has cost=0.567907
 + -- Parameters = 7.8184 -8.7810 0.2164 -11.0674 -7.5621 -25.5483 0.9632 1.0067 0.9531 -0.0157 0.0065 -0.0079
 + - param set #10 has cost=0.528726
 + -- Parameters = 2.5656 5.6121 -12.9379 5.5191 6.6383 9.0275 0.9623 0.9841 0.9745 -0.0036 -0.0134 -0.0127
 + - param set #11 has cost=0.508051
 + -- Parameters = 13.0608 -7.9069 4.4098 5.1204 -4.7872 -8.5737 0.9727 0.9863 0.9784 0.0188 -0.0390 0.0484
*[#11926=-0.118185] *[#11929=-0.12005] *[#11930=-0.120326] *[#11934=-0.123189] *[#11937=-0.123702] *[#11942=-0.124558] 
 + - param set #12 has cost=-0.124558
 + -- Parameters = -0.3924 -0.2176 -0.1744 0.1770 -0.6063 0.5575 0.9974 1.0066 0.9959 0.0042 0.0045 -0.0032
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0213 
 + --- dist(#3,#1) = 0.0925 
 + --- dist(#4,#1) = 0.169 
 + --- dist(#5,#1) = 0.161 
 + --- dist(#6,#1) = 0.103 
 + --- dist(#7,#1) = 0.224 
 + --- dist(#8,#1) = 0.232 
 + --- dist(#9,#1) = 0.19 
 + --- dist(#10,#1) = 0.16 
 + --- dist(#11,#1) = 0.181 
 + --- dist(#12,#1) = 0.29 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 282.383 .. 1055.96; base clip 196.369 .. 741.048
 +  - versus source range 6.47001e-05 .. 943.159; base range 0 .. 907.129
 + 35372 total points stored in 348 'RHDD(12.2051)' bloks
 + - param set #1 has cost=-0.113885
 + -- Parameters = -0.4591 -0.1719 -0.1353 0.1694 -0.6404 0.7290 0.9976 1.0072 0.9957 0.0038 0.0048 -0.0033
 + - param set #2 has cost=-0.112654
 + -- Parameters = -0.6982 -0.3190 -0.1285 -0.0275 -0.2913 0.7467 0.9984 1.0038 0.9983 -0.0008 0.0011 0.0028
 + - param set #3 has cost=-0.100864
 + -- Parameters = -0.9846 -0.5976 -0.1011 -0.2227 -0.5857 1.2275 1.0012 0.9986 0.9893 -0.0070 -0.0137 -0.0008
 + - param set #4 has cost=-0.075249
 + -- Parameters = -0.2815 -0.7457 -0.5411 0.1508 -2.3446 0.1048 1.0031 1.0059 0.9911 0.0049 0.0201 -0.0383
 + - param set #5 has cost=-0.108422
 + -- Parameters = -0.8280 -0.1707 -0.3376 -0.1845 -1.3283 0.7715 0.9939 1.0091 0.9741 -0.0080 0.0003 -0.0116
 + - param set #6 has cost=-0.091128
 + -- Parameters = -0.4792 -0.8626 -0.1147 0.1566 -1.3357 0.4861 1.0090 1.0005 0.9873 0.0081 0.0098 -0.0127
 + - param set #7 has cost=0.172081
 + -- Parameters = -0.3358 -2.3379 -2.4164 0.0870 -1.9800 0.3000 0.9882 0.9874 0.9121 -0.0197 0.0597 -0.0321
 + - param set #8 has cost=0.413583
 + -- Parameters = -0.7814 -5.8408 3.9592 1.0372 -3.8676 1.4632 0.9747 1.0011 0.9765 -0.0403 -0.0498 0.0422
 + - param set #9 has cost=0.521432
 + -- Parameters = 10.5193 7.4099 -16.1672 7.7651 14.8752 -4.7883 1.0068 0.9339 0.9665 0.0004 -0.0033 -0.0036
 + - param set #10 has cost=0.487092
 + -- Parameters = 0.3350 3.2896 -10.9721 2.6739 6.3247 8.1421 0.9645 1.0181 0.9590 0.0131 -0.0120 0.0139
 + - param set #11 has cost=0.527659
 + -- Parameters = -3.7365 0.6537 -14.2293 0.6620 4.1625 11.6428 0.9882 0.9948 0.9843 0.0264 0.0106 -0.0052
 + - param set #12 has cost=0.551659
 + -- Parameters = 7.7081 -5.9010 -0.2306 -6.3309 -6.9791 -22.1862 0.9509 1.0715 0.9120 -0.0203 0.0213 -0.0001
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0274 
 + --- dist(#3,#1) = 0.0588 
 + --- dist(#4,#1) = 0.0831 
 + --- dist(#5,#1) = 0.0421 
 + --- dist(#6,#1) = 0.158 
 + --- dist(#7,#1) = 0.247 
 + --- dist(#8,#1) = 0.246 
 + --- dist(#9,#1) = 0.135 
 + --- dist(#10,#1) = 0.2 
 + --- dist(#11,#1) = 0.176 
 + --- dist(#12,#1) = 0.255 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 284.588 .. 1066.62; base clip 196.533 .. 753.237
 +  - versus source range 0 .. 943.16; base range 0 .. 907.575
 + 35973 total points stored in 366 'RHDD(12.1215)' bloks
 + - param set #1 has cost=-0.058744
 + -- Parameters = -0.4975 -0.1683 -0.1813 0.1070 -0.6241 0.6437 0.9968 1.0077 0.9942 0.0024 0.0050 -0.0044
 + - param set #2 has cost=-0.059391
 + -- Parameters = -0.6317 -0.2445 -0.0577 -0.0136 -0.2237 0.7245 1.0002 1.0046 0.9956 -0.0041 0.0007 0.0043
 + - param set #3 has cost=-0.062162
 + -- Parameters = -0.6481 -0.1124 -0.1549 -0.1149 -1.0396 0.6217 0.9964 1.0088 0.9847 -0.0056 0.0040 -0.0091
 + - param set #4 has cost=-0.061811
 + -- Parameters = -0.6197 -0.1131 -0.1378 0.0337 -0.5142 0.8863 0.9994 1.0063 0.9888 -0.0059 -0.0067 -0.0008
 + - param set #5 has cost=-0.059215
 + -- Parameters = -0.6533 -0.3844 -0.2847 0.0684 -1.1199 0.6787 1.0050 1.0066 0.9875 0.0010 0.0035 -0.0128
 + - param set #6 has cost=-0.033838
 + -- Parameters = -0.4128 -0.5283 -0.6458 0.0830 -2.0766 0.1685 0.9985 1.0083 0.9880 0.0009 0.0154 -0.0372
 + - param set #7 has cost=0.077074
 + -- Parameters = -0.4129 -0.7806 -1.8519 -0.2803 -1.9465 -0.3491 0.9906 1.0022 0.9311 -0.0056 0.0448 -0.0278
 + - param set #8 has cost=0.132300
 + -- Parameters = -1.0863 0.0404 1.0408 -0.7041 -0.1422 2.0788 0.9864 0.9942 0.9795 -0.0405 -0.0568 0.0246
 + - param set #9 has cost=0.204670
 + -- Parameters = 1.0871 1.3221 -2.6804 0.9350 0.5759 0.6793 0.9908 1.0329 0.9798 0.0462 -0.0131 -0.0128
 + - param set #10 has cost=0.512302
 + -- Parameters = 7.9071 4.2720 -13.3571 6.2818 12.7812 -2.0904 1.0133 0.9148 0.9736 -0.0039 0.0031 -0.0023
 + - param set #11 has cost=0.303051
 + -- Parameters = -0.9801 -1.9815 -6.0847 -0.3136 2.2696 0.3316 1.0098 0.9901 0.9682 0.0236 0.0225 -0.0162
 + - param set #12 has cost=0.548342
 + -- Parameters = 5.7847 -5.5619 0.6923 -6.4102 -7.6057 -18.9381 0.9306 1.0737 0.8870 -0.0187 0.0266 -0.0023
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0481 
 + --- dist(#3,#1) = 0.0603 
 + --- dist(#4,#1) = 0.0299 
 + --- dist(#5,#1) = 0.0364 
 + --- dist(#6,#1) = 0.126 
 + --- dist(#7,#1) = 0.184 
 + --- dist(#8,#1) = 0.274 
 + --- dist(#9,#1) = 0.233 
 + --- dist(#10,#1) = 0.132 
 + --- dist(#11,#1) = 0.256 
 + --- dist(#12,#1) = 0.266 
 + - Total coarse refinement net CPU time = 0.0 s; 3317 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 288.069 .. 1083.46; base clip 196.533 .. 753.237
 +  - versus source range 0 .. 943.52; base range 0 .. 908.14
 + 36375 total points stored in 376 'RHDD(12.0364)' bloks
 + - cost(#1)=-0.028996 *
 + -- Parameters = -0.6481 -0.1124 -0.1549 -0.1149 -1.0396 0.6217 0.9964 1.0088 0.9847 -0.0056 0.0040 -0.0091
 + - cost(#2)=-0.028454  
 + -- Parameters = -0.6197 -0.1131 -0.1378 0.0337 -0.5142 0.8863 0.9994 1.0063 0.9888 -0.0059 -0.0067 -0.0008
 + - cost(#3)=-0.024749  
 + -- Parameters = -0.6317 -0.2445 -0.0577 -0.0136 -0.2237 0.7245 1.0002 1.0046 0.9956 -0.0041 0.0007 0.0043
 + - cost(#4)=-0.024782  
 + -- Parameters = -0.6533 -0.3844 -0.2847 0.0684 -1.1199 0.6787 1.0050 1.0066 0.9875 0.0010 0.0035 -0.0128
 + - cost(#5)=-0.024774  
 + -- Parameters = -0.4975 -0.1683 -0.1813 0.1070 -0.6241 0.6437 0.9968 1.0077 0.9942 0.0024 0.0050 -0.0044
 + - cost(#6)=-0.002568  
 + -- Parameters = -0.4128 -0.5283 -0.6458 0.0830 -2.0766 0.1685 0.9985 1.0083 0.9880 0.0009 0.0154 -0.0372
 + - cost(#7)=0.105187  
 + -- Parameters = -0.4129 -0.7806 -1.8519 -0.2803 -1.9465 -0.3491 0.9906 1.0022 0.9311 -0.0056 0.0448 -0.0278
 + - cost(#8)=0.158432  
 + -- Parameters = -1.0863 0.0404 1.0408 -0.7041 -0.1422 2.0788 0.9864 0.9942 0.9795 -0.0405 -0.0568 0.0246
 + - cost(#9)=0.232458  
 + -- Parameters = 1.0871 1.3221 -2.6804 0.9350 0.5759 0.6793 0.9908 1.0329 0.9798 0.0462 -0.0131 -0.0128
 + - cost(#10)=0.323957  
 + -- Parameters = -0.9801 -1.9815 -6.0847 -0.3136 2.2696 0.3316 1.0098 0.9901 0.9682 0.0236 0.0225 -0.0162
 + - cost(#11)=0.519869  
 + -- Parameters = 7.9071 4.2720 -13.3571 6.2818 12.7812 -2.0904 1.0133 0.9148 0.9736 -0.0039 0.0031 -0.0023
 + - cost(#12)=0.550156  
 + -- Parameters = 5.7847 -5.5619 0.6923 -6.4102 -7.6057 -18.9381 0.9306 1.0737 0.8870 -0.0187 0.0266 -0.0023
 + - cost(#13)=0.584398  
 + -- Parameters = -0.3721 5.0860 -4.5232 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.030798 *
 + -- Parameters = -0.6718 -0.0929 -0.1726 -0.0802 -0.9444 0.6258 0.9987 1.0086 0.9867 -0.0052 0.0034 -0.0085
 + - cost(#2)=-0.030559  
 + -- Parameters = -0.6262 -0.0930 -0.1150 0.0485 -0.6551 0.7598 1.0000 1.0071 0.9873 -0.0044 -0.0018 -0.0028
 + - cost(#3)=-0.027221  
 + -- Parameters = -0.6110 -0.0951 -0.0772 0.0293 -0.2468 0.7003 0.9979 1.0074 0.9924 -0.0040 0.0004 0.0040
 + - cost(#4)=-0.031219 *
 + -- Parameters = -0.6125 -0.2835 -0.1846 0.0518 -1.1611 0.7173 0.9995 1.0073 0.9882 -0.0009 0.0024 -0.0131
 + - cost(#5)=-0.029568  
 + -- Parameters = -0.4886 -0.0898 -0.0299 0.0907 -0.8244 0.6382 0.9982 1.0085 0.9898 -0.0011 0.0032 -0.0052
 + - cost(#6)=-0.025245  
 + -- Parameters = -0.6267 -0.1814 -0.4173 0.0100 -1.5037 0.6036 1.0013 1.0105 0.9863 -0.0049 0.0018 -0.0236
 + - cost(#7)=-0.002401  
 + -- Parameters = -0.8252 -0.2536 -0.7857 -0.3561 -1.6563 0.2407 0.9991 1.0064 0.9866 -0.0111 0.0158 -0.0306
 + - cost(#8)=0.027970  
 + -- Parameters = -1.0493 -0.0669 0.7849 -0.2583 0.3329 1.2856 1.0003 1.0060 0.9966 -0.0158 -0.0260 0.0263
 + - cost(#9)=0.057538  
 + -- Parameters = 0.0118 0.1011 -0.4331 0.8607 -1.1878 1.0464 0.9864 1.0182 0.9718 0.0344 -0.0129 -0.0123
 + - cost(#10)=0.038149  
 + -- Parameters = -0.1807 -0.3567 -0.3650 0.2941 0.3789 -0.0790 0.9987 0.9996 0.9672 0.0148 0.0258 0.0199
 + - cost(#11)=0.512118  
 + -- Parameters = 7.9264 1.6981 -13.8689 5.7346 11.9031 -2.7435 0.9824 0.9225 0.9768 0.0000 0.0011 0.0029
 + - cost(#12)=0.430146  
 + -- Parameters = 1.3808 -4.3270 0.9172 -0.3918 -10.3013 -1.6579 0.9109 1.1049 0.8579 -0.0050 0.0502 -0.0272
 + - cost(#13)=0.009241  
 + -- Parameters = -0.7952 -0.8085 -0.3737 0.0991 -0.1067 0.9935 1.0158 0.9968 0.9974 0.0013 -0.0023 -0.0008
 + - case #4 is now the best
 + - Initial  cost = -0.031219
 + - Initial fine Parameters = -0.6125 -0.2835 -0.1846 0.0518 -1.1611 0.7173 0.9995 1.0073 0.9882 -0.0009 0.0024 -0.0131
 + - Finalish cost = -0.032237 ; 173 funcs
 + - ini Finalish Parameters = -0.5903 -0.2288 -0.1657 0.0612 -1.1581 0.7789 0.9994 1.0073 0.9881 -0.0007 -0.0013 -0.0129
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 287.953 .. 1083.22; base clip 196.533 .. 753.237
 +  - versus source range 0 .. 943.52; base range 0 .. 908.14
*[#15743=-0.578094] *[#15795=-0.578426] *[#15807=-0.578509] *[#15827=-0.578626] *[#15829=-0.578756] *[#15830=-0.578873] *[#15833=-0.578948] *[#15834=-0.578986] *[#15837=-0.579132] *[#15838=-0.579245] *[#15839=-0.579253] *[#15841=-0.579256] *[#15845=-0.579269] *[#15846=-0.579295] *[#15849=-0.579325] *[#15850=-0.579377] *[#15851=-0.579406] *[#15852=-0.579417] *[#15854=-0.579473] *[#15855=-0.579498] *[#15856=-0.579516] *[#15857=-0.579534] *[#15860=-0.579546] *[#15861=-0.579559] *[#15862=-0.579578] *[#15864=-0.579621] *[#15865=-0.579634] *[#15866=-0.57964] *[#15868=-0.579648] *[#15869=-0.579673] *[#15870=-0.579687] *[#15871=-0.579694] *[#15874=-0.579743] *[#15875=-0.579779] *[#15876=-0.579801] *[#15877=-0.579842] *[#15880=-0.579868] *[#15881=-0.579885] *[#15884=-0.579919] *[#15885=-0.579951] *[#15886=-0.579984] *[#15889=-0.580007] *[#15890=-0.580021] *[#15891=-0.580027] *[#15892=-0.580067] *[#15893=-0.580137] *[#15894=-0.580211] *[#15895=-0.580254] *[#15898=-0.580271] *[#15901=-0.580287] *[#15902=-0.580297] *[#15903=-0.580303] *[#15904=-0.58034] *[#15907=-0.580362] *[#15908=-0.580371] *[#15911=-0.580389] *[#15914=-0.580405] *[#15915=-0.580413] *[#15916=-0.580421] *[#15917=-0.580428] *[#15918=-0.580432] *[#15925=-0.580438] *[#15930=-0.580443] *[#15933=-0.580448] *[#15934=-0.58045] *[#15937=-0.580455] *[#15938=-0.580455] *[#15942=-0.580465] *[#15943=-0.58047] *[#15948=-0.580474] *[#15951=-0.580488] *[#15952=-0.580497] *[#15957=-0.5805] *[#15962=-0.580511] *[#15963=-0.580513] *[#15964=-0.580514] *[#15966=-0.580515] *[#15971=-0.580524] *[#15972=-0.58053] *[#15975=-0.580536] *[#15976=-0.580541] *[#15977=-0.580543] *[#15980=-0.580544] *[#15981=-0.580548] *[#15986=-0.580549] *[#15991=-0.580553] *[#15994=-0.580554] *[#15996=-0.580558] *[#15999=-0.580562] *[#16008=-0.580565] *[#16011=-0.58057] *[#16016=-0.580578] *[#16019=-0.58058] *[#16024=-0.580586] *[#16031=-0.580591] *[#16034=-0.580591] *[#16035=-0.580594] *[#16038=-0.580595] *[#16047=-0.580598] *[#16050=-0.5806] *[#16053=-0.580604] *[#16056=-0.580606] *[#16057=-0.58061] *[#16058=-0.580617] *[#16061=-0.580628] *[#16064=-0.58063] *[#16065=-0.580636] *[#16066=-0.580637] *[#16068=-0.580641] *[#16069=-0.580643] *[#16076=-0.580644] *[#16078=-0.580649] *[#16079=-0.580649] *[#16080=-0.580655] *[#16081=-0.580657] *[#16082=-0.580657] *[#16084=-0.58066] *[#16093=-0.580664] *[#16094=-0.580667] *[#16097=-0.580669] *[#16099=-0.580672] *[#16106=-0.580672] *[#16108=-0.580673] *[#16130=-0.580674] *[#16139=-0.580674] *[#16140=-0.580675] *[#16143=-0.580675] *[#16146=-0.580676] *[#16147=-0.580678] *[#16148=-0.580679] *[#16149=-0.580679] *[#16151=-0.58068] *[#16152=-0.580681] *[#16155=-0.580682] *[#16158=-0.580682] *[#16159=-0.580683] *[#16166=-0.580684] *[#16175=-0.580684] *[#16176=-0.580684] *[#16177=-0.580685] *[#16178=-0.580685] *[#16181=-0.580685] *[#16183=-0.580686] *[#16184=-0.580687] *[#16185=-0.580687] *[#16186=-0.580688] *[#16191=-0.580689] *[#16194=-0.580689] *[#16195=-0.58069] *[#16198=-0.58069] *[#16199=-0.58069] *[#16201=-0.58069] *[#16202=-0.580691] *[#16203=-0.580691] *[#16206=-0.580692] *[#16208=-0.580693] *[#16215=-0.580693] *[#16216=-0.580694] *[#16217=-0.580694] *[#16218=-0.580695] *[#16219=-0.580696] *[#16224=-0.580698] *[#16225=-0.5807] *[#16226=-0.580701] *[#16227=-0.580704] *[#16228=-0.580707] *[#16231=-0.580707] *[#16236=-0.580708] *[#16241=-0.580711] *[#16242=-0.580712] *[#16243=-0.580714] *[#16252=-0.580714] *[#16255=-0.580715] *[#16256=-0.580715] *[#16257=-0.580716] *[#16263=-0.580716] *[#16264=-0.580716] *[#16268=-0.580718] *[#16269=-0.580719] *[#16272=-0.58072] *[#16277=-0.58072] *[#16278=-0.58072] *[#16281=-0.580721] *[#16286=-0.580721] *[#16287=-0.580722] *[#16288=-0.580723] *[#16291=-0.580723] *[#16292=-0.580723] *[#16294=-0.580724] *[#16295=-0.580724] *[#16296=-0.580725] *[#16299=-0.580725] *[#16300=-0.580725] *[#16304=-0.580727] *[#16305=-0.580728] *[#16306=-0.580729] *[#16309=-0.58073] *[#16312=-0.580731] *[#16313=-0.580732] *[#16316=-0.580733] *[#16317=-0.580735] *[#16318=-0.580737] *[#16319=-0.580737] *[#16320=-0.580738] *[#16323=-0.580739] *[#16326=-0.580739] *[#16329=-0.580743] *[#16330=-0.580744] *[#16331=-0.580746] *[#16332=-0.580747] *[#16335=-0.580748] *[#16337=-0.58075] *[#16338=-0.580751] *[#16339=-0.580752] *[#16342=-0.580752] *[#16343=-0.580753] *[#16344=-0.580753] *[#16345=-0.580754] *[#16346=-0.580756] *[#16349=-0.580757] *[#16350=-0.580758] *[#16351=-0.58076] *[#16352=-0.580761] *[#16353=-0.580761] *[#16354=-0.580761] *[#16355=-0.580762] *[#16356=-0.580762] *[#16359=-0.580763] *[#16360=-0.580765] *[#16361=-0.580765] *[#16362=-0.580766] *[#16363=-0.580766] *[#16364=-0.580769] *[#16365=-0.58077] *[#16366=-0.580771] *[#16371=-0.580772] *[#16372=-0.580773] *[#16377=-0.580774] *[#16379=-0.580774] *[#16380=-0.580774] *[#16383=-0.580775] *[#16385=-0.580775] *[#16387=-0.580775] *[#16392=-0.580776] *[#16395=-0.580776] *[#16396=-0.580777] *[#16397=-0.580778] *[#16400=-0.580778] *[#16401=-0.580778] *[#16402=-0.580779] *[#16405=-0.580779] *[#16410=-0.580779] *[#16418=-0.58078] *[#16431=-0.58078] *[#16442=-0.58078] *[#16445=-0.58078] *[#16446=-0.58078] *[#16457=-0.58078] *[#16461=-0.580781] *[#16464=-0.580781] *[#16481=-0.580781] *[#16496=-0.580781] *[#16501=-0.580781] *[#16544=-0.580782] *[#16551=-0.580782] 
 + - Final    cost = -0.580782 ; 824 funcs
 + Final fine fit Parameters:
       x-shift= -0.6574   y-shift= -0.0153   z-shift=  0.0382  ...  enorm=  0.6586 mm
       z-angle=  0.0300   x-angle= -1.1020   y-angle=  0.8144  ...  total=  1.3705 deg
       x-scale=  1.0009   y-scale=  1.0112   z-scale=  0.9913  ...  vol3D=  1.0033 = base smaller than source
     y/x-shear= -0.0029 z/x-shear= -0.0022 z/y-shear= -0.0092
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.6574 -0.0153 0.0382 0.0300 -1.1020 0.8144 1.0009 1.0112 0.9913 -0.0029 -0.0022 -0.0092
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S31_unflipped_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S31_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.9
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_anatSS.sub-S31_lr_al_junk -overwrite ./anatSS.sub-S31_unflipped_ob+orig
++ processing ./anatSS.sub-S31_unflipped_ob+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_ts_ns_wt+orig -source ./__tt_anatSS.sub-S31_lr_al_junk+orig -prefix ./anatSS.sub-S31_flip_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S31_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.747056 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.747056 degrees from plumb.
++ Source dataset: ./__tt_anatSS.sub-S31_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1510473 voxels in -source_automask+2
++ Zero-pad: ybot=7 ytop=6
++ Zero-pad: zbot=8 ztop=8
++ 40224 voxels [17.0%] in weight mask
++ Number of points for matching = 40224
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.439 38.092 22.726 (index)
 + source center of mass = 133.739 161.085 184.899 (index)
 + source-target CM = -2.894 5.086 -4.523 (xyz)
 + estimated center of mass shifts = -2.894 5.086 -4.523
++ shift param auto-range: -63.6..57.8 -68.1..78.3 -61.1..52.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -12.894066 .. 7.105934  center = -2.894066
 + Range param#2 [y-shift] = -4.914032 .. 15.085968  center = 5.085968
 + Range param#3 [z-shift] = -14.523216 .. 5.476784  center = -4.523216
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -42.894066 .. 37.105934  center = -2.894066
 + Range param#2 [y-shift] = -34.914032 .. 45.085968  center = 5.085968
 + Range param#3 [z-shift] = -44.523216 .. 35.476784  center = -4.523216
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -42.894 ..   37.106
 +       y-shift =  -34.914 ..   45.086
 +       z-shift =  -44.523 ..   35.477
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1510473 [out of 26717077] voxels
 + base mask has 53868 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=35.61 usiz=512.549
 + - copying weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 274.419 .. 1033.18; base clip 195.377 .. 715.312
 +  - versus source range 1.17306 .. 943.443; base range 0 .. 904.303
 + 35724 total points stored in 328 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o++.+-...+.+o.--o+$.o+ + - best 45 costs found:
    0 v= 0.548588:  -2.89   5.09  -4.52   0.00   0.00   0.00  [grid]
    1 v= 0.719433: -18.88 -14.41 -10.25 -20.53  -3.14  10.08  [rand]
    2 v= 0.754209: -35.38  -9.61 -16.33 -11.16  -9.40  34.39  [rand]
    3 v= 0.767895:  10.44  -8.25   8.81 -15.00 -15.00 -30.00  [grid]
    4 v= 0.771689:  10.44 -21.58   8.81 -15.00 -15.00 -30.00  [grid]
    5 v= 0.787220:  23.77  -8.25   8.81  15.00 -15.00 -15.00  [grid]
    6 v= 0.793671: -18.88 -14.41 -10.25 -20.53   3.14  10.08  [rand]
    7 v= 0.803078:  10.44  18.42 -17.86  15.00  15.00  15.00  [grid]
    8 v= 0.808343: -18.88 -14.41   1.20 -20.53  -3.14  10.08  [rand]
    9 v= 0.816511: -17.10  -4.37   0.32  15.99 -13.53  29.93  [rand]
   10 v= 0.822639: -21.23 -21.06   1.52  -6.51 -20.18   7.56  [rand]
   11 v= 0.824645: -16.23  -8.25   8.81  15.00 -15.00  30.00  [grid]
   12 v= 0.830498: -11.53 -15.35  12.95 -25.20 -18.50 -13.54  [rand]
   13 v= 0.858577: -16.23 -21.58   8.81 -30.00 -15.00 -15.00  [grid]
   14 v= 0.870435:  31.43 -11.50 -13.13  16.34  -8.64 -40.54  [rand]
   15 v= 0.870852: -29.56 -21.58 -17.86 -15.00 -15.00  30.00  [grid]
   16 v= 0.877500: -18.88 -14.41   1.20 -20.53  -3.14 -10.08  [rand]
   17 v= 0.882885: -37.22 -11.50 -13.13 -16.34  -8.64  40.54  [rand]
   18 v= 0.883774: -29.56  -8.25   8.81 -15.00 -15.00  15.00  [grid]
   19 v= 0.886943:  10.44  -8.25   8.81  30.00 -15.00  15.00  [grid]
   20 v= 0.890397:   5.75 -15.35  12.95  25.20 -18.50  13.54  [rand]
   21 v= 0.896576:  10.44  18.42 -17.86  15.00  15.00 -15.00  [grid]
   22 v= 0.925624: -29.56 -21.58 -17.86 -30.00 -15.00  30.00  [grid]
   23 v= 0.925627:  10.44  18.42 -31.19  15.00  30.00  15.00  [grid]
   24 v= 0.934189:  15.44 -21.06   1.52   6.51 -20.18  -7.56  [rand]
   25 v= 0.945199:  10.44 -21.58   8.81 -30.00 -15.00 -30.00  [grid]
   26 v= 0.947778: -29.20 -20.87 -22.32 -15.82 -17.65  37.25  [rand]
   27 v= 0.952511:  23.41 -20.87  13.27 -15.82 -17.65 -37.25  [rand]
   28 v= 0.956124: -29.56  -8.25 -17.86 -15.00 -15.00  30.00  [grid]
   29 v= 0.957112: -16.23 -21.58   8.81  15.00 -30.00  30.00  [grid]
   30 v= 0.962128:  10.44  18.42 -31.19  15.00  30.00 -15.00  [grid]
   31 v= 0.962331:   1.19  11.31 -12.32  -4.32  22.85 -18.95  [rand]
   32 v= 0.965913: -16.23  18.42 -17.86 -15.00  15.00  15.00  [grid]
   33 v= 0.966028:  10.44  -8.25   8.81  15.00 -15.00 -15.00  [grid]
   34 v= 0.971888:  23.77 -21.58   8.81  15.00 -30.00 -15.00  [grid]
   35 v= 0.973542:  10.44 -21.58   8.81 -15.00 -30.00 -30.00  [grid]
   36 v= 0.974808: -19.04  -4.38 -28.87 -20.99  15.73  16.09  [rand]
   37 v= 0.976062:  23.77  18.42 -17.86  15.00  15.00 -15.00  [grid]
   38 v= 0.982583: -13.22 -23.73  10.49 -30.67 -17.79 -20.52  [rand]
   39 v= 0.984649: -25.75 -18.49   5.89   5.91 -29.74  29.45  [rand]
   40 v= 0.985510:  13.09 -14.41   1.20  20.53  -3.14 -10.08  [rand]
   41 v= 0.990314:  23.77  18.42 -17.86  15.00  15.00 -30.00  [grid]
   42 v= 0.995411:  10.44  18.42 -31.19  15.00  30.00  30.00  [grid]
   43 v= 0.997089:  11.31  -4.37   0.32 -15.99 -13.53 -29.93  [rand]
   44 v= 1.003877: -16.23  -8.25 -17.86 -15.00  15.00  15.00  [grid]
 + - A little optimization:*[#8004=0.457081] *[#8006=0.436331] *[#8013=0.434524] *[#8014=0.428254] *[#8015=0.425507] *[#8018=0.420532] *[#8019=0.41641] *[#8021=0.414158] *[#8022=0.413072] *[#8025=0.410751] *[#8026=0.409082] *[#8027=0.407627] *[#8028=0.406646] *[#8032=0.401503] *[#8035=0.396712] *[#8036=0.395027] *[#8037=0.393704] *[#8040=0.393183] *[#8041=0.389084] *[#8048=0.386739] ........*[#8618=0.38029] *[#8623=0.379021] .......................*[#10024=0.375751] *[#10027=0.370998] *[#10028=0.370405] ..............
 + - costs of the above after a little optimization:
    0 v= 0.386739:  -2.06   2.68  -1.81  -0.15   2.24  -0.88  [grid]
    1 v= 0.406233:  -9.75  -5.13  -0.50  -4.82  -1.83   2.51  [rand]
    2 v= 0.655886: -24.85  -6.67 -15.01  -6.20  -5.92  32.90  [rand]
    3 v= 0.388333:  -5.84  -8.25   4.40  -2.80  -6.33   0.37  [grid]
    4 v= 0.471832:   0.93   1.19   1.18   5.53  -2.81   2.53  [grid]
    5 v= 0.527929:   8.53  -3.88   1.11   5.53  -4.30  -9.02  [grid]
    6 v= 0.482576: -14.18  -4.15  -3.55  -6.89  -0.76   7.33  [rand]
    7 v= 0.636003:   4.15  12.27 -16.12  14.09  12.89  13.58  [grid]
    8 v= 0.379021:  -6.96  -5.88   2.58  -3.84  -4.07   0.45  [rand]
    9 v= 0.620343: -12.76  -4.17  -6.19   8.62  -6.89  27.54  [rand]
   10 v= 0.430177:  -7.57 -10.67   4.36  -3.51  -7.49   2.58  [rand]
   11 v= 0.699763: -15.72  -9.95   0.59  14.86 -13.75  31.86  [grid]
   12 v= 0.407151:  -8.70  -7.51   3.09  -3.97  -5.43   2.78  [rand]
   13 v= 0.572515:  -5.61  -2.87   2.98 -11.62  -3.75 -13.05  [grid]
   14 v= 0.782224:  31.97  -5.21 -11.12  16.90  -6.01 -40.45  [rand]
   15 v= 0.688289: -27.85 -16.64  -6.33  -7.07 -17.48  25.56  [grid]
   16 v= 0.396409:  -6.71  -6.73   3.66  -4.94  -4.27  -1.71  [rand]
   17 v= 0.637411: -21.55  -2.74 -14.97   2.20  -4.12  38.19  [rand]
   18 v= 0.490618: -13.10  -9.52   0.71  -4.26  -5.55   8.05  [grid]
   19 v= 0.479562:  -0.61   0.45  -0.35   3.78  -0.19   6.62  [grid]
   20 v= 0.428671:  -0.01  -8.85   6.03   0.46  -7.71  -3.55  [rand]
   21 v= 0.468890:  -4.16   8.55  -7.95  -2.60   8.93  -2.12  [grid]
   22 v= 0.791402: -34.39 -18.97 -18.18 -22.00 -13.69  33.69  [grid]
   23 v= 0.829017:   8.51  17.26 -28.50  16.18  26.90  14.86  [grid]
   24 v= 0.467753:   0.70  -7.26   6.60  -2.21  -6.53  -7.48  [rand]
   25 v= 0.648703:  12.65 -12.89   3.73 -14.80 -10.45 -35.11  [grid]
   26 v= 0.735679: -30.22 -17.00 -15.28 -10.30 -15.12  34.92  [rand]
   27 v= 0.593401:  11.97   0.09  -5.47  -1.47  -1.91 -23.04  [rand]
   28 v= 0.653062: -25.67 -10.45 -10.78 -12.00  -7.94  24.04  [grid]
   29 v= 0.706111: -17.11 -18.70   1.06  10.08 -20.71  27.84  [grid]
   30 v= 0.815780:  10.72  15.21 -26.32  14.49  25.62  -4.97  [grid]
  *31 v= 0.370405:  -4.17  -2.29  -0.33  -2.03  -0.18  -1.18  [rand]
   32 v= 0.373712:  -3.19   0.63  -1.44  -0.28   1.37   1.10  [grid]
   33 v= 0.439514:   2.91  -5.64   5.91   0.98  -5.85  -5.28  [grid]
   34 v= 0.410638:  -0.27  -7.09   5.24   0.68  -6.23  -2.57  [grid]
   35 v= 0.620519:  15.67 -10.64  -0.87   5.98 -10.88 -18.09  [grid]
   36 v= 0.627112: -23.93  -0.97  -8.98 -16.16   3.70  11.42  [rand]
   37 v= 0.603249:  10.23   7.95 -14.70   6.14  11.30 -15.87  [grid]
   38 v= 0.408261:  -2.01  -7.61   2.64  -1.56  -3.99  -2.59  [rand]
   39 v= 0.653520: -19.11 -13.67  -5.84   3.87 -15.63  28.15  [rand]
   40 v= 0.435696:   2.83  -6.52   5.22   1.29  -5.84  -4.74  [rand]
   41 v= 0.392779:  -1.47  -6.40   3.51   0.54  -4.73  -0.79  [grid]
   42 v= 0.863851:   5.80  17.68 -29.86  13.62  26.04  28.07  [grid]
   43 v= 0.618598:   9.38  -6.81  -0.29 -11.69  -5.80 -30.72  [rand]
   44 v= 0.384528:  -6.61  -2.33   0.32  -4.65  -0.34  -1.02  [grid]
 + - save #31 for possible use in twobest
 + - skip #32 for twobest: too close to set #31
 + - skip # 8 for twobest: too close to set #31
 + - skip #44 for twobest: too close to set #31
 + - skip # 0 for twobest: too close to set #32
 + - skip # 3 for twobest: too close to set # 8
 + - save #41 for possible use in twobest
 + - skip #16 for twobest: too close to set # 8
 + - skip # 1 for twobest: too close to set # 8
 + - skip #12 for twobest: too close to set # 8
 + - skip #38 for twobest: too close to set # 3
 + - skip #34 for twobest: too close to set #41
 + - skip #20 for twobest: too close to set #41
 + - skip #10 for twobest: too close to set # 3
 + - skip #40 for twobest: too close to set #34
 + - skip #33 for twobest: too close to set #34
 + - skip #24 for twobest: too close to set #20
 + - save #21 for possible use in twobest
 + - save # 4 for possible use in twobest
 + - skip #19 for twobest: too close to set # 4
 + - save # 6 for possible use in twobest
 + - save #18 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - save #13 for possible use in twobest
 + - save #27 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save #43 for possible use in twobest
 + - save # 9 for possible use in twobest
 + - save #35 for possible use in twobest
 + - save #36 for possible use in twobest
 + - save # 7 for possible use in twobest
 + - save #17 for possible use in twobest
 + - save #25 for possible use in twobest
 + - save #28 for possible use in twobest
 + - save #39 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - save #15 for possible use in twobest
 + - save #11 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 278.428 .. 1044.3; base clip 195.95 .. 726.875
 +  - versus source range 0.153775 .. 943.148; base range 0 .. 906.149
 + 35709 total points stored in 347 'RHDD(12.342)' bloks
 + - param set #1 has cost=0.379241
 + -- Parameters = -4.1632 -1.4488 -0.1330 -1.7289 -0.3294 -0.0252 0.9951 0.9970 0.9952 0.0003 0.0062 0.0000
 + - param set #2 has cost=0.391831
 + -- Parameters = -1.5812 -2.9176 1.3024 -0.0545 -1.6303 -1.7143 0.9886 0.9919 1.0044 0.0134 -0.0024 -0.0054
 + - param set #3 has cost=0.442605
 + -- Parameters = -3.9617 7.1107 -6.6685 -2.8577 8.3137 -2.6564 0.9818 0.9922 0.9882 -0.0063 0.0087 0.0015
 + - param set #4 has cost=0.385428
 + -- Parameters = -1.7636 -1.6853 1.3390 0.2974 -1.7209 -1.0012 0.9969 0.9988 0.9889 -0.0015 -0.0019 -0.0003
 + - param set #5 has cost=0.434969
 + -- Parameters = -10.7172 -2.7062 -1.5421 -6.6883 0.1693 1.2799 0.9933 1.0028 0.9931 0.0037 0.0036 -0.0061
 + - param set #6 has cost=0.404876
 + -- Parameters = -7.0097 -6.8744 2.5992 -4.5381 -4.9793 0.3961 0.9682 1.0031 0.9949 -0.0015 0.0019 -0.0099
 + - param set #7 has cost=0.417881
 + -- Parameters = 2.2666 0.2822 -0.7737 2.0916 0.4735 -4.1419 0.9922 0.9793 0.9754 -0.0094 0.0112 -0.0136
 + - param set #8 has cost=0.408601
 + -- Parameters = -7.5340 -7.2663 2.7532 -3.9372 -4.4886 1.8203 0.9867 0.9927 0.9988 0.0316 -0.0253 -0.0083
 + - param set #9 has cost=0.470348
 + -- Parameters = 3.6568 -1.3353 -4.0489 1.6592 1.0290 -6.9089 0.9707 0.9873 0.9891 0.0234 -0.0082 -0.0377
 + - param set #10 has cost=0.509366
 + -- Parameters = 4.0007 9.0146 -12.4483 2.4531 12.0702 -6.3671 0.9809 0.9739 0.9989 0.0260 -0.0133 -0.0174
 + - param set #11 has cost=0.575025
 + -- Parameters = 9.5883 -7.0545 -0.7285 -10.8059 -12.8713 -31.7529 0.9638 0.9675 0.9473 -0.0022 -0.0208 -0.0078
 + - param set #12 has cost=0.376722
 + -- Parameters = -2.7884 2.3983 -1.9507 -0.6083 1.8964 -0.2429 0.9983 0.9994 0.9689 0.0067 0.0132 0.0051
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0715 
 + --- dist(#3,#1) = 0.0677 
 + --- dist(#4,#1) = 0.0968 
 + --- dist(#5,#1) = 0.116 
 + --- dist(#6,#1) = 0.173 
 + --- dist(#7,#1) = 0.0841 
 + --- dist(#8,#1) = 0.0991 
 + --- dist(#9,#1) = 0.0713 
 + --- dist(#10,#1) = 0.193 
 + --- dist(#11,#1) = 0.131 
 + --- dist(#12,#1) = 0.35 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 283.774 .. 1057.78; base clip 196.369 .. 741.048
 +  - versus source range 6.47001e-05 .. 943.159; base range 0 .. 907.129
 + 35372 total points stored in 348 'RHDD(12.2051)' bloks
 + - param set #1 has cost=0.383302
 + -- Parameters = -3.3518 2.7719 -1.6238 -1.2404 1.3154 -0.5304 1.0031 1.0177 0.9689 0.0079 0.0182 0.0044
 + - param set #2 has cost=0.385790
 + -- Parameters = -3.4027 0.3559 -0.1463 -1.5053 -0.2433 -0.6515 0.9892 1.0083 0.9870 -0.0026 0.0297 0.0016
 + - param set #3 has cost=0.388629
 + -- Parameters = -2.5302 -0.9340 0.5410 0.0478 -1.5894 -0.2114 0.9978 1.0064 0.9895 -0.0087 0.0040 -0.0083
 + - param set #4 has cost=0.394196
 + -- Parameters = -1.7207 -1.5147 0.8689 0.4016 -1.9240 -0.7776 0.9875 1.0022 0.9980 0.0099 0.0091 -0.0113
 + - param set #5 has cost=0.403553
 + -- Parameters = -5.2804 -5.1599 2.2499 -1.9785 -4.4810 1.0971 0.9833 1.0064 1.0044 0.0023 0.0016 -0.0175
 + - param set #6 has cost=0.405169
 + -- Parameters = -4.9262 -5.5875 2.3384 -1.9205 -4.2535 0.5267 0.9798 1.0010 0.9937 0.0095 -0.0151 -0.0132
 + - param set #7 has cost=0.389815
 + -- Parameters = 0.4790 1.2063 -1.1689 0.7609 -0.5765 -3.3274 0.9895 1.0234 0.9594 -0.0134 0.0565 -0.0078
 + - param set #8 has cost=0.397598
 + -- Parameters = -4.4380 -0.6210 -0.8292 -1.9968 0.2984 -0.3470 1.0057 0.9895 0.9975 -0.0000 0.0298 -0.0071
 + - param set #9 has cost=0.406778
 + -- Parameters = -1.9907 3.2899 -2.6341 0.4664 2.6229 -0.3980 1.0012 0.9939 0.9417 -0.0299 0.0209 0.0241
 + - param set #10 has cost=0.406479
 + -- Parameters = -1.5780 -2.1647 -4.0329 0.2726 -0.6549 -0.8986 0.9755 0.9431 0.9095 0.0067 0.0180 -0.0509
 + - param set #11 has cost=0.468219
 + -- Parameters = -2.1753 6.8034 -8.5995 -0.1509 9.7669 -1.3204 1.0282 0.9539 0.9846 0.0326 0.0141 -0.0042
 + - param set #12 has cost=0.574457
 + -- Parameters = 8.8876 -7.2325 -0.6032 -10.0431 -12.9962 -31.6561 0.9645 0.9676 0.9415 -0.0024 -0.0195 -0.0075
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0517 
 + --- dist(#3,#1) = 0.0747 
 + --- dist(#4,#1) = 0.172 
 + --- dist(#5,#1) = 0.0794 
 + --- dist(#6,#1) = 0.0779 
 + --- dist(#7,#1) = 0.0991 
 + --- dist(#8,#1) = 0.15 
 + --- dist(#9,#1) = 0.249 
 + --- dist(#10,#1) = 0.17 
 + --- dist(#11,#1) = 0.174 
 + --- dist(#12,#1) = 0.346 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + - using 40224 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 284.356 .. 1066.98; base clip 196.533 .. 753.237
 +  - versus source range 0 .. 943.16; base range 0 .. 907.575
 + 35973 total points stored in 366 'RHDD(12.1215)' bloks
 + - param set #1 has cost=0.408549
 + -- Parameters = -3.3032 2.6883 -1.5386 -1.1467 1.3250 -0.6708 0.9993 1.0181 0.9694 0.0074 0.0221 0.0041
 + - param set #2 has cost=0.406241
 + -- Parameters = -2.8041 1.4768 -0.3876 -0.7887 -0.0579 -0.9260 0.9862 1.0195 0.9856 -0.0023 0.0288 0.0001
 + - param set #3 has cost=0.408869
 + -- Parameters = -2.5983 -0.7858 0.5277 0.0243 -1.6352 -0.1978 0.9973 1.0104 0.9892 -0.0101 0.0083 -0.0086
 + - param set #4 has cost=0.405485
 + -- Parameters = -0.6550 1.6541 -1.4503 0.5806 -0.7111 -2.4575 0.9924 1.0345 0.9583 -0.0148 0.0581 -0.0128
 + - param set #5 has cost=0.414746
 + -- Parameters = -1.9068 -1.5956 0.8170 0.2992 -1.9922 -0.6903 0.9869 1.0103 0.9978 0.0098 0.0087 -0.0113
 + - param set #6 has cost=0.410287
 + -- Parameters = -4.0540 1.0683 -1.4155 -1.5184 -0.1985 -0.0681 1.0006 1.0046 0.9806 -0.0024 0.0273 -0.0219
 + - param set #7 has cost=0.418776
 + -- Parameters = -4.7606 -4.6675 2.0399 -2.0736 -4.1429 0.4237 0.9761 1.0108 1.0003 0.0017 0.0061 -0.0211
 + - param set #8 has cost=0.419820
 + -- Parameters = -4.6301 -4.0747 1.2360 -1.5400 -3.0346 0.9595 0.9827 1.0052 0.9961 0.0087 -0.0034 -0.0129
 + - param set #9 has cost=0.422942
 + -- Parameters = -1.7152 -1.1206 -3.8267 0.6627 -0.8309 -0.3425 0.9786 0.9615 0.9119 0.0071 0.0172 -0.0509
 + - param set #10 has cost=0.414881
 + -- Parameters = -2.0316 1.2769 -2.2727 0.0589 2.1997 -0.9163 1.0002 0.9979 0.9409 -0.0314 0.0197 0.0242
 + - param set #11 has cost=0.474444
 + -- Parameters = -2.3474 5.5645 -7.4733 0.5058 8.3723 0.8339 1.0242 0.9542 0.9829 0.0334 0.0111 -0.0005
 + - param set #12 has cost=0.577219
 + -- Parameters = 8.8633 -7.1496 -0.5681 -9.8128 -12.9596 -31.4780 0.9647 0.9668 0.9419 0.0013 -0.0196 -0.0070
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.132 
 + --- dist(#3,#1) = 0.162 
 + --- dist(#4,#1) = 0.224 
 + --- dist(#5,#1) = 0.139 
 + --- dist(#6,#1) = 0.222 
 + --- dist(#7,#1) = 0.173 
 + --- dist(#8,#1) = 0.234 
 + --- dist(#9,#1) = 0.277 
 + --- dist(#10,#1) = 0.198 
 + --- dist(#11,#1) = 0.218 
 + --- dist(#12,#1) = 0.35 
 + - Total coarse refinement net CPU time = 0.0 s; 3378 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=35.61 usiz=512.549
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 287.605 .. 1083.39; base clip 196.533 .. 753.237
 +  - versus source range 0 .. 943.52; base range 0 .. 908.14
 + 36375 total points stored in 376 'RHDD(12.0364)' bloks
 + - cost(#1)=0.418333 *
 + -- Parameters = -0.6550 1.6541 -1.4503 0.5806 -0.7111 -2.4575 0.9924 1.0345 0.9583 -0.0148 0.0581 -0.0128
 + - cost(#2)=0.419625  
 + -- Parameters = -2.8041 1.4768 -0.3876 -0.7887 -0.0579 -0.9260 0.9862 1.0195 0.9856 -0.0023 0.0288 0.0001
 + - cost(#3)=0.424608  
 + -- Parameters = -3.3032 2.6883 -1.5386 -1.1467 1.3250 -0.6708 0.9993 1.0181 0.9694 0.0074 0.0221 0.0041
 + - cost(#4)=0.420220  
 + -- Parameters = -2.5983 -0.7858 0.5277 0.0243 -1.6352 -0.1978 0.9973 1.0104 0.9892 -0.0101 0.0083 -0.0086
 + - cost(#5)=0.425281  
 + -- Parameters = -4.0540 1.0683 -1.4155 -1.5184 -0.1985 -0.0681 1.0006 1.0046 0.9806 -0.0024 0.0273 -0.0219
 + - cost(#6)=0.426834  
 + -- Parameters = -1.9068 -1.5956 0.8170 0.2992 -1.9922 -0.6903 0.9869 1.0103 0.9978 0.0098 0.0087 -0.0113
 + - cost(#7)=0.425694  
 + -- Parameters = -2.0316 1.2769 -2.2727 0.0589 2.1997 -0.9163 1.0002 0.9979 0.9409 -0.0314 0.0197 0.0242
 + - cost(#8)=0.429773  
 + -- Parameters = -4.7606 -4.6675 2.0399 -2.0736 -4.1429 0.4237 0.9761 1.0108 1.0003 0.0017 0.0061 -0.0211
 + - cost(#9)=0.432309  
 + -- Parameters = -4.6301 -4.0747 1.2360 -1.5400 -3.0346 0.9595 0.9827 1.0052 0.9961 0.0087 -0.0034 -0.0129
 + - cost(#10)=0.432839  
 + -- Parameters = -1.7152 -1.1206 -3.8267 0.6627 -0.8309 -0.3425 0.9786 0.9615 0.9119 0.0071 0.0172 -0.0509
 + - cost(#11)=0.485271  
 + -- Parameters = -2.3474 5.5645 -7.4733 0.5058 8.3723 0.8339 1.0242 0.9542 0.9829 0.0334 0.0111 -0.0005
 + - cost(#12)=0.577833  
 + -- Parameters = 8.8633 -7.1496 -0.5681 -9.8128 -12.9596 -31.4780 0.9647 0.9668 0.9419 0.0013 -0.0196 -0.0070
 + - cost(#13)=0.569869  
 + -- Parameters = -2.8941 5.0860 -4.5232 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.415988 *
 + -- Parameters = -1.0080 1.7181 -1.5844 0.2184 -0.5896 -2.3955 0.9927 1.0331 0.9579 -0.0203 0.0582 -0.0126
 + - cost(#2)=0.417857  
 + -- Parameters = -2.8261 1.5385 -0.4056 -0.7664 -0.0356 -0.9556 0.9865 1.0206 0.9844 -0.0061 0.0289 -0.0001
 + - cost(#3)=0.421412  
 + -- Parameters = -3.0602 2.2685 -1.3832 -0.7568 0.8058 -0.6634 0.9996 1.0194 0.9673 0.0009 0.0220 0.0030
 + - cost(#4)=0.417864  
 + -- Parameters = -2.5591 -1.0111 0.3586 0.0410 -1.5772 -0.1801 0.9954 1.0118 0.9873 -0.0138 0.0079 -0.0085
 + - cost(#5)=0.419634  
 + -- Parameters = -3.4769 0.6267 -1.2492 -1.1563 -0.7344 -0.4593 0.9946 1.0093 0.9771 -0.0038 0.0261 -0.0255
 + - cost(#6)=0.424339  
 + -- Parameters = -1.8263 -1.6172 0.7481 0.4101 -1.9094 -0.5927 0.9854 1.0097 0.9959 0.0056 0.0094 -0.0115
 + - cost(#7)=0.422486  
 + -- Parameters = -2.1970 1.3534 -1.8570 0.2207 1.7076 -0.3949 0.9979 1.0019 0.9412 -0.0314 0.0139 0.0234
 + - cost(#8)=0.418406  
 + -- Parameters = -3.4052 -2.1971 1.1274 -0.5815 -3.5017 0.5158 0.9661 1.0273 0.9865 0.0022 0.0087 -0.0197
 + - cost(#9)=0.424192  
 + -- Parameters = -4.1073 -3.0830 1.4719 -1.1040 -3.2942 0.6888 0.9815 1.0178 0.9877 0.0076 -0.0017 -0.0113
 + - cost(#10)=0.430913  
 + -- Parameters = -1.9217 -1.1659 -3.7773 0.4218 -0.9047 -0.3812 0.9805 0.9680 0.9123 0.0064 0.0173 -0.0504
 + - cost(#11)=0.483165  
 + -- Parameters = -2.3350 5.1729 -7.3672 0.5717 8.1543 0.8535 1.0311 0.9545 0.9817 0.0329 0.0107 -0.0004
 + - cost(#12)=0.577395  
 + -- Parameters = 8.9237 -7.1839 -0.5122 -9.8161 -13.0694 -31.4972 0.9647 0.9670 0.9413 0.0050 -0.0197 -0.0068
 + - cost(#13)=0.427662  
 + -- Parameters = -3.0666 1.9607 -0.8267 -0.2135 1.3209 0.2682 0.9976 1.0008 0.9906 -0.0017 0.0013 0.0040
 + - case #1 is now the best
 + - Initial  cost = 0.415988
 + - Initial fine Parameters = -1.0080 1.7181 -1.5844 0.2184 -0.5896 -2.3955 0.9927 1.0331 0.9579 -0.0203 0.0582 -0.0126
 + - Finalish cost = 0.415091 ; 170 funcs
 + - ini Finalish Parameters = -1.0506 1.6721 -1.5781 0.2069 -0.6725 -2.2883 0.9922 1.0334 0.9574 -0.0245 0.0582 -0.0136
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 287.837 .. 1083.47; base clip 196.533 .. 753.237
 +  - versus source range 0 .. 943.52; base range 0 .. 908.14
*[#15821=-0.165184] *[#15840=-0.165583] *[#15843=-0.166008] *[#15855=-0.166116] *[#15879=-0.166184] *[#15882=-0.166191] *[#15883=-0.166315] *[#15887=-0.166393] *[#15890=-0.166501] *[#15891=-0.166695] *[#15894=-0.166856] *[#15895=-0.166857] *[#15897=-0.166942] *[#15901=-0.167083] *[#15908=-0.167177] *[#15909=-0.167273] *[#15910=-0.167336] *[#15911=-0.16734] *[#15920=-0.167343] *[#15929=-0.167365] *[#15931=-0.167498] *[#15932=-0.167524] *[#15935=-0.167609] *[#15938=-0.16767] *[#15939=-0.167727] *[#15944=-0.167796] *[#15945=-0.167826] *[#15946=-0.167917] *[#15947=-0.167977] *[#15948=-0.168032] *[#15949=-0.168103] *[#15950=-0.168171] *[#15955=-0.168385] *[#15956=-0.168593] *[#15959=-0.168675] *[#15960=-0.168711] *[#15963=-0.168748] *[#15966=-0.168856] *[#15971=-0.168867] *[#15973=-0.168889] *[#15978=-0.168995] *[#15979=-0.169092] *[#15980=-0.169198] *[#15983=-0.169353] *[#15984=-0.169444] *[#15985=-0.169508] *[#15990=-0.169777] *[#15991=-0.169976] *[#15992=-0.170229] *[#15993=-0.170366] *[#15994=-0.170725] *[#15995=-0.170937] *[#15998=-0.171023] *[#15999=-0.171033] *[#16017=-0.171113] *[#16020=-0.171151] *[#16022=-0.17122] *[#16029=-0.171287] *[#16030=-0.171292] *[#16033=-0.171332] *[#16036=-0.171438] *[#16043=-0.171531] *[#16044=-0.171539] *[#16048=-0.171575] *[#16053=-0.17164] *[#16056=-0.171654] *[#16066=-0.171694] *[#16069=-0.171745] *[#16074=-0.171778] *[#16075=-0.171806] *[#16078=-0.171893] *[#16085=-0.171964] *[#16086=-0.172017] *[#16087=-0.172022] *[#16089=-0.172051] *[#16094=-0.17206] *[#16099=-0.172086] *[#16101=-0.172104] *[#16106=-0.172125] *[#16107=-0.172189] *[#16112=-0.172239] *[#16113=-0.172244] *[#16117=-0.172267] *[#16118=-0.172308] *[#16123=-0.172311] *[#16131=-0.172357] *[#16132=-0.172363] *[#16141=-0.172376] *[#16148=-0.172394] *[#16150=-0.172469] *[#16155=-0.172549] *[#16162=-0.172563] *[#16165=-0.172616] *[#16166=-0.172633] *[#16167=-0.17272] *[#16168=-0.172754] *[#16173=-0.172869] *[#16174=-0.172871] *[#16178=-0.172887] *[#16179=-0.172975] *[#16182=-0.173] *[#16201=-0.173006] *[#16204=-0.173069] *[#16205=-0.173073] *[#16207=-0.173077] *[#16209=-0.1731] *[#16212=-0.173119] *[#16214=-0.173169] *[#16217=-0.173205] *[#16218=-0.173214] *[#16219=-0.173275] *[#16220=-0.173293] *[#16221=-0.17332] *[#16224=-0.173389] *[#16227=-0.173425] *[#16228=-0.17343] *[#16232=-0.173477] *[#16233=-0.173525] *[#16234=-0.173614] *[#16241=-0.173653] *[#16242=-0.173667] *[#16247=-0.173765] *[#16248=-0.173766] *[#16254=-0.173785] *[#16255=-0.173801] *[#16256=-0.173824] *[#16259=-0.173843] *[#16262=-0.173852] *[#16264=-0.173869] *[#16265=-0.173879] *[#16268=-0.173901] *[#16271=-0.173903] *[#16275=-0.173906] *[#16279=-0.173909] *[#16287=-0.173935] *[#16296=-0.173961] *[#16301=-0.173975] *[#16306=-0.173979] *[#16319=-0.174007] *[#16324=-0.174018] *[#16327=-0.174021] *[#16329=-0.174028] *[#16338=-0.174051] *[#16341=-0.174059] *[#16342=-0.17407] *[#16347=-0.174114] *[#16352=-0.17416] *[#16353=-0.174167] *[#16356=-0.17419] *[#16361=-0.174203] *[#16362=-0.174235] *[#16365=-0.174238] *[#16368=-0.174245] *[#16372=-0.174312] *[#16377=-0.174365] *[#16378=-0.174374] *[#16379=-0.174388] *[#16386=-0.174398] *[#16388=-0.174439] *[#16393=-0.174493] *[#16394=-0.174502] *[#16395=-0.174532] *[#16406=-0.174537] *[#16408=-0.174576] *[#16411=-0.1746] *[#16420=-0.17461] *[#16422=-0.174644] *[#16423=-0.174689] *[#16434=-0.174694] *[#16435=-0.17475] *[#16436=-0.174814] *[#16437=-0.174828] *[#16438=-0.17488] *[#16439=-0.174934] *[#16442=-0.175009] *[#16445=-0.175017] *[#16448=-0.175032] *[#16449=-0.175055] *[#16456=-0.175059] *[#16458=-0.175061] *[#16462=-0.17509] *[#16467=-0.175118] *[#16468=-0.175139] *[#16479=-0.175168] *[#16480=-0.175178] *[#16511=-0.175179] *[#16514=-0.175189] *[#16515=-0.175191] *[#16518=-0.175192] *[#16519=-0.175193] *[#16526=-0.175196] *[#16530=-0.175198] *[#16531=-0.175201] *[#16540=-0.175202] *[#16541=-0.175202] *[#16546=-0.175204] *[#16557=-0.175204] *[#16560=-0.175205] *[#16561=-0.175206] *[#16562=-0.175206] *[#16565=-0.175207] *[#16568=-0.175209] *[#16573=-0.17521] *[#16574=-0.175211] *[#16575=-0.175211] *[#16576=-0.175212] *[#16579=-0.175215] *[#16582=-0.175216] *[#16583=-0.17522] *[#16584=-0.175225] *[#16585=-0.175228] *[#16586=-0.175232] *[#16587=-0.175236] *[#16588=-0.175241] *[#16589=-0.175244] *[#16592=-0.17526] *[#16593=-0.175267] *[#16596=-0.175268] *[#16597=-0.175276] *[#16598=-0.175283] *[#16600=-0.175294] *[#16602=-0.175295] *[#16603=-0.175299] *[#16604=-0.175302] *[#16605=-0.175304] *[#16608=-0.175305] *[#16609=-0.175306] *[#16610=-0.175312] *[#16611=-0.175317] *[#16612=-0.175323] *[#16613=-0.175333] *[#16614=-0.175354] *[#16619=-0.175364] *[#16620=-0.175369] *[#16623=-0.17537] *[#16624=-0.175373] *[#16625=-0.175376] *[#16626=-0.175378] *[#16627=-0.175379] *[#16628=-0.175381] *[#16629=-0.175387] *[#16630=-0.17539] *[#16631=-0.175395] *[#16632=-0.175401] *[#16633=-0.175403] *[#16634=-0.175407] *[#16635=-0.175416] *[#16636=-0.175424] *[#16637=-0.175432] *[#16638=-0.175443] *[#16639=-0.175456] *[#16640=-0.175475] *[#16641=-0.175481] *[#16642=-0.175498] *[#16645=-0.175502] *[#16647=-0.175509] *[#16650=-0.175514] *[#16651=-0.175524] *[#16652=-0.175534] *[#16653=-0.175552] *[#16656=-0.175555] *[#16660=-0.175564] *[#16663=-0.175568] *[#16666=-0.175569] *[#16669=-0.175571] *[#16672=-0.175573] *[#16675=-0.175576] *[#16676=-0.175577] *[#16677=-0.175579] *[#16678=-0.175585] *[#16679=-0.175592] *[#16684=-0.175597] *[#16685=-0.1756] *[#16686=-0.175601] *[#16687=-0.175605] *[#16688=-0.175608] *[#16689=-0.175611] *[#16690=-0.175614] *[#16691=-0.175615] *[#16692=-0.17562] *[#16693=-0.175623] *[#16694=-0.175627] *[#16695=-0.175628] *[#16696=-0.175633] *[#16701=-0.175646] *[#16702=-0.175652] *[#16705=-0.175654] *[#16706=-0.175658] *[#16707=-0.175665] *[#16710=-0.175668] *[#16714=-0.175668] *[#16716=-0.175669] *[#16717=-0.175671] *[#16718=-0.175673] *[#16719=-0.175674] *[#16723=-0.175677] *[#16724=-0.175678] *[#16725=-0.175681] *[#16726=-0.175683] *[#16727=-0.175691] *[#16730=-0.175695] *[#16731=-0.175697] *[#16734=-0.175698] *[#16736=-0.175703] *[#16748=-0.175706] *[#16749=-0.175709] *[#16750=-0.175711] *[#16751=-0.175714] *[#16752=-0.175717] *[#16757=-0.175724] *[#16762=-0.175725] *[#16763=-0.175728] *[#16764=-0.175733] *[#16765=-0.175739] *[#16771=-0.175739] *[#16772=-0.175744] *[#16773=-0.175745] *[#16774=-0.175747] *[#16775=-0.175748] *[#16776=-0.175749] *[#16777=-0.175751] *[#16778=-0.175753] *[#16781=-0.175754] *[#16783=-0.175756] *[#16786=-0.175757] *[#16787=-0.175758] *[#16788=-0.175761] *[#16789=-0.175761] *[#16790=-0.175763] *[#16791=-0.175766] *[#16792=-0.175768] *[#16793=-0.175772] *[#16794=-0.175774] *[#16797=-0.175777] *[#16800=-0.175778] *[#16801=-0.175781] *[#16802=-0.175782] *[#16803=-0.175785] *[#16804=-0.175789] *[#16813=-0.175791] *[#16816=-0.175793] *[#16817=-0.175794] *[#16818=-0.175797] *[#16825=-0.175797] *[#16826=-0.175799] *[#16827=-0.175799] *[#16834=-0.1758] *[#16836=-0.175803] *[#16839=-0.175803] *[#16841=-0.175805] *[#16846=-0.175807] *[#16849=-0.175807] *[#16852=-0.17581] *[#16855=-0.17581] *[#16859=-0.175811] *[#16864=-0.175813] *[#16865=-0.175814] *[#16866=-0.175815] *[#16867=-0.175816] *[#16872=-0.17582] *[#16873=-0.17582] *[#16874=-0.175821] *[#16877=-0.175822] *[#16878=-0.175822] *[#16883=-0.175825] *[#16886=-0.175825] *[#16893=-0.175827] *[#16895=-0.175828] *[#16896=-0.175829] *[#16899=-0.175832] *[#16900=-0.175832] *[#16902=-0.175832] *[#16903=-0.175833] *[#16912=-0.175835] *[#16913=-0.175835] *[#16914=-0.175836] *[#16915=-0.175836] *[#16918=-0.175839] *[#16919=-0.175839] *[#16921=-0.175842] *[#16924=-0.175843] *[#16925=-0.175845] *[#16928=-0.175845] *[#16929=-0.175848] *[#16930=-0.175849] *[#16931=-0.175853] *[#16932=-0.175856] *[#16935=-0.175857] *[#16937=-0.175858] *[#16940=-0.17586] *[#16941=-0.175861] *[#16943=-0.175862] *[#16944=-0.175864] *[#16947=-0.175866] *[#16954=-0.175868] *[#16955=-0.175869] *[#16956=-0.17587] *[#16957=-0.175872] *[#16958=-0.175873] *[#16959=-0.175875] *[#16960=-0.175876] *[#16965=-0.175877] *[#16967=-0.175879] *[#16970=-0.17588] *[#16971=-0.175881] *[#16976=-0.175881] *[#16979=-0.175883] *[#16980=-0.175883] *[#16984=-0.175886] *[#16989=-0.175887] *[#16992=-0.175888] *[#16993=-0.175889] *[#16994=-0.17589] *[#16995=-0.175891] *[#16996=-0.175894] *[#16997=-0.175896] *[#16998=-0.175902] *[#16999=-0.175907] *[#17000=-0.175911] *[#17005=-0.175933] *[#17009=-0.175934] *[#17010=-0.175941] *[#17011=-0.175948] *[#17012=-0.175957] *[#17013=-0.17596] *[#17014=-0.175968] *[#17015=-0.175973] *[#17016=-0.17598] *[#17021=-0.17598] *[#17025=-0.175984] *[#17026=-0.175987] *[#17027=-0.175992] *[#17034=-0.175992] *[#17041=-0.175995] *[#17042=-0.175996] *[#17043=-0.175996] *[#17044=-0.175997] *[#17045=-0.175999] *[#17048=-0.176001] *[#17049=-0.176003] *[#17050=-0.176004] *[#17051=-0.176005] *[#17052=-0.176007] *[#17053=-0.176011] *[#17056=-0.176013] *[#17059=-0.176014] *[#17062=-0.176015] *[#17065=-0.176015] *[#17069=-0.176018] *[#17070=-0.17602] *[#17073=-0.176021] *[#17074=-0.176022] *[#17079=-0.176022] *[#17081=-0.176024] *[#17094=-0.176024] *[#17099=-0.176025] *[#17100=-0.176025] *[#17101=-0.176026] *[#17106=-0.176029] *[#17107=-0.17603] *[#17108=-0.17603] *[#17110=-0.176031] *[#17113=-0.176033] *[#17114=-0.176033] *[#17117=-0.176034] *[#17118=-0.176035] *[#17121=-0.176035] *[#17122=-0.176036] *[#17123=-0.176036] *[#17125=-0.176036] *[#17127=-0.176037] *[#17128=-0.176037] *[#17142=-0.176038] *[#17147=-0.176039] *[#17158=-0.176039] *[#17162=-0.176039] *[#17164=-0.176039] *[#17167=-0.17604] *[#17170=-0.17604] *[#17175=-0.17604] *[#17178=-0.176041] *[#17179=-0.176041] *[#17182=-0.176042] *[#17187=-0.176042] *[#17199=-0.176043] *[#17212=-0.176043] *[#17215=-0.176044] *[#17226=-0.176046] *[#17229=-0.176046] *[#17231=-0.176047] *[#17232=-0.176047] *[#17238=-0.176048] *[#17241=-0.176049] *[#17242=-0.176049] *[#17262=-0.17605] *[#17269=-0.176051] *[#17272=-0.176052] *[#17275=-0.176053] *[#17284=-0.176054] *[#17287=-0.176054] *[#17289=-0.176055] *[#17292=-0.176055] *[#17293=-0.176055] *[#17297=-0.176056] *[#17298=-0.176057] *[#17305=-0.176058] *[#17326=-0.176058] *[#17335=-0.176059] *[#17342=-0.176059] *[#17352=-0.176059] *[#17365=-0.176059] *[#17372=-0.176059] *[#17391=-0.17606] *[#17394=-0.17606] 
 + - Final    cost = -0.176060 ; 1636 funcs
 + Final fine fit Parameters:
       x-shift= -2.8498   y-shift=  2.1248   z-shift=  0.4708  ...  enorm=  3.5858 mm
       z-angle= -0.7879   x-angle= -0.5755   y-angle= -0.9481  ...  total=  1.3577 deg
       x-scale=  0.9870   y-scale=  1.0417   z-scale=  0.9798  ...  vol3D=  1.0074 = base smaller than source
     y/x-shear= -0.0773 z/x-shear=  0.0225 z/y-shear=  0.0159
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -2.8498 2.1248 0.4708 -0.7879 -0.5755 -0.9481 0.9870 1.0417 0.9798 -0.0773 0.0225 0.0159
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S31_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S31_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 56.3
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S31_unflipped_ob_temp_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.747056 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.747056 degrees from plumb.
++ Source dataset: ./anatSS.sub-S31_unflipped_ob_temp_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1474020 voxels in -source_automask+2
++ Zero-pad: ybot=7 ytop=6
++ Zero-pad: zbot=8 ztop=8
++ 40224 voxels [17.0%] in weight mask
++ Number of points for matching = 40224
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.439 38.092 22.726 (index)
 + source center of mass = 95.078 89.590 52.465 (index)
 + source-target CM = -0.238 4.687 -4.133 (xyz)
 + estimated center of mass shifts = -0.238 4.687 -4.133
++ shift param auto-range: -60.9..60.4 -68.5..77.9 -60.7..52.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.237877 .. 9.762123  center = -0.237877
 + Range param#2 [y-shift] = -5.313171 .. 14.686829  center = 4.686829
 + Range param#3 [z-shift] = -14.133144 .. 5.866856  center = -4.133144
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.237877 .. 39.762123  center = -0.237877
 + Range param#2 [y-shift] = -35.313171 .. 44.686829  center = 4.686829
 + Range param#3 [z-shift] = -44.133144 .. 35.866856  center = -4.133144
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -40.238 ..   39.762
 +       y-shift =  -35.313 ..   44.687
 +       z-shift =  -44.133 ..   35.867
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1474020 [out of 4423680] voxels
 + base mask has 53868 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=97.6223 usiz=481.218
 + - copying weight image
 + - using 40224 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 288.417 .. 1087.18; base clip 196.559 .. 761.065
 +  - versus source range 0.000232945 .. 1060.42; base range 0 .. 908.14
 + 36375 total points stored in 376 'RHDD(12.0364)' bloks
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S31_flip_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.747056 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.747056 degrees from plumb.
++ Source dataset: ./anatSS.sub-S31_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1463803 voxels in -source_automask+2
++ Zero-pad: ybot=7 ytop=6
++ Zero-pad: zbot=8 ztop=8
++ 40224 voxels [17.0%] in weight mask
++ Number of points for matching = 40224
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.439 38.092 22.726 (index)
 + source center of mass = 95.415 89.775 52.467 (index)
 + source-target CM = 0.099 4.502 -4.130 (xyz)
 + estimated center of mass shifts = 0.099 4.502 -4.130
++ shift param auto-range: -60.6..60.8 -68.7..77.7 -60.7..52.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.900948 .. 10.099052  center = 0.099052
 + Range param#2 [y-shift] = -5.497574 .. 14.502426  center = 4.502426
 + Range param#3 [z-shift] = -14.130421 .. 5.869579  center = -4.130421
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.900948 .. 40.099052  center = 0.099052
 + Range param#2 [y-shift] = -35.497574 .. 44.502426  center = 4.502426
 + Range param#3 [z-shift] = -44.130421 .. 35.869579  center = -4.130421
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -39.901 ..   40.099
 +       y-shift =  -35.498 ..   44.502
 +       z-shift =  -44.130 ..   35.870
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1463803 [out of 4423680] voxels
 + base mask has 53868 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=97.5086 usiz=481.401
 + - copying weight image
 + - using 40224 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 287.14 .. 1087.43; base clip 196.559 .. 761.065
 +  - versus source range 0.00100828 .. 1059.7; base range 0 .. 908.14
 + 36375 total points stored in 376 'RHDD(12.0364)' bloks
++ -allcostX1D finished
No flip cost is -0.561664 for lpc+ZZ cost function
Flip cost is -0.168281 for lpc+ZZ cost function
Data does not need flipping
#Script is running (command trimmed):
  cat_matvec -ONELINE ./anatSS.sub-S31_al_junk_e2a_only_mat.aff12.1D ./anatSS.sub-S31_unflipped_obla2e_mat.1D -I > ./anatSS.sub-S31_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./vr_base_ts_ns+orig -1Dmatrix_apply ./anatSS.sub-S31_al_junk_mat.aff12.1D -prefix ./anatSS.sub-S31_al_junk -input ./anatSS.sub-S31_unflipped+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.747056 degrees from plumb.
++ Source dataset: ./anatSS.sub-S31_unflipped+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 31.439 31.092 14.726 (index)
 + source center of mass = 129.828 102.636 115.732 (index)
 + source-target CM = 3.490 19.043 8.784 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =    3.490   19.043    8.784
 +  shift search range is +/- =   60.669   60.669   37.316
 +                                  5.8%    31.4%    23.5%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0002 0.0192 0.0299 31.4331 0.0351 -0.2083 -0.9716 168.4727 -0.0088 0.9892 -0.1952 38.2983
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S31_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.7
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat anatSS.sub-S31+orig -suffix \
 _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask \
 -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./anatSS.sub-S31_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S31*

# Finished alignment successfully

if ( ! -f anatQQ.sub-S31+tlrc.HEAD ) then
foreach run ( 01 02 03 04 05 06 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.sub-S31.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.747056 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S31.r01.tshift+orig.BRIK is 12.747056 degrees from plumb.
++ Reading input dataset ./pb02.sub-S31.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 42267 voxels
 + 6005 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.282  pitch=-0.849  yaw=-0.128  dS=-0.128  dL=-0.256  dP=-0.036
++ Mean: roll=-0.132  pitch=-0.461  yaw=+0.182  dS=+0.177  dL=-0.118  dP=+0.031
++ Max : roll=+0.017  pitch=+0.308  yaw=+0.340  dS=+0.423  dL=+0.019  dP=+0.093
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.66(0.66) 0.57(0.09) 0.51(0.07) 0.39(0.13) 0.29(0.11) 0.25(0.05) 0.27(0.08) 0.29(0.05) 0.27(0.03) 0.27(0.02) 0.28(0.04) 0.26(0.06) 0.27(0.02) 0.28(0.03) 0.26(0.04) 0.27(0.03) 0.23(0.04) 0.24(0.01) 0.24(0.03) 0.20(0.07) 0.19(0.04) 0.16(0.07) 0.16(0.02) 0.17(0.04) 0.19(0.03) 0.19(0.06) 0.18(0.06) 0.15(0.06) 0.13(0.06) 0.13(0.05) 0.13(0.05) 0.19(0.07) 0.15(0.11) 0.15(0.06) 0.15(0.06) 0.14(0.03) 0.18(0.05) 0.17(0.04) 0.18(0.01) 0.23(0.07) 0.21(0.04) 0.19(0.03) 0.22(0.04) 0.18(0.10) 0.21(0.09) 0.27(0.07) 0.31(0.08) 0.43(0.13) 0.59(0.17) 0.53(0.06) 0.56(0.03) 0.64(0.08) 0.61(0.03) 0.60(0.03) 0.60(0.04) 0.60(0.03) 0.60(0.03) 0.64(0.04) 0.63(0.03) 0.62(0.05) 0.68(0.07) 0.66(0.02) 0.67(0.03) 0.63(0.05) 0.48(0.21) 0.69(0.24) 0.60(0.09) 0.64(0.04) 0.66(0.03) 0.78(0.12) 0.83(0.07) 0.78(0.05) 0.80(0.06) 0.86(0.06) 0.83(0.04) 0.85(0.07) 0.89(0.05) 0.94(0.05) 0.93(0.04) 0.80(0.14) 0.82(0.02) 0.79(0.03) 0.83(0.06) 0.87(0.05) 0.83(0.04) 0.79(0.05) 0.80(0.02) 0.83(0.04) 0.90(0.08) 1.09(0.20) 1.09(0.06) 1.10(0.06) 0.77(0.36) 0.26(0.68) 0.34(0.27) 0.40(0.09) 0.53(0.17) 0.57(0.05) 0.55(0.08) 0.57(0.07) 0.60(0.03) 0.63(0.08) 0.63(0.05) 0.64(0.03) 0.68(0.04) 0.69(0.02) 0.70(0.02) 0.67(0.04) 0.68(0.06) 0.64(0.05) 0.66(0.05) 0.69(0.04) 0.70(0.04) 0.77(0.07) 0.78(0.03) 0.76(0.07) 0.81(0.07) 0.78(0.04) 0.78(0.05) 0.83(0.09) 0.83(0.03) 0.83(0.03) 0.87(0.05) 0.85(0.07) 0.92(0.06) 0.97(0.06) 0.93(0.05) 0.97(0.05) 0.99(0.02) 1.01(0.03) 1.02(0.05) 1.05(0.04) 0.99(0.07) 0.99(0.05) 1.02(0.04) 0.97(0.06) 1.01(0.04) 1.00(0.04) 0.99(0.04) 1.00(0.02) 1.02(0.03) 1.01(0.02) 1.01(0.01) 1.05(0.07) 1.06(0.07) 1.14(0.07) 1.18(0.06) 1.20(0.04) 1.20(0.02) 1.20(0.03) 1.23(0.04) 1.23(0.04) 1.21(0.06) 1.23(0.03) 1.26(0.04) 1.30(0.06) 1.27(0.05) 1.22(0.06) 1.26(0.06) 1.33(0.07) 1.33(0.07) 1.38(0.06) 1.42(0.05) 1.37(0.04) 1.38(0.03) 1.41(0.04) 1.33(0.10) 1.36(0.06) 1.40(0.04) 1.33(0.08) 1.35(0.02) 1.37(0.02) 1.36(0.03) 1.37(0.04) 1.40(0.04) 1.40(0.05) 1.35(0.07) 1.36(0.05) 1.39(0.05) 1.36(0.04) 1.34(0.05) 1.40(0.06) 1.38(0.02) 1.36(0.04) 1.36(0.04) 1.38(0.03) 1.41(0.04) 1.42(0.05) 1.42(0.05) 1.43(0.04) 1.49(0.06) 1.51(0.04) 1.47(0.07) 1.48(0.02) 1.50(0.04) 1.49(0.02) 1.44(0.08) 1.48(0.07) 1.49(0.03) 1.43(0.10) 1.47(0.06) 1.49(0.04) 1.43(0.12) 1.45(0.03) 1.45(0.05) 1.38(0.08) 1.38(0.03) 1.41(0.04) 1.42(0.04) 1.45(0.04) 1.45(0.08) 1.45(0.03) 1.46(0.04) 1.47(0.05) 1.50(0.03) 1.49(0.05) 1.46(0.03) 1.48(0.04) 1.29(0.23) 1.31(0.10) 1.38(0.13) 1.35(0.05) 1.34(0.04) 1.37(0.04) 1.34(0.03) 1.35(0.04) 1.36(0.04) 1.35(0.04) 1.31(0.06) 1.37(0.09) 1.42(0.05) 1.36(0.08) 1.37(0.03) 1.42(0.06) 1.40(0.04) 1.36(0.05) 1.36(0.02) 1.40(0.05) 1.44(0.04) 1.40(0.07) 1.39(0.02) 1.41(0.03) 1.51(0.11) 1.48(0.07) 1.57(0.11) 1.62(0.06) 1.60(0.07) 1.72(0.13) 1.75(0.04) 1.82(0.07) 1.75(0.08) 1.40(0.37) 1.45(0.09) 1.49(0.05) 1.56(0.08) 1.51(0.10) 1.57(0.07) 1.56(0.05) 1.49(0.09) 1.50(0.05) 1.49(0.03) 1.49(0.03) 1.52(0.05) 1.52(0.02) 1.48(0.06) 1.51(0.05) 1.52(0.03) 1.50(0.05) 1.53(0.05) 1.53(0.04) 1.56(0.03) 1.57(0.04) 1.58(0.05) 1.60(0.07) 1.58(0.08) 1.61(0.05) 1.66(0.06) 1.67(0.04) 1.70(0.05) 1.73(0.04) 1.74(0.04) 1.86(0.12) 1.90(0.09) 1.90(0.04) 1.93(0.06) 1.70(0.26) 1.59(0.15) 1.63(0.08) 1.65(0.04) 1.67(0.03) 1.62(0.07) 1.61(0.03) 1.63(0.04) 1.65(0.08) 1.59(0.09) 1.59(0.01) 1.61(0.04) 1.54(0.08) 1.57(0.03) 1.59(0.07) 1.57(0.02) 1.58(0.02) 1.58(0.05) 1.61(0.04) 1.62(0.04) 1.62(0.04) 1.61(0.06) 1.61(0.03) 1.61(0.03) 1.63(0.04) 1.60(0.08) 1.65(0.06) 1.70(0.07) 1.69(0.05) 1.68(0.02) 1.69(0.06) 1.70(0.03) 1.67(0.06) 1.70(0.03) 1.70(0.03) 1.66(0.10) 1.68(0.06) 1.76(0.08) 1.74(0.07) 1.73(0.06) 1.76(0.05) 1.68(0.09) 1.64(0.05) 1.66(0.04) 0.96(0.81) 0.65(0.97) 0.54(0.12) 0.46(0.13) 0.42(0.09) 0.43(0.06) 0.43(0.09) 0.47(0.11) 0.53(0.11) 0.57(0.05) 0.60(0.06) 0.61(0.05) 0.60(0.05) 0.59(0.03) 0.61(0.04) 0.66(0.09) 0.73(0.12) 0.70(0.03) 0.70(0.02) 0.69(0.04) 0.66(0.05) 0.69(0.06) 0.71(0.06) 0.67(0.07) 0.72(0.06) 0.77(0.06) 0.76(0.06) 0.80(0.05) 0.85(0.07) 0.85(0.01) 0.86(0.02) 0.86(0.03) 0.89(0.03) 0.94(0.05) 0.94(0.04) 0.93(0.03) 0.96(0.09) 1.00(0.05) 0.97(0.05) 0.94(0.09) 1.00(0.08) 1.06(0.07) 1.07(0.05) 1.08(0.02) 1.09(0.06) 1.15(0.07) 1.18(0.04) 1.14(0.08) 1.13(0.04) 1.17(0.06) 1.21(0.06) 1.15(0.08) 1.14(0.03) 1.16(0.06) 1.18(0.03) 1.14(0.05) 1.18(0.05) 1.27(0.10) 1.33(0.08) 1.25(0.11) 1.22(0.04) 1.25(0.05) 1.25(0.04) 1.23(0.06) 1.26(0.03) 1.27(0.05) 1.25(0.03) 1.23(0.03) 1.26(0.04) 1.28(0.02) 1.23(0.06) 1.20(0.08) 1.22(0.05) 1.22(0.04) 1.24(0.03) 1.19(0.09) 1.26(0.07) 1.29(0.04) 1.28(0.01) 1.26(0.04) 1.29(0.05) 1.28(0.03)
++ Max displacement in automask = 1.93 (mm) at sub-brick 285
++ Max delta displ  in automask = 0.97 (mm) at sub-brick 331
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.sub-S31.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S31.aff12.1D anatSS.sub-S31_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source pb02.sub-S31.r01.tshift+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S31.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S31.r01.tshift+orig.BRIK is 12.747056 degrees from plumb.
++ opened source dataset 'pb02.sub-S31.r01.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1152892928
in use bytes     =  963342304
Total (incl. mmap):
system bytes     = 1152892928
in use bytes     =  963342304
max mmap regions =          1
max mmap bytes   =   94715904
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 1437.6 sec
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.747056 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1152892928
in use bytes     =  963342464
Total (incl. mmap):
system bytes     = 1152892928
in use bytes     =  963342464
max mmap regions =          1
max mmap bytes   =   94715904
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.sub-S31.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.747056 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S31.r02.tshift+orig.BRIK is 12.747056 degrees from plumb.
++ Reading input dataset ./pb02.sub-S31.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 42394 voxels
 + 6101 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.725  pitch=-1.209  yaw=-0.259  dS=+0.199  dL=-0.566  dP=-0.157
++ Mean: roll=-0.569  pitch=-1.023  yaw=-0.116  dS=+0.515  dL=-0.424  dP=+0.003
++ Max : roll=-0.317  pitch=-0.385  yaw=+0.191  dS=+0.784  dL=-0.251  dP=+0.082
++ Max displacements (mm) for each sub-brick:
 1.80(0.00) 1.20(0.74) 1.30(0.14) 1.38(0.13) 1.44(0.09) 1.41(0.03) 1.41(0.02) 1.47(0.07) 1.50(0.03) 1.52(0.03) 1.57(0.07) 1.69(0.16) 1.71(0.07) 1.69(0.04) 1.72(0.03) 1.78(0.07) 1.77(0.03) 1.79(0.07) 1.89(0.10) 2.04(0.16) 2.17(0.13) 2.20(0.03) 2.23(0.04) 2.26(0.03) 2.29(0.05) 2.29(0.03) 2.32(0.05) 2.32(0.04) 2.29(0.04) 2.28(0.02) 2.29(0.05) 2.30(0.03) 2.25(0.08) 2.23(0.04) 2.29(0.07) 2.35(0.06) 2.33(0.08) 2.39(0.07) 2.41(0.10) 2.37(0.07) 2.41(0.04) 2.47(0.12) 2.54(0.08) 2.51(0.09) 2.49(0.04) 2.50(0.05) 2.53(0.07) 2.57(0.05) 2.55(0.07) 2.56(0.06) 2.62(0.07) 2.62(0.05) 2.56(0.06) 2.52(0.10) 2.58(0.06) 2.64(0.07) 2.68(0.04) 2.64(0.06) 2.63(0.05) 2.66(0.03) 2.69(0.03) 2.69(0.05) 2.60(0.12) 2.60(0.06) 2.61(0.07) 2.59(0.06) 2.58(0.02) 2.58(0.08) 2.67(0.11) 2.72(0.05) 2.68(0.05) 2.69(0.03) 2.69(0.06) 2.72(0.07) 2.35(0.46) 1.93(0.43) 2.22(0.47) 2.15(0.18) 1.87(0.44) 1.76(0.16) 1.80(0.17) 1.93(0.16) 2.03(0.10) 2.07(0.08) 2.11(0.04) 2.11(0.06) 2.20(0.50) 2.43(0.25) 2.40(0.08) 2.30(0.11) 2.39(0.14) 2.43(0.15) 2.38(0.16) 2.49(0.13) 2.47(0.18) 2.32(0.15) 2.32(0.06) 2.45(0.18) 2.51(0.09) 2.45(0.11) 2.50(0.05) 2.52(0.03) 2.50(0.05) 2.50(0.05) 2.57(0.07) 2.59(0.04) 2.58(0.01) 2.58(0.04) 2.56(0.04) 2.56(0.03) 2.56(0.03) 2.53(0.04) 2.52(0.01) 2.48(0.04) 2.50(0.05) 2.49(0.04) 2.46(0.04) 2.46(0.05) 2.45(0.02) 2.45(0.05) 2.49(0.06) 2.50(0.02) 2.48(0.07) 2.48(0.05) 2.50(0.02) 2.43(0.08) 2.46(0.04) 2.51(0.06) 2.46(0.06) 2.46(0.05) 2.55(0.09) 2.54(0.06) 2.50(0.08) 2.58(0.09) 2.60(0.06) 2.60(0.03) 2.61(0.03) 2.65(0.05) 2.67(0.03) 2.68(0.02) 2.68(0.10) 2.68(0.04) 2.64(0.07) 2.63(0.06) 2.72(0.10) 2.77(0.06) 2.70(0.12) 2.70(0.08) 2.68(0.03) 2.65(0.03) 2.66(0.04) 2.67(0.04) 2.68(0.12) 2.70(0.06) 2.68(0.04) 2.63(0.06) 2.63(0.04) 2.66(0.08) 2.73(0.10) 2.73(0.03) 2.70(0.05) 2.71(0.06) 2.70(0.01) 2.68(0.06) 2.72(0.07) 2.78(0.08) 2.80(0.04) 2.76(0.06) 2.77(0.06) 2.82(0.06) 2.75(0.10) 2.76(0.05) 2.79(0.06) 2.73(0.06) 2.73(0.05) 2.79(0.07) 2.81(0.04) 2.79(0.03) 2.73(0.09) 2.77(0.04) 2.83(0.06) 2.83(0.02) 2.79(0.05) 2.81(0.03) 2.85(0.04) 2.90(0.05) 2.86(0.04) 2.83(0.07) 2.89(0.05) 2.91(0.05) 2.86(0.05) 2.82(0.05) 2.81(0.04) 2.86(0.07) 2.88(0.06) 2.82(0.11) 2.78(0.13) 2.79(0.06) 2.73(0.12) 2.76(0.06) 2.84(0.09) 2.83(0.02) 2.79(0.07) 2.82(0.06) 2.86(0.05) 2.84(0.09) 2.85(0.05) 2.83(0.04) 2.79(0.07) 2.81(0.09) 2.77(0.05) 2.74(0.04) 2.81(0.10) 2.79(0.07) 2.77(0.05) 2.76(0.06) 2.79(0.04) 2.79(0.05) 2.87(0.11) 2.91(0.04) 2.88(0.05) 2.86(0.05) 2.91(0.05) 2.91(0.05) 2.90(0.05) 2.90(0.06) 2.87(0.04) 2.89(0.05) 2.91(0.04) 2.89(0.08) 2.94(0.05) 2.91(0.06) 2.95(0.04) 2.88(0.11) 2.89(0.05) 2.96(0.08) 2.94(0.07) 2.87(0.12) 2.91(0.05) 2.94(0.10) 2.91(0.05) 2.85(0.08) 2.86(0.07) 2.87(0.04) 2.85(0.05) 2.85(0.07) 2.86(0.04) 2.89(0.07) 2.88(0.02) 2.83(0.08) 2.86(0.08) 2.87(0.04) 2.82(0.10) 2.85(0.08) 2.84(0.04) 2.79(0.08) 2.81(0.03) 2.85(0.06) 2.83(0.07) 2.84(0.08) 2.86(0.06) 2.81(0.10) 2.85(0.04) 2.85(0.03) 2.80(0.10) 2.81(0.04) 2.86(0.05) 2.83(0.05) 2.86(0.07) 2.85(0.02) 2.80(0.09) 2.86(0.07) 2.86(0.04) 2.82(0.09) 2.83(0.05) 2.86(0.06) 2.82(0.08) 2.87(0.04) 2.87(0.03) 2.83(0.10) 2.85(0.07) 2.88(0.06) 2.86(0.07) 2.92(0.07) 2.94(0.03) 2.91(0.09) 2.95(0.04) 2.95(0.05) 2.87(0.10) 2.84(0.06) 2.82(0.05) 2.82(0.05) 2.86(0.08) 2.83(0.06) 2.80(0.05) 2.80(0.06) 2.79(0.06) 2.81(0.06) 2.86(0.09) 2.85(0.02) 2.80(0.07) 2.82(0.04) 2.80(0.03) 2.78(0.04) 2.79(0.02) 2.80(0.05) 2.75(0.07) 2.79(0.05) 2.84(0.06) 2.77(0.10) 2.76(0.03) 2.81(0.07) 2.76(0.06) 2.71(0.06) 2.72(0.11) 2.71(0.04) 2.67(0.05) 2.67(0.04) 2.64(0.08) 2.65(0.03) 2.68(0.07) 2.65(0.03) 2.64(0.05) 2.68(0.07) 2.71(0.05) 2.71(0.05) 2.79(0.10) 2.77(0.02) 2.70(0.07) 2.74(0.09) 2.71(0.07) 2.66(0.08) 2.72(0.14) 2.74(0.06) 2.69(0.06) 2.69(0.02) 2.71(0.07) 2.72(0.04) 2.72(0.04) 2.79(0.08) 2.75(0.08) 2.71(0.08) 2.75(0.07) 2.77(0.03) 2.71(0.09) 2.78(0.09) 2.82(0.09) 2.76(0.09) 2.77(0.05) 2.83(0.09) 2.84(0.03) 2.81(0.10) 2.79(0.03) 2.85(0.15) 2.81(0.08) 2.77(0.04) 2.82(0.07) 2.74(0.10) 2.76(0.05) 2.82(0.09) 2.81(0.08) 2.83(0.03) 2.85(0.04) 2.81(0.09) 2.81(0.05) 2.88(0.07) 2.86(0.07) 2.81(0.07) 2.81(0.05) 2.79(0.09) 2.74(0.06) 2.75(0.04) 2.71(0.07) 2.75(0.05) 2.79(0.10) 2.71(0.10) 2.73(0.05) 2.78(0.07) 2.78(0.05) 2.79(0.04) 2.87(0.09) 2.91(0.05) 2.81(0.13) 2.84(0.05) 2.92(0.12) 2.70(0.25) 2.64(0.09) 2.78(0.18) 2.83(0.05) 2.82(0.09) 2.86(0.08) 2.88(0.03) 2.88(0.06) 2.94(0.12) 2.89(0.06) 2.82(0.09) 2.89(0.08) 2.84(0.05) 2.78(0.06) 2.83(0.05) 2.88(0.07) 2.82(0.07) 2.74(0.11) 2.72(0.08) 2.68(0.06) 2.70(0.03) 2.74(0.05) 2.67(0.07) 2.71(0.09) 2.78(0.10) 2.76(0.04) 2.75(0.06)
++ Max displacement in automask = 2.96 (mm) at sub-brick 235
++ Max delta displ  in automask = 0.74 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.sub-S31.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S31.aff12.1D anatSS.sub-S31_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source pb02.sub-S31.r02.tshift+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S31.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S31.r02.tshift+orig.BRIK is 12.747056 degrees from plumb.
++ opened source dataset 'pb02.sub-S31.r02.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1152892928
in use bytes     =  963342304
Total (incl. mmap):
system bytes     = 1152892928
in use bytes     =  963342304
max mmap regions =          1
max mmap bytes   =   94715904
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 1558.4 sec
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.747056 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1152892928
in use bytes     =  963342464
Total (incl. mmap):
system bytes     = 1152892928
in use bytes     =  963342464
max mmap regions =          1
max mmap bytes   =   94715904
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.sub-S31.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.747056 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S31.r03.tshift+orig.BRIK is 12.747056 degrees from plumb.
++ Reading input dataset ./pb02.sub-S31.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 42211 voxels
 + 6083 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.230  pitch=-1.144  yaw=-0.184  dS=+0.493  dL=-0.030  dP=+0.292
++ Mean: roll=-0.151  pitch=-0.844  yaw=+0.152  dS=+0.910  dL=+0.111  dP=+0.428
++ Max : roll=+0.066  pitch=-0.556  yaw=+0.525  dS=+1.195  dL=+0.232  dP=+0.598
++ Max displacements (mm) for each sub-brick:
 1.94(0.00) 1.73(0.32) 1.76(0.07) 1.84(0.08) 1.93(0.12) 2.05(0.13) 2.04(0.04) 2.06(0.03) 2.03(0.05) 2.00(0.06) 2.02(0.03) 2.05(0.05) 2.08(0.04) 2.06(0.05) 2.07(0.03) 2.07(0.06) 2.06(0.04) 2.07(0.03) 2.06(0.07) 2.10(0.07) 2.05(0.10) 2.08(0.06) 2.01(0.07) 2.09(0.09) 2.05(0.06) 2.08(0.07) 2.04(0.07) 2.06(0.09) 2.01(0.12) 2.04(0.11) 2.02(0.10) 2.07(0.08) 2.09(0.04) 2.13(0.07) 2.05(0.14) 1.98(0.10) 1.98(0.08) 1.98(0.07) 1.97(0.06) 1.91(0.06) 1.88(0.09) 1.95(0.12) 1.88(0.16) 1.91(0.08) 1.86(0.09) 1.82(0.08) 1.81(0.08) 1.78(0.10) 1.88(0.10) 1.90(0.05) 1.91(0.11) 1.95(0.10) 1.90(0.13) 1.90(0.08) 1.97(0.08) 2.00(0.10) 1.97(0.09) 1.99(0.08) 1.99(0.08) 2.01(0.11) 2.00(0.06) 2.04(0.08) 2.03(0.07) 2.00(0.06) 1.97(0.03) 2.03(0.06) 2.03(0.05) 2.04(0.03) 2.09(0.07) 2.05(0.06) 2.04(0.13) 2.07(0.09) 2.17(0.10) 2.19(0.09) 2.01(0.25) 2.19(0.27) 2.15(0.12) 2.17(0.06) 2.21(0.09) 2.19(0.12) 2.27(0.12) 2.28(0.09) 2.36(0.15) 2.34(0.04) 2.35(0.04) 2.30(0.05) 2.27(0.04) 2.29(0.08) 2.29(0.05) 2.35(0.06) 2.44(0.12) 2.61(0.18) 2.69(0.09) 2.64(0.07) 2.65(0.19) 2.72(0.14) 2.74(0.05) 2.71(0.24) 2.83(0.18) 2.79(0.12) 2.76(0.07) 2.63(0.14) 2.66(0.09) 2.67(0.07) 2.67(0.10) 2.62(0.10) 2.67(0.09) 2.68(0.04) 2.70(0.04) 2.66(0.11) 2.58(0.11) 2.60(0.08) 2.56(0.08) 2.55(0.04) 2.57(0.03) 2.55(0.07) 2.65(0.11) 2.67(0.04) 2.59(0.09) 2.54(0.06) 2.58(0.09) 2.43(0.16) 2.30(0.22) 2.62(0.34) 2.60(0.09) 2.51(0.09) 2.48(0.06) 2.44(0.05) 2.46(0.04) 2.46(0.04) 2.52(0.07) 2.44(0.08) 2.43(0.07) 2.41(0.07) 2.40(0.06) 2.36(0.12) 2.40(0.08) 2.35(0.07) 2.37(0.10) 2.32(0.10) 2.38(0.08) 2.35(0.07) 2.38(0.07) 2.31(0.08) 2.35(0.09) 2.37(0.05) 2.36(0.03) 2.38(0.04) 2.39(0.02) 2.44(0.06) 2.42(0.05) 2.45(0.05) 2.36(0.10) 2.48(0.12) 2.44(0.04) 2.47(0.04) 2.46(0.04) 2.45(0.07) 2.38(0.07) 2.41(0.05) 2.44(0.08) 2.48(0.05) 2.32(0.20) 2.25(0.14) 2.42(0.20) 2.29(0.16) 2.34(0.05) 2.34(0.03) 2.44(0.11) 2.36(0.09) 2.41(0.05) 2.40(0.04) 2.41(0.04) 2.38(0.05) 2.42(0.07) 2.38(0.07) 2.33(0.07) 2.31(0.05) 2.36(0.07) 2.28(0.09) 2.33(0.06) 2.33(0.04) 2.42(0.09) 2.42(0.03) 2.42(0.04) 2.39(0.04) 2.44(0.06) 2.40(0.07) 2.44(0.06) 2.41(0.06) 2.52(0.11) 2.40(0.13) 2.51(0.13) 2.56(0.13) 2.52(0.11) 2.55(0.10) 2.46(0.12) 2.54(0.09) 2.57(0.08) 2.67(0.10) 2.67(0.03) 2.65(0.06) 2.55(0.12) 2.54(0.07) 2.45(0.16) 2.28(0.25) 2.52(0.35) 2.41(0.13) 2.03(0.41) 1.70(0.40) 1.78(0.15) 1.90(0.12) 2.13(0.24) 2.15(0.11) 2.22(0.10) 2.31(0.18) 2.24(0.11) 2.33(0.12) 2.28(0.07) 2.31(0.05) 2.28(0.06) 2.34(0.06) 2.33(0.08) 2.44(0.12) 2.37(0.08) 2.41(0.08) 2.38(0.06) 2.40(0.05) 2.44(0.05) 2.44(0.03) 2.53(0.09) 2.56(0.12) 2.70(0.15) 2.68(0.04) 2.64(0.05) 2.70(0.06) 2.67(0.05) 2.72(0.09) 2.64(0.13) 2.68(0.07) 2.73(0.05) 2.72(0.03) 2.53(0.20) 2.47(0.11) 2.75(0.29) 2.69(0.13) 2.80(0.13) 2.79(0.07) 2.86(0.08) 2.83(0.06) 2.97(0.15) 2.85(0.14) 2.89(0.07) 2.88(0.07) 2.84(0.11) 2.80(0.07) 2.91(0.12) 2.93(0.04) 2.52(0.42) 2.64(0.17) 2.63(0.06) 2.73(0.10) 2.69(0.10) 2.90(0.25) 2.95(0.08) 2.81(0.15) 2.84(0.05) 2.75(0.11) 2.83(0.11) 2.81(0.07) 2.76(0.11) 2.66(0.11) 2.64(0.07) 2.71(0.08) 2.79(0.11) 2.81(0.11) 2.79(0.08) 2.81(0.11) 2.50(0.33) 2.47(0.14) 2.52(0.07) 2.60(0.11) 2.53(0.09) 2.48(0.07) 2.45(0.06) 2.46(0.03) 2.57(0.11) 2.55(0.02) 2.58(0.04) 2.58(0.04) 2.65(0.07) 2.58(0.08) 2.60(0.09) 2.58(0.06) 2.61(0.05)
++ Max displacement in automask = 2.97 (mm) at sub-brick 250
++ Max delta displ  in automask = 0.42 (mm) at sub-brick 258
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.sub-S31.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S31.aff12.1D anatSS.sub-S31_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source pb02.sub-S31.r03.tshift+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S31.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S31.r03.tshift+orig.BRIK is 12.747056 degrees from plumb.
++ opened source dataset 'pb02.sub-S31.r03.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1152851968
in use bytes     =  963296976
Total (incl. mmap):
system bytes     = 1152851968
in use bytes     =  963296976
max mmap regions =          1
max mmap bytes   =   94715904
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1159.6 sec
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.747056 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1152851968
in use bytes     =  963297136
Total (incl. mmap):
system bytes     = 1152851968
in use bytes     =  963297136
max mmap regions =          1
max mmap bytes   =   94715904
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -cubic -1Dmatrix_save mat.r04.vr.aff12.1D pb02.sub-S31.r04.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.747056 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S31.r04.tshift+orig.BRIK is 10.125178 degrees from plumb.
++ centers of base and input datasets are 8.92 mm apart
++ Reading input dataset ./pb02.sub-S31.r04.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 42044 voxels
 + 6048 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.711  pitch=-0.167  yaw=-0.112  dS=-0.149  dL=-1.565  dP=-1.929
++ Mean: roll=-1.369  pitch=+0.249  yaw=+0.724  dS=+1.580  dL=-1.179  dP=-1.528
++ Max : roll=-0.744  pitch=+0.771  yaw=+1.329  dS=+2.542  dL=-0.813  dP=-0.913
++ Max displacements (mm) for each sub-brick:
 3.84(0.00) 3.35(1.32) 3.41(0.17) 3.44(0.14) 3.51(0.07) 3.55(0.10) 3.64(0.09) 3.66(0.08) 3.73(0.11) 3.79(0.07) 3.80(0.07) 3.82(0.06) 3.85(0.04) 3.85(0.04) 3.89(0.05) 3.94(0.06) 3.89(0.11) 3.88(0.06) 3.91(0.06) 3.92(0.06) 3.93(0.05) 3.92(0.07) 3.93(0.06) 3.92(0.06) 3.92(0.16) 3.93(0.06) 3.87(0.16) 3.91(0.08) 3.99(0.08) 4.00(0.06) 4.04(0.11) 4.07(0.06) 4.10(0.11) 4.17(0.08) 4.17(0.08) 4.25(0.16) 4.29(0.07) 4.25(0.13) 4.26(0.08) 4.22(0.09) 4.22(0.05) 4.25(0.20) 4.30(0.35) 4.34(0.13) 4.37(0.05) 4.40(0.12) 4.39(0.05) 4.41(0.11) 4.43(0.12) 4.43(0.07) 4.42(0.07) 4.38(0.13) 4.42(0.09) 4.35(0.09) 4.29(0.19) 4.29(0.13) 4.35(0.17) 4.40(0.19) 4.42(0.31) 4.51(0.10) 4.53(0.15) 4.31(0.30) 4.26(0.18) 4.43(0.43) 4.49(0.09) 4.57(0.11) 4.56(0.13) 4.55(0.04) 4.57(0.09) 4.56(0.05) 4.55(0.15) 4.48(0.22) 4.43(0.20) 4.42(0.06) 4.46(0.09) 4.46(0.10) 4.40(0.28) 4.45(0.19) 4.47(0.06) 4.47(0.37) 4.51(0.18) 4.51(0.14) 4.49(0.27) 4.38(0.28) 4.42(0.22) 4.53(0.24) 4.56(0.09) 4.56(0.10) 4.55(0.04) 4.55(0.07) 4.58(0.20) 4.57(0.21) 4.57(0.15) 4.54(0.07) 4.53(0.16) 4.60(0.08) 4.50(0.16) 4.46(0.14) 4.58(0.29) 4.59(0.13) 4.51(0.19) 4.56(0.06) 4.73(0.27) 4.65(0.22) 4.58(0.11) 4.63(0.17) 4.50(0.18) 4.56(0.30) 4.52(0.27) 4.40(0.32) 4.47(0.25) 4.31(0.21) 4.23(0.36) 4.32(0.51) 4.31(0.10) 4.31(0.18) 4.23(0.18) 4.43(0.27) 4.33(0.13) 4.24(0.37) 4.33(0.24) 4.36(0.39) 4.50(0.16) 4.55(0.23) 4.54(0.18) 4.53(0.10) 4.52(0.06) 4.44(0.12) 4.39(0.15) 4.41(0.23) 4.38(0.18) 4.42(0.22) 4.29(0.18) 4.35(0.11) 4.32(0.13) 4.41(0.11) 4.49(0.18) 4.44(0.13) 4.20(0.28) 4.41(0.23) 4.54(0.44) 4.44(0.22) 4.40(0.13) 4.32(0.40) 4.15(0.44) 4.13(0.17) 4.21(0.18) 4.14(0.23) 4.09(0.13) 4.18(0.18) 4.30(0.42) 4.32(0.14) 4.49(0.25) 4.49(0.12) 4.35(0.29) 4.34(0.20) 4.26(0.11) 4.25(0.34) 4.32(0.22) 4.51(0.40) 4.61(0.15) 4.65(0.67) 4.01(1.08) 4.44(0.58) 5.05(0.73) 4.66(0.57) 4.80(0.24) 4.74(0.22) 4.77(0.20) 4.78(0.50) 4.34(0.52) 4.31(0.35) 4.38(0.13) 4.44(0.18) 4.53(0.11) 4.52(0.09) 4.60(0.15) 4.84(0.26) 4.63(0.56) 4.53(0.31) 4.76(0.27) 4.70(0.29) 4.73(0.07) 4.76(0.40) 4.77(0.27) 4.75(0.15) 4.67(0.23) 4.73(0.20) 4.74(0.08) 4.82(0.10) 4.86(0.19) 4.84(0.20) 4.81(0.18) 4.87(0.19) 4.76(0.45) 4.88(0.45) 4.70(0.61) 4.59(0.71) 4.72(0.47) 4.72(0.35) 4.73(0.42) 4.58(0.43) 4.65(0.18) 4.74(0.28) 4.68(0.15) 4.61(0.25) 4.74(0.23) 4.76(0.24) 4.80(0.23) 4.87(0.33) 4.79(0.26) 4.80(0.20) 4.84(0.10) 4.77(0.34) 4.84(0.50) 4.91(0.10) 4.91(0.14) 4.92(0.21) 4.98(0.27) 4.74(0.42) 4.90(0.26) 4.87(0.33) 4.87(0.25) 4.78(0.17) 4.89(0.20) 4.98(0.33) 4.98(0.38) 5.08(0.43) 4.88(0.28) 4.92(0.45) 4.77(0.29) 4.81(0.61) 4.78(0.58) 4.56(0.38) 4.72(0.24) 4.74(0.28) 4.86(0.21) 4.56(0.64) 4.39(0.45) 4.75(0.62) 5.07(0.59) 4.90(1.21) 4.71(0.63) 4.74(0.95) 4.80(0.37) 4.50(0.59) 4.71(0.75) 4.91(0.45) 5.03(0.20) 4.85(0.35) 4.68(0.43) 4.48(0.31) 4.41(1.01) 4.51(0.18) 4.45(0.73) 4.45(0.33) 4.34(0.45) 4.12(0.73) 4.18(0.24) 4.20(0.55) 4.47(0.76) 4.54(0.16) 4.39(0.36) 4.64(0.49) 4.47(0.44) 4.48(0.22) 4.50(0.20) 4.52(0.18) 4.38(0.40) 4.33(0.26) 4.33(0.08) 4.34(0.25) 4.30(0.09) 4.37(0.28) 4.50(0.28) 4.31(0.30) 4.35(0.50) 4.42(0.32) 4.45(0.10) 4.44(0.07) 4.42(0.16) 4.20(0.45) 4.35(0.51) 4.42(0.14) 4.39(0.17) 4.29(0.44) 4.21(0.30) 4.09(0.18) 4.02(0.16) 4.02(0.07) 4.02(0.12) 4.00(0.03) 3.95(0.06) 3.95(0.11) 3.96(0.09) 3.99(0.15) 3.98(0.11) 3.94(0.09) 3.90(0.06) 3.88(0.10) 3.88(0.03) 3.87(0.03) 3.89(0.05) 3.87(0.08) 3.84(0.03) 3.82(0.06) 3.81(0.09) 3.78(0.05) 3.73(0.13) 3.61(0.23) 3.79(0.29) 3.85(0.17) 3.93(0.24) 3.92(0.09) 4.04(0.37) 3.99(0.11) 3.98(0.07) 4.04(0.30) 4.14(0.47) 3.98(0.43) 3.97(0.07) 4.10(0.29) 4.06(0.15) 4.07(0.16) 4.19(0.50) 4.34(0.20) 4.13(0.30) 4.32(0.46) 4.25(0.16) 4.26(0.17) 4.18(0.26) 4.15(0.17) 4.17(0.05) 4.17(0.09) 4.14(0.07) 4.11(0.10) 4.11(0.12) 4.15(0.20) 4.06(0.19) 3.94(0.40) 4.06(0.26) 4.02(0.11) 4.05(0.07) 4.07(0.14) 4.07(0.20) 4.13(0.18) 4.15(0.07) 4.17(0.18) 4.09(0.20) 4.20(0.24) 4.32(0.34) 4.21(0.19) 4.30(0.18) 4.38(0.15) 4.29(0.12) 4.33(0.08) 4.42(0.32) 4.49(0.44) 4.44(0.20) 4.43(0.17) 4.43(0.08) 4.33(0.34) 4.38(0.15) 4.38(0.19) 4.48(0.19) 4.47(0.07) 4.33(0.36) 4.35(0.25) 4.18(0.24) 4.08(0.47) 4.41(0.37) 4.27(0.21) 4.37(0.52) 4.27(0.30) 4.34(0.28) 4.14(0.58) 4.34(0.29) 4.11(0.51) 3.78(0.73) 3.92(0.60) 4.25(0.91) 4.24(0.21) 4.34(0.22) 4.27(0.22) 4.26(0.22) 4.04(1.07) 4.04(0.63) 3.87(0.34) 3.71(0.21) 3.62(0.13) 3.66(0.07) 3.58(0.13) 3.48(0.16) 3.45(0.05) 3.36(0.16) 3.35(0.22) 3.35(0.04) 3.28(0.08) 3.23(0.10) 3.21(0.11) 3.20(0.10) 3.17(0.08) 3.19(0.08) 3.19(0.08) 3.24(0.11) 3.24(0.10) 3.26(0.04) 3.24(0.09) 3.22(0.10) 3.27(0.11) 3.24(0.11) 3.21(0.13)
++ Max displacement in automask = 5.08 (mm) at sub-brick 227
++ Max delta displ  in automask = 1.32 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb02.sub-S31.r04.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S31.aff12.1D anatSS.sub-S31_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source pb02.sub-S31.r04.tshift+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r04.warp.aff12.1D -prefix rm.epi.nomask.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S31.r04.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S31.r04.tshift+orig.BRIK is 10.125178 degrees from plumb.
++ opened source dataset 'pb02.sub-S31.r04.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1100259328
in use bytes     =  910709152
Total (incl. mmap):
system bytes     = 1100259328
in use bytes     =  910709152
max mmap regions =          1
max mmap bytes   =   94715904
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r04+tlrc.BRIK
++ total Elapsed time = 1523.9 sec
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r04.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.125178 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1100259328
in use bytes     =  910709312
Total (incl. mmap):
system bytes     = 1100259328
in use bytes     =  910709312
max mmap regions =          1
max mmap bytes   =   94715904
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r05.1D -prefix rm.epi.volreg.r05 -cubic -1Dmatrix_save mat.r05.vr.aff12.1D pb02.sub-S31.r05.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.747056 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S31.r05.tshift+orig.BRIK is 10.125178 degrees from plumb.
++ centers of base and input datasets are 8.92 mm apart
++ Reading input dataset ./pb02.sub-S31.r05.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 42117 voxels
 + 6053 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.761  pitch=+0.404  yaw=-0.765  dS=+0.123  dL=-2.101  dP=-1.870
++ Mean: roll=-1.628  pitch=+0.772  yaw=-0.583  dS=+0.348  dL=-1.888  dP=-1.737
++ Max : roll=-1.181  pitch=+1.337  yaw=+0.071  dS=+0.623  dL=-1.494  dP=-1.519
++ Max displacements (mm) for each sub-brick:
 4.40(0.00) 4.03(0.53) 4.04(0.13) 4.11(0.11) 4.17(0.11) 4.17(0.03) 4.21(0.04) 4.24(0.06) 4.28(0.08) 4.35(0.07) 4.35(0.14) 4.37(0.08) 4.38(0.01) 4.39(0.06) 4.38(0.06) 4.40(0.05) 4.43(0.05) 4.43(0.06) 4.43(0.03) 4.42(0.07) 4.42(0.11) 4.46(0.05) 4.47(0.07) 4.47(0.06) 4.52(0.09) 4.52(0.05) 4.50(0.06) 4.54(0.09) 4.60(0.11) 4.58(0.08) 4.58(0.30) 4.55(0.23) 4.56(0.05) 4.56(0.09) 4.54(0.07) 4.56(0.05) 4.56(0.05) 4.56(0.06) 4.55(0.06) 4.57(0.03) 4.57(0.04) 4.57(0.04) 4.60(0.04) 4.63(0.04) 4.65(0.03) 4.65(0.07) 4.68(0.05) 4.70(0.04) 4.67(0.04) 4.64(0.05) 4.67(0.03) 4.67(0.02) 4.67(0.03) 4.67(0.04) 4.68(0.05) 4.71(0.06) 4.74(0.06) 4.79(0.09) 4.81(0.05) 4.83(0.04) 4.80(0.05) 4.77(0.10) 4.78(0.08) 4.82(0.08) 4.83(0.03) 4.82(0.03) 4.82(0.04) 4.85(0.06) 4.86(0.07) 4.95(0.28) 5.29(1.03) 5.40(0.38) 5.38(0.08) 5.43(0.06) 5.41(0.06) 5.36(0.13) 5.32(0.14) 5.32(0.13) 5.31(0.09) 5.32(0.04) 5.32(0.13) 5.30(0.08) 5.28(0.04) 5.31(0.04) 5.33(0.04) 5.31(0.05) 5.29(0.06) 5.31(0.04) 5.31(0.03) 5.24(0.08) 5.22(0.10) 5.21(0.09) 5.16(0.05) 5.13(0.09) 5.14(0.05) 5.17(0.07) 5.19(0.08) 5.17(0.05) 5.18(0.07) 5.17(0.06) 5.13(0.07) 5.11(0.04) 5.08(0.05) 5.08(0.05) 5.13(0.09) 5.11(0.07) 5.08(0.08) 5.05(0.08) 5.01(0.07) 4.99(0.06) 5.01(0.03) 5.05(0.05) 5.05(0.06) 5.04(0.04) 5.05(0.09) 5.06(0.05) 5.07(0.07) 5.08(0.06) 5.04(0.05) 5.02(0.08) 5.01(0.08) 5.01(0.02) 5.00(0.02) 5.01(0.06) 5.05(0.09) 5.07(0.03) 5.07(0.04) 5.06(0.03) 5.10(0.04) 5.15(0.07) 5.13(0.03) 5.09(0.08) 5.12(0.09) 5.12(0.09) 5.12(0.05) 5.14(0.02) 5.13(0.03) 5.15(0.05) 5.14(0.06) 5.12(0.09) 5.12(0.09) 5.12(0.07) 5.15(0.08) 5.17(0.09) 5.19(0.08) 5.16(0.09) 5.16(0.10) 5.14(0.06) 5.18(0.06) 5.15(0.11) 5.10(0.16) 5.12(0.12) 5.13(0.07) 5.12(0.06) 5.11(0.10) 5.10(0.12) 5.08(0.06) 5.08(0.04) 5.12(0.06) 5.10(0.07) 5.13(0.10) 5.12(0.06) 5.13(0.07) 5.14(0.03) 5.13(0.05) 5.14(0.05) 5.11(0.08) 5.10(0.03) 5.11(0.02) 5.12(0.07) 5.14(0.08) 5.16(0.10) 5.15(0.05) 5.17(0.05) 5.18(0.07) 5.19(0.07) 5.17(0.05) 5.16(0.05) 5.11(0.08) 5.13(0.06) 5.14(0.10) 5.13(0.10) 5.16(0.13) 5.14(0.10) 5.17(0.07) 5.19(0.09) 5.18(0.02) 5.22(0.07) 5.23(0.05) 5.21(0.06) 5.26(0.08) 5.27(0.05) 5.24(0.04) 5.25(0.04) 5.26(0.08) 5.30(0.07) 5.30(0.03) 5.31(0.07) 5.33(0.07) 5.34(0.05) 5.35(0.04) 5.36(0.07) 5.39(0.10) 5.39(0.08) 5.38(0.07) 5.40(0.10) 5.40(0.08) 5.35(0.09) 5.30(0.12) 5.33(0.11) 5.34(0.13) 5.33(0.12) 5.32(0.10) 5.32(0.09) 5.32(0.08) 5.34(0.08) 5.32(0.06) 5.30(0.10) 5.29(0.04) 5.25(0.05) 5.28(0.06) 5.25(0.08) 5.23(0.05) 5.27(0.06) 5.24(0.08) 5.25(0.06) 5.26(0.03) 5.24(0.07) 5.24(0.06) 5.24(0.03) 5.23(0.03) 5.27(0.10) 5.26(0.09) 5.25(0.05) 5.25(0.09) 5.24(0.06) 5.23(0.03) 5.23(0.05) 5.23(0.06) 5.25(0.07) 5.24(0.09) 5.23(0.07) 5.23(0.05) 5.24(0.03) 5.21(0.05) 5.19(0.07) 5.16(0.08) 5.15(0.04) 5.22(0.09) 5.16(0.09) 5.13(0.06) 5.15(0.04) 5.15(0.06) 5.16(0.07) 5.17(0.12) 5.21(0.14) 5.20(0.08) 5.21(0.11) 5.24(0.05) 5.23(0.06) 5.25(0.04) 5.29(0.06) 5.30(0.06) 5.31(0.05) 5.32(0.05) 5.36(0.10) 5.35(0.05) 5.37(0.10) 5.37(0.07) 5.34(0.05) 5.32(0.08) 5.28(0.06) 5.27(0.10) 5.24(0.08) 5.22(0.04) 5.24(0.08) 5.24(0.06) 5.23(0.08) 5.22(0.07) 5.21(0.05) 5.23(0.07) 5.24(0.04) 5.27(0.10) 5.26(0.10) 5.28(0.08) 5.26(0.06) 5.24(0.04) 5.27(0.10) 5.22(0.08) 5.21(0.03) 5.21(0.04) 5.20(0.06) 5.22(0.07) 5.19(0.08) 5.21(0.03) 5.25(0.06) 5.26(0.04) 5.22(0.16) 5.18(0.10) 5.20(0.05) 5.22(0.07) 5.23(0.07) 5.25(0.09) 5.24(0.04) 5.23(0.05) 5.25(0.03) 5.26(0.05) 5.29(0.08) 5.25(0.07) 5.26(0.08) 5.25(0.08) 5.23(0.09) 5.25(0.06) 5.25(0.12) 5.27(0.06) 5.28(0.06) 5.30(0.08) 5.31(0.05) 5.32(0.05) 5.29(0.14) 5.29(0.03) 5.32(0.06) 5.33(0.06) 5.36(0.07) 5.33(0.08) 5.35(0.06) 5.36(0.03) 5.31(0.08) 5.30(0.05) 5.28(0.10) 5.33(0.07) 5.37(0.05) 5.36(0.06) 5.37(0.02) 5.31(0.06) 5.30(0.10) 5.28(0.05) 5.24(0.05) 5.24(0.09) 5.24(0.05) 5.26(0.02) 5.27(0.05) 5.28(0.07) 5.32(0.04) 5.31(0.03) 5.29(0.05) 5.29(0.06) 5.28(0.08) 5.26(0.07) 5.27(0.09) 5.24(0.05) 5.26(0.06) 5.28(0.07) 5.28(0.05) 5.29(0.08) 5.30(0.06) 5.30(0.09) 5.31(0.13) 5.33(0.11) 5.25(0.16) 5.23(0.09) 5.25(0.15) 5.24(0.10) 5.26(0.16) 5.24(0.09) 5.25(0.05) 5.26(0.04) 5.26(0.03) 5.27(0.02) 5.28(0.06) 5.28(0.08) 5.31(0.07) 5.32(0.07) 5.35(0.09) 5.40(0.06) 5.37(0.04) 5.42(0.08) 5.42(0.10) 5.42(0.03) 5.45(0.04) 5.41(0.08) 5.41(0.06) 5.44(0.10) 5.46(0.12) 5.48(0.04) 5.45(0.04) 5.44(0.12) 5.43(0.14) 5.43(0.07) 5.47(0.07) 5.49(0.04) 5.49(0.07) 5.44(0.07) 5.43(0.19) 5.41(0.03) 5.41(0.02) 5.44(0.13) 5.40(0.11) 5.44(0.07) 5.45(0.07) 5.46(0.12) 5.46(0.08) 5.45(0.09) 5.43(0.10) 5.36(0.08) 5.32(0.09) 5.32(0.04) 5.37(0.16) 5.36(0.08) 5.34(0.06) 5.38(0.10) 5.37(0.12)
++ Max displacement in automask = 5.49 (mm) at sub-brick 391
++ Max delta displ  in automask = 1.03 (mm) at sub-brick 70
++ Wrote dataset to disk in ./rm.epi.volreg.r05+orig.BRIK
3dcalc -overwrite -a pb02.sub-S31.r05.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S31.aff12.1D anatSS.sub-S31_al_junk_mat.aff12.1D -I mat.r05.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source pb02.sub-S31.r05.tshift+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r05.warp.aff12.1D -prefix rm.epi.nomask.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S31.r05.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S31.r05.tshift+orig.BRIK is 10.125178 degrees from plumb.
++ opened source dataset 'pb02.sub-S31.r05.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1087406080
in use bytes     =  897857344
Total (incl. mmap):
system bytes     = 1087406080
in use bytes     =  897857344
max mmap regions =          1
max mmap bytes   =   94715904
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r05+tlrc.BRIK
++ total Elapsed time = 1467.1 sec
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r05.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.125178 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1087406080
in use bytes     =  897857504
Total (incl. mmap):
system bytes     = 1087406080
in use bytes     =  897857504
max mmap regions =          1
max mmap bytes   =   94715904
3dTstat -min -prefix rm.epi.min.r05 rm.epi.1.r05+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r05+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r06.1D -prefix rm.epi.volreg.r06 -cubic -1Dmatrix_save mat.r06.vr.aff12.1D pb02.sub-S31.r06.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.747056 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S31.r06.tshift+orig.BRIK is 10.125197 degrees from plumb.
++ centers of base and input datasets are 8.92 mm apart
++ Reading input dataset ./pb02.sub-S31.r06.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 42251 voxels
 + 6079 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.447  pitch=+0.089  yaw=+0.293  dS=-0.139  dL=-1.464  dP=-1.057
++ Mean: roll=-1.296  pitch=+0.286  yaw=+0.483  dS=+0.403  dL=-1.288  dP=-0.560
++ Max : roll=-0.995  pitch=+0.599  yaw=+0.971  dS=+1.364  dL=-1.034  dP=-0.167
++ Max displacements (mm) for each sub-brick:
 3.09(0.00) 2.83(0.29) 2.89(0.08) 2.89(0.05) 2.90(0.06) 2.92(0.04) 2.93(0.03) 2.93(0.08) 2.96(0.07) 2.97(0.06) 2.97(0.04) 3.02(0.05) 3.03(0.08) 3.04(0.05) 3.08(0.07) 3.10(0.07) 3.10(0.03) 3.12(0.10) 3.13(0.05) 3.11(0.05) 3.13(0.06) 3.09(0.12) 3.07(0.04) 3.09(0.04) 3.09(0.08) 3.05(0.05) 3.04(0.03) 3.04(0.04) 3.06(0.11) 3.04(0.09) 3.01(0.11) 3.06(0.07) 3.09(0.07) 3.08(0.11) 3.08(0.04) 3.11(0.04) 3.11(0.06) 3.10(0.10) 3.11(0.03) 3.11(0.11) 3.12(0.09) 3.12(0.14) 3.13(0.12) 3.14(0.06) 3.16(0.08) 3.16(0.08) 3.16(0.03) 3.20(0.06) 3.24(0.07) 3.24(0.07) 3.24(0.07) 3.23(0.15) 3.23(0.14) 3.22(0.09) 3.22(0.10) 3.22(0.10) 3.25(0.12) 3.26(0.13) 3.23(0.10) 3.27(0.08) 3.29(0.09) 3.31(0.04) 3.33(0.11) 3.36(0.08) 3.38(0.10) 3.42(0.12) 3.43(0.09) 3.44(0.07) 3.45(0.09) 3.47(0.13) 3.48(0.07) 3.48(0.10) 3.49(0.09) 3.53(0.06) 3.54(0.09) 3.55(0.03) 3.55(0.03) 3.59(0.12) 3.60(0.09) 3.64(0.16) 3.67(0.07) 3.64(0.04) 3.65(0.05) 3.66(0.06) 3.69(0.09) 3.68(0.11) 3.69(0.11) 3.71(0.04) 3.73(0.04) 3.74(0.09) 3.76(0.04) 3.80(0.07) 3.83(0.05) 3.76(0.08) 3.76(0.10) 3.82(0.11) 3.87(0.07) 3.91(0.08) 3.89(0.04) 3.88(0.12) 3.87(0.07) 3.85(0.06) 3.82(0.06) 3.87(0.11) 3.86(0.09) 3.82(0.05) 3.80(0.12) 3.78(0.03) 3.81(0.09) 3.81(0.10) 3.79(0.02) 3.78(0.08) 3.76(0.22) 3.75(0.18) 3.73(0.11) 3.74(0.10) 3.73(0.06) 3.68(0.08) 3.65(0.13) 3.64(0.03) 3.67(0.04) 3.68(0.07) 3.73(0.12) 3.74(0.07) 3.73(0.09) 3.73(0.10) 3.76(0.11) 3.83(0.10) 3.81(0.10) 3.83(0.11) 3.83(0.11) 3.84(0.14) 3.85(0.09) 3.85(0.08) 3.85(0.10) 3.85(0.07) 3.84(0.03) 3.84(0.06) 3.85(0.04) 3.87(0.10) 3.86(0.05) 3.84(0.08) 3.87(0.08) 3.87(0.12) 3.86(0.05) 3.83(0.08) 3.85(0.16) 3.87(0.10) 3.87(0.16) 3.83(0.13) 3.83(0.15) 3.84(0.12) 3.84(0.07) 3.85(0.13) 3.86(0.08) 3.86(0.08) 3.90(0.17) 3.97(0.09) 3.98(0.06) 4.01(0.15) 4.00(0.06) 4.00(0.04) 3.99(0.05) 3.98(0.17) 3.93(0.10) 3.92(0.11) 3.96(0.12) 3.98(0.09) 3.99(0.05) 3.98(0.06) 3.97(0.10) 3.94(0.05) 3.93(0.12) 3.92(0.06) 3.94(0.08) 3.96(0.10) 3.96(0.05) 4.00(0.11) 3.99(0.09) 4.00(0.07) 4.02(0.03) 4.02(0.05) 4.02(0.10) 4.00(0.04) 4.00(0.15) 3.98(0.08) 3.98(0.05) 3.93(0.09) 3.92(0.08) 3.91(0.11) 3.89(0.07) 3.89(0.04) 3.80(0.11) 3.72(0.08) 3.69(0.11) 3.61(0.16) 3.59(0.15) 3.66(0.08) 3.70(0.12) 3.71(0.08) 3.73(0.07) 3.70(0.12) 3.71(0.05) 3.68(0.10) 3.67(0.08) 3.66(0.07) 3.64(0.05) 3.62(0.11) 3.64(0.20) 3.62(0.13) 3.62(0.10) 3.61(0.03) 3.59(0.10) 3.61(0.10) 3.61(0.04) 3.60(0.03) 3.60(0.09) 3.57(0.13) 3.56(0.05) 3.59(0.05) 3.57(0.08) 3.49(0.12) 3.46(0.12) 3.56(0.11) 3.64(0.10) 3.66(0.12) 3.66(0.12) 3.64(0.13) 3.68(0.11) 3.69(0.23) 3.72(0.14) 3.72(0.15) 3.67(0.13) 3.61(0.11) 3.66(0.11) 3.70(0.10) 3.77(0.13) 3.76(0.11) 3.73(0.07) 3.76(0.05) 3.76(0.11) 3.77(0.21) 3.77(0.11) 3.77(0.08) 3.78(0.05) 3.78(0.03) 3.80(0.10) 3.80(0.07) 3.78(0.12) 3.72(0.12) 3.75(0.10) 3.72(0.10) 3.68(0.07) 3.70(0.05) 3.71(0.15) 3.80(0.19) 3.81(0.17) 3.77(0.10) 3.76(0.06) 3.79(0.05) 3.74(0.08) 3.71(0.09) 3.70(0.06) 3.72(0.05) 3.75(0.07) 3.76(0.05) 3.75(0.03) 3.75(0.03) 3.71(0.12) 3.74(0.13) 3.68(0.11) 3.65(0.14) 3.71(0.13) 3.71(0.05) 3.70(0.07) 3.68(0.20) 3.67(0.56) 3.75(0.09) 3.71(0.22) 3.69(0.13) 3.68(0.10) 3.69(0.10) 3.68(0.20) 3.74(0.13) 3.70(0.24) 3.61(0.19) 3.65(0.18) 3.65(0.04) 3.68(0.08) 3.69(0.04) 3.69(0.03) 3.72(0.19) 3.72(0.12) 3.65(0.16) 3.63(0.08)
++ Max displacement in automask = 4.02 (mm) at sub-brick 180
++ Max delta displ  in automask = 0.56 (mm) at sub-brick 276
++ Wrote dataset to disk in ./rm.epi.volreg.r06+orig.BRIK
3dcalc -overwrite -a pb02.sub-S31.r06.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S31.aff12.1D anatSS.sub-S31_al_junk_mat.aff12.1D -I mat.r06.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source pb02.sub-S31.r06.tshift+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r06.warp.aff12.1D -prefix rm.epi.nomask.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S31.r06.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S31.r06.tshift+orig.BRIK is 10.125197 degrees from plumb.
++ opened source dataset 'pb02.sub-S31.r06.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1100218368
in use bytes     =  910663824
Total (incl. mmap):
system bytes     = 1100218368
in use bytes     =  910663824
max mmap regions =          1
max mmap bytes   =   94715904
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r06+tlrc.BRIK
++ total Elapsed time = 1038.8 sec
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S31_WARP.nii mat.r06.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.125197 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1100218368
in use bytes     =  910663984
Total (incl. mmap):
system bytes     = 1100218368
in use bytes     =  910663984
max mmap regions =          1
max mmap bytes   =   94715904
3dTstat -min -prefix rm.epi.min.r06 rm.epi.1.r06+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r06+tlrc.BRIK
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D dfile.r04.1D dfile.r05.1D dfile.r06.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD rm.epi.min.r04+tlrc.HEAD rm.epi.min.r05+tlrc.HEAD rm.epi.min.r06+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask_epi_extents+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S31.r01.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S31.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S31.r02.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S31.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S31.r03.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S31.r03.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r04+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S31.r04.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S31.r04.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r05+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S31.r05.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S31.r05.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r06+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S31.r06.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S31.r06.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anatQQ.sub-S31.aff12.1D anatSS.sub-S31_al_junk_mat.aff12.1D -I
3dNwarpApply -master anatQQ.sub-S31+tlrc -dxyz 3 -source vr_base+orig -nwarp anatQQ.sub-S31_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S31+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.747056 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3720544256
in use bytes     = 1605933392
Total (incl. mmap):
system bytes     = 4041523200
in use bytes     = 1926912336
max mmap regions =          1
max mmap bytes   =  320978944
++ Warping:.Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 8.5 sec
3dcopy anatQQ.sub-S31+tlrc anat_final.sub-S31
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.sub-S31+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.sub-S31+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'RHDD(11.07)'
 +        -cmass x y z shifts =   -0.016    5.486   -4.499
 +  shift search range is +/- =   69.336   81.855   65.484
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.144975
   sp   = 0.297573
   mi   = 2.64068
   crM  = 0.0254355
   nmi  = 0.826714
   je   = 2.64068
   hel  = -0.110043
   crA  = 0.159738
   crU  = 0.168728
   lss  = 0.855025
   lpc  = 0.122862
   lpa  = 0.877138
   lpc+ = 0.245851
   lpa+ = 1.00013
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.1
++ ###########################################################
3dTstat -mean -prefix rm.signal.vreg.r01 pb03.sub-S31.r01.volreg+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.vreg.r01+tlrc.BRIK
3dDetrend -polort 6 -prefix rm.noise.det -overwrite pb03.sub-S31.r01.volreg+tlrc
++ 3dDetrend: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTstat -stdev -prefix rm.noise.vreg.r01 rm.noise.det+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.vreg.r01+tlrc.BRIK
3dcalc -a rm.signal.vreg.r01+tlrc -b rm.noise.vreg.r01+tlrc -c mask_epi_extents+tlrc -expr c*a/b -prefix TSNR.vreg.r01.sub-S31
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.vreg.r01.sub-S31+tlrc.BRIK
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 2888 survived, 16774328 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 260626 survived, 16516590 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dNwarpApply -source copy_af_anat_w_skull+orig -master anat_final.sub-S31+tlrc -ainterp wsinc5 -nwarp anatQQ.sub-S31_WARP.nii anatQQ.sub-S31.aff12.1D -prefix follow_anat_anat_w_skull
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_anat_w_skull+orig'
++ -master dataset is 'anat_final.sub-S31+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3173036032
in use bytes     = 1351706320
Total (incl. mmap):
system bytes     = 3443322880
in use bytes     = 1621993168
max mmap regions =          1
max mmap bytes   =  270286848
++ Warping:.Z
++ Output dataset ./follow_anat_anat_w_skull+tlrc.BRIK
++ total Elapsed time = 10.0 sec
3dNwarpApply -source copy_af_aaseg+orig -master anat_final.sub-S31+tlrc -ainterp NN -nwarp anatQQ.sub-S31_WARP.nii anatQQ.sub-S31.aff12.1D -prefix follow_ROI_aaseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aaseg+orig'
++ -master dataset is 'anat_final.sub-S31+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3268046848
in use bytes     = 1622272944
Total (incl. mmap):
system bytes     = 3268300800
in use bytes     = 1622526896
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aaseg+tlrc.BRIK
++ total Elapsed time = 7.4 sec
3dNwarpApply -source copy_af_aeseg+orig -master pb03.sub-S31.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S31_WARP.nii anatQQ.sub-S31.aff12.1D -prefix follow_ROI_aeseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aeseg+orig'
++ -master dataset is 'pb03.sub-S31.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3268165632
in use bytes     = 1622405072
Total (incl. mmap):
system bytes     = 3268419584
in use bytes     = 1622659024
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aeseg+tlrc.BRIK
++ total Elapsed time = 7.6 sec
3dNwarpApply -source copy_af_FSvent_erode+orig -master pb03.sub-S31.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S31_WARP.nii anatQQ.sub-S31.aff12.1D -prefix follow_ROI_FSvent
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSvent_erode+orig'
++ -master dataset is 'pb03.sub-S31.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3173158912
in use bytes     = 1351831808
Total (incl. mmap):
system bytes     = 3443445760
in use bytes     = 1622118656
max mmap regions =          1
max mmap bytes   =  270286848
++ Warping:.Z
++ Output dataset ./follow_ROI_FSvent+tlrc.BRIK
++ total Elapsed time = 7.2 sec
3dNwarpApply -source copy_af_FSWe_erode+orig -master pb03.sub-S31.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S31_WARP.nii anatQQ.sub-S31.aff12.1D -prefix follow_ROI_FSWe
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSWe_erode+orig'
++ -master dataset is 'pb03.sub-S31.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3173158912
in use bytes     = 1351831936
Total (incl. mmap):
system bytes     = 3443445760
in use bytes     = 1622118784
max mmap regions =          1
max mmap bytes   =  270286848
++ Warping:.Z
++ Output dataset ./follow_ROI_FSWe+tlrc.BRIK
++ total Elapsed time = 7.2 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb03.volreg pb03.sub-S31.r01.volreg+tlrc.HEAD pb03.sub-S31.r02.volreg+tlrc.HEAD pb03.sub-S31.r03.volreg+tlrc.HEAD pb03.sub-S31.r04.volreg+tlrc.HEAD pb03.sub-S31.r05.volreg+tlrc.HEAD pb03.sub-S31.r06.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.1 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S31.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S31.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S31.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S31.r04.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r04.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S31.r05.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r05.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S31.r06.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r06.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 04 05 06 )
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S31.r01.blur pb03.sub-S31.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S31.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S31.r02.blur pb03.sub-S31.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S31.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S31.r03.blur pb03.sub-S31.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S31.r03.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S31.r04.blur pb03.sub-S31.r04.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S31.r04.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S31.r05.blur pb03.sub-S31.r05.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S31.r05.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S31.r06.blur pb03.sub-S31.r06.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S31.r06.blur+tlrc.BRIK

end
foreach run ( 01 02 03 04 05 06 )
3dAutomask -prefix rm.mask_r01 pb04.sub-S31.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S31.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 282.287567
 + Used gradual clip level = 251.388031 .. 311.451172
 + Number voxels above clip level = 69040
 + Clustering voxels ...
 + Largest cluster has 69034 voxels
 + Clustering voxels ...
 + Largest cluster has 68945 voxels
 + Filled    89 voxels in small holes; now have 69034 voxels
 + Clustering voxels ...
 + Largest cluster has 69034 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242262 voxels
 + Mask now has 69034 voxels
++ 69034 voxels in the mask [out of 311296: 22.18%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb04.sub-S31.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S31.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 282.879456
 + Used gradual clip level = 252.325256 .. 312.086487
 + Number voxels above clip level = 69051
 + Clustering voxels ...
 + Largest cluster has 69043 voxels
 + Clustering voxels ...
 + Largest cluster has 68929 voxels
 + Filled    96 voxels in small holes; now have 69025 voxels
 + Clustering voxels ...
 + Largest cluster has 69025 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242271 voxels
 + Mask now has 69025 voxels
++ 69025 voxels in the mask [out of 311296: 22.17%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb04.sub-S31.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S31.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 280.655151
 + Used gradual clip level = 250.297150 .. 308.862732
 + Number voxels above clip level = 68889
 + Clustering voxels ...
 + Largest cluster has 68885 voxels
 + Clustering voxels ...
 + Largest cluster has 68790 voxels
 + Filled    90 voxels in small holes; now have 68880 voxels
 + Clustering voxels ...
 + Largest cluster has 68880 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242416 voxels
 + Mask now has 68880 voxels
++ 68880 voxels in the mask [out of 311296: 22.13%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r04 pb04.sub-S31.r04.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S31.r04.blur+tlrc
++ Forming automask
 + Fixed clip level = 285.884338
 + Used gradual clip level = 251.643127 .. 315.083191
 + Number voxels above clip level = 68892
 + Clustering voxels ...
 + Largest cluster has 68888 voxels
 + Clustering voxels ...
 + Largest cluster has 68834 voxels
 + Filled    88 voxels in small holes; now have 68922 voxels
 + Clustering voxels ...
 + Largest cluster has 68922 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242374 voxels
 + Mask now has 68922 voxels
++ 68922 voxels in the mask [out of 311296: 22.14%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r05 pb04.sub-S31.r05.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S31.r05.blur+tlrc
++ Forming automask
 + Fixed clip level = 285.369690
 + Used gradual clip level = 252.169739 .. 313.886200
 + Number voxels above clip level = 68932
 + Clustering voxels ...
 + Largest cluster has 68925 voxels
 + Clustering voxels ...
 + Largest cluster has 68857 voxels
 + Filled    96 voxels in small holes; now have 68953 voxels
 + Clustering voxels ...
 + Largest cluster has 68953 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242343 voxels
 + Mask now has 68953 voxels
++ 68953 voxels in the mask [out of 311296: 22.15%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r06 pb04.sub-S31.r06.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S31.r06.blur+tlrc
++ Forming automask
 + Fixed clip level = 284.145233
 + Used gradual clip level = 249.484177 .. 313.928162
 + Number voxels above clip level = 69032
 + Clustering voxels ...
 + Largest cluster has 69026 voxels
 + Clustering voxels ...
 + Largest cluster has 68965 voxels
 + Filled    91 voxels in small holes; now have 69056 voxels
 + Clustering voxels ...
 + Largest cluster has 69055 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242241 voxels
 + Mask now has 69055 voxels
++ 69055 voxels in the mask [out of 311296: 22.18%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD -union -prefix full_mask.sub-S31
++ processing 6 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 6 volumes gives min count 0
++ voxel limits: 0 clipped, 69550 survived, 241746 were zero
++ writing result full_mask.sub-S31...
++ Output dataset ./full_mask.sub-S31+tlrc.BRIK
3dresample -master full_mask.sub-S31+tlrc -input anatQQ.sub-S31+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.sub-S31
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 74163 survived, 237133 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-S31...
++ Output dataset ./mask_anat.sub-S31+tlrc.BRIK
3dmask_tool -input full_mask.sub-S31+tlrc mask_anat.sub-S31+tlrc -inter -prefix mask_epi_anat.sub-S31
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 8769 clipped, 67472 survived, 235055 were zero
++ writing result mask_epi_anat.sub-S31...
++ Output dataset ./mask_epi_anat.sub-S31+tlrc.BRIK
3dABoverlap -no_automask full_mask.sub-S31+tlrc mask_anat.sub-S31+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#A=./full_mask.sub-S31+tlrc.BRIK  B=./mask_anat.sub-S31+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
69550        74163        76241        67472        2078         6691          2.9878      9.0220     1.0374     0.9524     1.1044
3ddot -dodice full_mask.sub-S31+tlrc mask_anat.sub-S31+tlrc
tee out.mask_ae_dice.txt
0.938983	
3dresample -master full_mask.sub-S31+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_centos_7_64/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71053 survived, 240243 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
++ Output dataset ./mask_group+tlrc.BRIK
3ddot -dodice mask_anat.sub-S31+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.977578	
foreach run ( 01 02 03 04 05 06 )
3dTstat -prefix rm.mean_r01 pb04.sub-S31.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.sub-S31.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S31.r01.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S31.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.sub-S31.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.sub-S31.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S31.r02.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S31.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.sub-S31.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.sub-S31.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S31.r03.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S31.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb04.sub-S31.r04.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb04.sub-S31.r04.blur+tlrc -b rm.mean_r04+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S31.r04.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S31.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb04.sub-S31.r05.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb04.sub-S31.r05.blur+tlrc -b rm.mean_r05+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S31.r05.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S31.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb04.sub-S31.r06.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb04.sub-S31.r06.blur+tlrc -b rm.mean_r06+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S31.r06.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S31.r06.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile motion_demean.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_demean
1d_tool.py -infile motion_deriv.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_deriv
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -show_censor_count -censor_prev_TR -censor_motion 0.25 motion_sub-S31
total number of censored TRs (simple form) = 125
1deval -a motion_sub-S31_censor.1D -b outcount_sub-S31_censor.1D -expr a*b
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 6
set nt = 412
set run = 01
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r01.1D
end
set nt = 412
set run = 02
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r02.1D
end
set nt = 295
set run = 03
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 03 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r03.1D
end
set nt = 412
set run = 04
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 04 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r04.1D
end
set nt = 412
set run = 05
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 05 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r05.1D
end
set nt = 295
set run = 06
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 06 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r06.1D
end
1dcat bpass.r01.1D bpass.r02.1D bpass.r03.1D bpass.r04.1D bpass.r05.1D bpass.r06.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-S31_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 03 04 05 06 )
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 01 -infile censor_sub-S31_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 5 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb03.sub-S31.r01.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 12 ; remaining = 400
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 400 retained time points MINUS 6 regressors ==> 394 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 124277 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+tlrc.BRIK
++ ===== clock time = 8s 532ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r01 rm.det_pcin_r01+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r01.1D -infile rm.ROIPC.FSvent.r01_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 01 6 -infile - -write ROIPC.FSvent.r01.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 02 -infile censor_sub-S31_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 5 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb03.sub-S31.r02.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 11 ; remaining = 401
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 401 retained time points MINUS 6 regressors ==> 395 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 124442 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+tlrc.BRIK
++ ===== clock time = 8s 556ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r02 rm.det_pcin_r02+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r02.1D -infile rm.ROIPC.FSvent.r02_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 02 6 -infile - -write ROIPC.FSvent.r02.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 03 -infile censor_sub-S31_combined_2.1D -write rm.censor.r03.1D
3dTproject -polort 5 -prefix rm.det_pcin_r03 -censor rm.censor.r03.1D -cenmode KILL -input pb03.sub-S31.r03.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 295 ; censored = 2 ; remaining = 293
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 293 retained time points MINUS 6 regressors ==> 287 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 124403 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r03+tlrc.BRIK
++ ===== clock time = 5s 941ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r03 rm.det_pcin_r03+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r03.1D -infile rm.ROIPC.FSvent.r03_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 03 6 -infile - -write ROIPC.FSvent.r03.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 04 -infile censor_sub-S31_combined_2.1D -write rm.censor.r04.1D
3dTproject -polort 5 -prefix rm.det_pcin_r04 -censor rm.censor.r04.1D -cenmode KILL -input pb03.sub-S31.r04.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 104 ; remaining = 308
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 308 retained time points MINUS 6 regressors ==> 302 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 124283 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r04+tlrc.BRIK
++ ===== clock time = 6s 946ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r04 rm.det_pcin_r04+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r04.1D -infile rm.ROIPC.FSvent.r04_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 04 6 -infile - -write ROIPC.FSvent.r04.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 05 -infile censor_sub-S31_combined_2.1D -write rm.censor.r05.1D
3dTproject -polort 5 -prefix rm.det_pcin_r05 -censor rm.censor.r05.1D -cenmode KILL -input pb03.sub-S31.r05.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 10 ; remaining = 402
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 402 retained time points MINUS 6 regressors ==> 396 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 124277 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r05+tlrc.BRIK
++ ===== clock time = 8s 724ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r05 rm.det_pcin_r05+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r05.1D -infile rm.ROIPC.FSvent.r05_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 05 6 -infile - -write ROIPC.FSvent.r05.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 06 -infile censor_sub-S31_combined_2.1D -write rm.censor.r06.1D
3dTproject -polort 5 -prefix rm.det_pcin_r06 -censor rm.censor.r06.1D -cenmode KILL -input pb03.sub-S31.r06.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 295 ; censored = 2 ; remaining = 293
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 293 retained time points MINUS 6 regressors ==> 287 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 124327 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r06+tlrc.BRIK
++ ===== clock time = 5s 955ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r06 rm.det_pcin_r06+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r06.1D -infile rm.ROIPC.FSvent.r06_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 06 6 -infile - -write ROIPC.FSvent.r06.1D
end
3dDeconvolve -input pb05.sub-S31.r01.scale+tlrc.HEAD pb05.sub-S31.r02.scale+tlrc.HEAD pb05.sub-S31.r03.scale+tlrc.HEAD pb05.sub-S31.r04.scale+tlrc.HEAD pb05.sub-S31.r05.scale+tlrc.HEAD pb05.sub-S31.r06.scale+tlrc.HEAD -censor censor_sub-S31_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.r01.1D ROIPC.FSvent.r01 -ortvec ROIPC.FSvent.r02.1D ROIPC.FSvent.r02 -ortvec ROIPC.FSvent.r03.1D ROIPC.FSvent.r03 -ortvec ROIPC.FSvent.r04.1D ROIPC.FSvent.r04 -ortvec ROIPC.FSvent.r05.1D ROIPC.FSvent.r05 -ortvec ROIPC.FSvent.r06.1D ROIPC.FSvent.r06 -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_demean.r04.1D mot_demean_r04 -ortvec mot_demean.r05.1D mot_demean_r05 -ortvec mot_demean.r06.1D mot_demean_r06 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -ortvec mot_deriv.r04.1D mot_deriv_r04 -ortvec mot_deriv.r05.1D mot_deriv_r05 -ortvec mot_deriv.r06.1D mot_deriv_r06 -polort 5 -num_stimts 0 -jobs 32 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-S31 -errts errts.sub-S31 -x1D_stop -cbucket all_betas.sub-S31 -bucket stats.sub-S31
++ 3dDeconvolve extending num_stimts from 0 to 1506 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 412 824 1119 1531 1943
++ STAT automask has 186981 voxels (out of 311296 = 60.1%)
++ Skipping check for initial transients
[7m*+ WARNING:[0m Input polort=5; Longest run=824.0 s; Recommended minimum polort=6
++ Number of time points: 2238 (before censor) ; 2097 (after)
 + Number of parameters:  1542 [1542 baseline ; 0 signal]
++ total shared memory needed = 9,414,836,224 bytes (about 9.4 billion)
++ mmap() memory allocated: 9,414,836,224 bytes (about 9.4 billion)
++ Memory required for output bricks = 9,414,836,224 bytes (about 9.4 billion)
** WARNING: in memory plot exceeds 1163231 elements!
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.sub-S31.r01.scale+tlrc.HEAD pb05.sub-S31.r02.scale+tlrc.HEAD pb05.sub-S31.r03.scale+tlrc.HEAD pb05.sub-S31.r04.scale+tlrc.HEAD pb05.sub-S31.r05.scale+tlrc.HEAD pb05.sub-S31.r06.scale+tlrc.HEAD" \
 -Rbeta all_betas.sub-S31_REML -fout -tout \
 -Rbuck stats.sub-S31_REML -Rvar stats.sub-S31_REMLvar \
 -Rfitts fitts.sub-S31_REML -Rerrts errts.sub-S31_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (2097x1542):  1558.26  ++ OK ++
++ ----- Baseline-only matrix condition [X] (2097x1542):  1558.26  ++ OK ++
++ ----- stim_base-only matrix condition [X] (2097x1506):  1304.95  ++ OK ++
++ ----- polort-only matrix condition [X] (2097x36):  1.20208  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb05.sub-S31.r01.scale+tlrc.HEAD pb05.sub-S31.r02.scale+tlrc.HEAD pb05.sub-S31.r03.scale+tlrc.HEAD pb05.sub-S31.r04.scale+tlrc.HEAD pb05.sub-S31.r05.scale+tlrc.HEAD pb05.sub-S31.r06.scale+tlrc.HEAD -censor censor_sub-S31_combined_2.1D -cenmode NTRP -ort X.nocensor.xmat.1D -prefix errts.sub-S31.tproject
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 6 input dataset names
++ Auto-catenated dataset has 6 runs
++ input time points = 2238 ; censored = 141 ; remaining = 2097
++ Setting up regressors
++ 6 Blocks * 1 polynomials -- 6 polort regressors
 + -- 1542 other fixed ort regressors
++ 2097 retained time points MINUS 1548 regressors ==> 549 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
++ THD_dset_to_vectim: allocated 2786721792 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 124277 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.sub-S31.tproject+tlrc.BRIK
++ ===== clock time = 10m 38s 618ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
