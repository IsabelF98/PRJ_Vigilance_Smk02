echo auto-generated by afni_proc.py, Mon Nov 16 13:26:09 2020
auto-generated by afni_proc.py, Mon Nov 16 13:26:09 2020
echo (version 7.12, April 14, 2020)
(version 7.12, April 14, 2020)
echo execution started: `date`
date
execution started: Mon Nov 16 14:01:34 EST 2020
afni -ver
Precompiled binary linux_centos_7_64: Nov 12 2020 (Version AFNI_20.3.02 'Vespasian')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   12 Nov 2020
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-S13
endif
set output_dir = /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI
if ( -d /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/stimuli
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D01_Anatomical/anatSS.sub-S13.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/anatSS.sub-S13
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D01_Anatomical/anatUAC.sub-S13.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/copy_af_anat_w_skull
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S13/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S13/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S13/SUMA/fs_ap_latvent.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S13/SUMA/fs_ap_wm.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D01_Anatomical/anatQQ.sub-S13.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/anatQQ.sub-S13
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D01_Anatomical/anatQQ.sub-S13.aff12.1D /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/anatQQ.sub-S13.aff12.1D
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D01_Anatomical/anatQQ.sub-S13_WARP.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/anatQQ.sub-S13_WARP.nii
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/pb00.sub-S13.r01.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D00_OriginalData/sub-S13_SleepAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/pb00.sub-S13.r02.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D00_OriginalData/sub-S13_SleepDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/pb00.sub-S13.r03.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D00_OriginalData/sub-S13_SleepRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/pb00.sub-S13.r04.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D00_OriginalData/sub-S13_WakeAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/pb00.sub-S13.r05.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D00_OriginalData/sub-S13_WakeDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI/pb00.sub-S13.r06.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D00_OriginalData/sub-S13_WakeRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
set tr_counts = ( 412 412 295 412 412 295 )
cd /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S13/D02_Preproc_fMRI
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.sub-S13.r01.tcat+orig.HEAD pb00.sub-S13.r02.tcat+orig.HEAD pb00.sub-S13.r03.tcat+orig.HEAD pb00.sub-S13.r04.tcat+orig.HEAD pb00.sub-S13.r05.tcat+orig.HEAD pb00.sub-S13.r06.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 20.756298 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r01.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r01.automask+orig.BRIK is 20.756298 degrees from plumb.

-- running correlation on dataset pb00.sub-S13.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 20.756298 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r01+orig.BRIK is 20.756298 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r01+orig.BRIK is 20.756298 degrees from plumb.
++ Oblique dataset:./epi.r01+orig.BRIK is 20.756298 degrees from plumb.
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 20.756298 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r02.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r02.automask+orig.BRIK is 20.756298 degrees from plumb.

-- running correlation on dataset pb00.sub-S13.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 20.756298 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r02+orig.BRIK is 20.756298 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r02+orig.BRIK is 20.756298 degrees from plumb.
++ Oblique dataset:./epi.r02+orig.BRIK is 20.756298 degrees from plumb.
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 20.756298 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r03.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r03.automask+orig.BRIK is 20.756298 degrees from plumb.

-- running correlation on dataset pb00.sub-S13.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 20.756298 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r03+orig.BRIK is 20.756298 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r03+orig.BRIK is 20.756298 degrees from plumb.
++ Oblique dataset:./epi.r03+orig.BRIK is 20.756298 degrees from plumb.
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 18.913485 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r04.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r04.automask+orig.BRIK is 18.913485 degrees from plumb.

-- running correlation on dataset pb00.sub-S13.r04.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 18.913485 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r04+orig.BRIK is 18.913485 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r04+orig.BRIK is 18.913485 degrees from plumb.
++ Oblique dataset:./epi.r04+orig.BRIK is 18.913485 degrees from plumb.
++ Wrote dataset: ./radcor.20.r04.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 18.913485 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r05.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r05.automask+orig.BRIK is 18.913485 degrees from plumb.

-- running correlation on dataset pb00.sub-S13.r05.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 18.913485 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r05+orig.BRIK is 18.913485 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r05+orig.BRIK is 18.913485 degrees from plumb.
++ Oblique dataset:./epi.r05+orig.BRIK is 18.913485 degrees from plumb.
++ Wrote dataset: ./radcor.20.r05.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 18.913631 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r06.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r06.automask+orig.BRIK is 18.913631 degrees from plumb.

-- running correlation on dataset pb00.sub-S13.r06.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 18.913631 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r06+orig.BRIK is 18.913631 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r06+orig.BRIK is 18.913631 degrees from plumb.
++ Oblique dataset:./epi.r06+orig.BRIK is 18.913631 degrees from plumb.
++ Wrote dataset: ./radcor.20.r06.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S13.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r01.tcat+orig.BRIK is 20.756298 degrees from plumb.
++ 46656 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S13.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r02.tcat+orig.BRIK is 20.756298 degrees from plumb.
++ 46476 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S13.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r03.tcat+orig.BRIK is 20.756298 degrees from plumb.
++ 46507 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S13.r04.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r04.tcat+orig.BRIK is 18.913485 degrees from plumb.
++ 46539 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S13.r05.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r05.tcat+orig.BRIK is 18.913485 degrees from plumb.
++ 46455 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S13.r06.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r06.tcat+orig.BRIK is 18.913631 degrees from plumb.
++ 46556 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dDespike -NEW -nomask -prefix pb01.sub-S13.r01.despike pb00.sub-S13.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r01.tcat+orig.BRIK is 20.756298 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S13.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #11
++ start OpenMP thread #0
++ start OpenMP thread #7
++ start OpenMP thread #3
++ start OpenMP thread #10
++ start OpenMP thread #14
++ start OpenMP thread #12
++ start OpenMP thread #9
++ start OpenMP thread #4
++ start OpenMP thread #6
++ start OpenMP thread #2
........................................................
++ Elapsed despike time =  1s 287ms

++ FINAL: 53157888 data points, 2307699 edits [4.341%], 306827 big edits [0.577%]
++ Output dataset ./pb01.sub-S13.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S13.r02.despike pb00.sub-S13.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r02.tcat+orig.BRIK is 20.756298 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S13.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #10
++ start OpenMP thread #13
++ start OpenMP thread #12
++ start OpenMP thread #1
++ start OpenMP thread #9
++ start OpenMP thread #3
++ start OpenMP thread #6
++ start OpenMP thread #11
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #5
++ start OpenMP thread #0
++ start OpenMP thread #14
........................................................
++ Elapsed despike time =  1s 206ms

++ FINAL: 53157888 data points, 1946277 edits [3.661%], 95946 big edits [0.180%]
++ Output dataset ./pb01.sub-S13.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S13.r03.despike pb00.sub-S13.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r03.tcat+orig.BRIK is 20.756298 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S13.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #13
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #10
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #2
++ start OpenMP thread #8
++ start OpenMP thread #9
++ start OpenMP thread #3
++ start OpenMP thread #11
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  825ms

++ FINAL: 38062080 data points, 1372576 edits [3.606%], 60608 big edits [0.159%]
++ Output dataset ./pb01.sub-S13.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S13.r04.despike pb00.sub-S13.r04.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r04.tcat+orig.BRIK is 18.913485 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S13.r04.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #13
++ start OpenMP thread #4
++ start OpenMP thread #11
++ start OpenMP thread #14
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #8
++ start OpenMP thread #6
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #10
++ start OpenMP thread #3
++ start OpenMP thread #7
........................................................
++ Elapsed despike time =  1s 245ms

++ FINAL: 53157888 data points, 1967707 edits [3.702%], 95120 big edits [0.179%]
++ Output dataset ./pb01.sub-S13.r04.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S13.r05.despike pb00.sub-S13.r05.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r05.tcat+orig.BRIK is 18.913485 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S13.r05.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #7
++ start OpenMP thread #8
++ start OpenMP thread #11
++ start OpenMP thread #13
++ start OpenMP thread #6
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #1
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #4
++ start OpenMP thread #2
........................................................
++ Elapsed despike time =  1s 267ms

++ FINAL: 53157888 data points, 2164485 edits [4.072%], 176587 big edits [0.332%]
++ Output dataset ./pb01.sub-S13.r05.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S13.r06.despike pb00.sub-S13.r06.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S13.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S13.r06.tcat+orig.BRIK is 18.913631 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S13.r06.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #12
++ start OpenMP thread #4
++ start OpenMP thread #7
++ start OpenMP thread #2
++ start OpenMP thread #14
++ start OpenMP thread #0
++ start OpenMP thread #11
++ start OpenMP thread #6
++ start OpenMP thread #10
++ start OpenMP thread #9
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #3
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  868ms

++ FINAL: 38062080 data points, 1463576 edits [3.845%], 104437 big edits [0.274%]
++ Output dataset ./pb01.sub-S13.r06.despike+orig.BRIK
end
foreach run ( 01 02 03 04 05 06 )
3dTshift -tzero 0 -quintic -prefix pb02.sub-S13.r01.tshift pb01.sub-S13.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S13.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S13.r01.despike+orig.BRIK is 20.756298 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S13.r02.tshift pb01.sub-S13.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S13.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S13.r02.despike+orig.BRIK is 20.756298 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S13.r03.tshift pb01.sub-S13.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S13.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S13.r03.despike+orig.BRIK is 20.756298 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S13.r04.tshift pb01.sub-S13.r04.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S13.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S13.r04.despike+orig.BRIK is 18.913485 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S13.r05.tshift pb01.sub-S13.r05.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S13.r05.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S13.r05.despike+orig.BRIK is 18.913485 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S13.r06.tshift pb01.sub-S13.r06.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S13.r06.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S13.r06.despike+orig.BRIK is 18.913631 degrees from plumb.
end
3dbucket -prefix vr_base pb02.sub-S13.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
align_epi_anat.py -anat2epi -anat anatSS.sub-S13+orig -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S13+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S13*
#Script is running (command trimmed):
  3dcopy ./anatSS.sub-S13+orig ./anatSS.sub-S13_unflipped+orig
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#Script is running (command trimmed):
  3dinfo ./anatSS.sub-S13_unflipped+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D02_Preproc_fMRI/anatSS.sub-S13_unflipped+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D02_Preproc_fMRI/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S13_unflipped+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./anatSS.sub-S13_unflipped_ob -newgrid 1.000000 ./anatSS.sub-S13_unflipped+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./anatSS.sub-S13_unflipped_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./anatSS.sub-S13_unflipped_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 20.756298 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 314.126892
 + Used gradual clip level = 297.104736 .. 349.773621
 + Number voxels above clip level = 46875
 + Clustering voxels ...
 + Largest cluster has 46493 voxels
 + Clustering voxels ...
 + Largest cluster has 45992 voxels
 + Filled   473 voxels in small holes; now have 46465 voxels
 + Filled     1 voxels in large holes; now have 46466 voxels
 + Clustering voxels ...
 + Largest cluster has 46466 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 84592 voxels
 + Mask now has 46480 voxels
++ 46480 voxels in the mask [out of 131072: 35.46%]
++ first   8 x-planes are zero [from R]
++ last    8 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last    4 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_ts_ns+orig
#++ Applying threshold of 809.414368 on /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S13/D02_Preproc_fMRI/vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_ts_ns_wt -a ./vr_base_ts_ns+orig -expr 'min(1,(a/809.414368))'
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./anatSS.sub-S13_unflipped_ob_al_junk_wtal -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S13_unflipped_ob+orig -prefix ./anatSS.sub-S13_unflipped_ob_temp_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S13_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 20.756298 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 20.756298 degrees from plumb.
++ Source dataset: ./anatSS.sub-S13_unflipped_ob+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1699970 voxels in -source_automask+2
++ Zero-pad: ybot=4 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 46480 voxels [21.0%] in weight mask
++ Output dataset ./anatSS.sub-S13_unflipped_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 46480
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 32.016 34.507 23.270 (index)
 + source center of mass = 145.431 166.729 196.354 (index)
 + source-target CM = -1.356 3.579 -3.907 (xyz)
 + estimated center of mass shifts = -1.356 3.579 -3.907
++ shift param auto-range: -62.0..59.3 -64.8..72.0 -60.5..52.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.355614 .. 8.644386  center = -1.355614
 + Range param#2 [y-shift] = -6.421021 .. 13.578979  center = 3.578979
 + Range param#3 [z-shift] = -13.907143 .. 6.092857  center = -3.907143
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.355614 .. 38.644386  center = -1.355614
 + Range param#2 [y-shift] = -36.421021 .. 43.578979  center = 3.578979
 + Range param#3 [z-shift] = -43.907143 .. 36.092857  center = -3.907143
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -41.356 ..   38.644
 +       y-shift =  -36.421 ..   43.579
 +       z-shift =  -43.907 ..   36.093
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1699970 [out of 31923696] voxels
 + base mask has 61242 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - copying weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 272.926 .. 1025.8; base clip 215.234 .. 828.196
 +  - versus source range 0.73702 .. 942.255; base range 0 .. 995.642
 + 41237 total points stored in 375 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o+++-+-.-oo--..$+ + - best 45 costs found:
    0 v= 0.483001:  -1.36   3.58  -3.91   0.00   0.00   0.00  [grid]
    1 v= 0.628464:  25.31  -9.75   9.43  15.00 -15.00 -15.00  [grid]
    2 v= 0.659472: -10.00 -16.85  13.56 -25.20 -18.50 -13.54  [rand]
    3 v= 0.666594: -28.02  -9.75   9.43 -15.00 -15.00  15.00  [grid]
    4 v= 0.674544: -14.69 -23.09   9.43 -30.00 -15.00 -15.00  [grid]
    5 v= 0.676692:  11.98  -9.75   9.43 -15.00 -15.00 -30.00  [grid]
    6 v= 0.692630:   7.29 -16.85  13.56  25.20 -18.50  13.54  [rand]
    7 v= 0.706894: -28.02 -23.09   9.43 -15.00 -30.00  15.00  [grid]
    8 v= 0.707639:  11.98  -9.75   9.43  30.00 -15.00  15.00  [grid]
    9 v= 0.711194: -11.68 -25.23  11.10 -30.67 -17.79 -20.52  [rand]
   10 v= 0.726669:  11.98  16.91 -17.24  15.00  15.00  15.00  [grid]
   11 v= 0.727794:  25.31 -23.09   9.43  15.00 -30.00 -15.00  [grid]
   12 v= 0.732345:  11.98  -9.75   9.43  15.00 -15.00  15.00  [grid]
   13 v= 0.750544: -14.69  -9.75   9.43  15.00 -15.00  30.00  [grid]
   14 v= 0.756239: -17.34 -15.91   1.82 -20.53  -3.14 -10.08  [rand]
   15 v= 0.769790: -33.84 -11.11 -15.71 -11.16  -9.40  34.39  [rand]
   16 v= 0.772143: -14.69 -23.09   9.43  15.00 -30.00  30.00  [grid]
   17 v= 0.776719: -17.50  -5.89 -28.26 -20.99  15.73  16.09  [rand]
   18 v= 0.779804: -28.02  -9.75 -30.57 -30.00  15.00  15.00  [grid]
   19 v= 0.780021:  11.98 -23.09  22.76  30.00 -30.00  15.00  [grid]
   20 v= 0.780860:  11.98 -23.09  22.76 -15.00 -30.00 -30.00  [grid]
   21 v= 0.789467: -24.21 -20.00   6.51  -5.91 -29.74  29.45  [rand]
   22 v= 0.796070: -14.69  16.91 -17.24 -15.00  15.00 -15.00  [grid]
   23 v= 0.798425:  14.79  -5.89  20.44  20.99 -15.73  16.09  [rand]
   24 v= 0.807265: -14.69  -9.75   9.43 -30.00 -15.00 -15.00  [grid]
   25 v= 0.808184: -17.34 -15.91  -9.63 -20.53  -3.14  10.08  [rand]
   26 v= 0.808342:  11.98  16.91 -17.24  15.00  15.00  30.00  [grid]
   27 v= 0.816859: -24.21 -20.00   6.51   5.91 -29.74  29.45  [rand]
   28 v= 0.819949:  25.31  -9.75   9.43  30.00 -15.00  15.00  [grid]
   29 v= 0.831100:  12.85  13.03  -8.75  15.99  13.53  29.93  [rand]
   30 v= 0.837572: -14.69  -9.75   9.43 -15.00 -15.00  15.00  [grid]
   31 v= 0.845154:  35.45 -29.51  16.29  39.82 -23.12   9.72  [rand]
   32 v= 0.845966: -35.68 -13.01 -12.51 -16.34  -8.64  40.54  [rand]
   33 v= 0.848727:  11.98  -9.75   9.43  30.00 -15.00  30.00  [grid]
   34 v= 0.853446:  25.31 -23.09  22.76  15.00 -30.00 -15.00  [grid]
   35 v= 0.855591:  32.97 -13.01 -12.51  16.34  -8.64 -40.54  [rand]
   36 v= 0.858136: -14.69 -23.09  22.76 -30.00 -15.00 -15.00  [grid]
   37 v= 0.860813:   8.97 -25.23  11.10  30.67 -17.79  20.52  [rand]
   38 v= 0.861261: -14.69 -23.09  22.76  15.00 -30.00  30.00  [grid]
   39 v= 0.863821:  25.31  16.91 -30.57  15.00  15.00 -30.00  [grid]
   40 v= 0.866380:  25.31  16.91 -17.24  15.00  15.00 -15.00  [grid]
   41 v= 0.867630:  11.98 -23.09   9.43  30.00 -15.00  15.00  [grid]
   42 v= 0.868688:  11.98  -9.75  22.76 -15.00 -15.00 -30.00  [grid]
   43 v= 0.871213: -28.02  -9.75 -30.57 -30.00  15.00  30.00  [grid]
   44 v= 0.872497:  11.98  -9.75  22.76  30.00 -15.00  30.00  [grid]
 + - A little optimization:*[#8004=0.276899] *[#8006=0.258387] *[#8012=0.230462] *[#8014=0.224927] *[#8015=0.194475] *[#8016=0.175675] *[#8017=0.164341] *[#8018=0.152157] *[#8021=0.136869] *[#8022=0.120518] *[#8023=0.109624] *[#8024=0.0499956] *[#8025=-0.0155471] *[#8026=-0.0583538] *[#8029=-0.117234] *[#8032=-0.160354] *[#8033=-0.176241] *[#8034=-0.184658] *[#8036=-0.220214] *[#8037=-0.248072] *[#8038=-0.274647] *[#8039=-0.283277] *[#8040=-0.310467] *[#8042=-0.31801] *[#8043=-0.336344] *[#8044=-0.371941] *[#8045=-0.393903] *[#8051=-0.401416] *[#8053=-0.428571] .............................................
 + - costs of the above after a little optimization:
  * 0 v=-0.428571:  -0.16  -0.22   0.25  -0.07  -0.26   0.17  [grid]
    1 v= 0.312748:   7.80  -4.32   5.14   4.44  -3.94  -0.98  [grid]
    2 v= 0.588246:  -9.64 -15.57  14.09 -18.86 -17.53 -11.15  [rand]
    3 v= 0.557360: -19.67 -12.06   7.72 -10.58 -13.98  10.79  [grid]
    4 v= 0.598127: -18.45 -13.91   7.09 -27.08  -9.27  -9.55  [grid]
    5 v= 0.575915:  12.07  -9.02   6.59  -2.06 -13.42 -18.03  [grid]
    6 v= 0.588130:   3.91 -13.77  13.31  13.22 -18.68   9.34  [rand]
    7 v= 0.636863: -26.79 -21.82   6.34 -19.09 -23.29  12.48  [grid]
    8 v= 0.625121:  14.39  -9.81   8.67  25.22 -12.17  15.75  [grid]
    9 v= 0.642403: -12.20 -22.63  15.12 -32.36 -16.48 -22.02  [rand]
   10 v= 0.591642:  10.37   9.64 -18.23  11.56  10.80   9.61  [grid]
   11 v= 0.673408:  25.78 -21.79   9.81  14.87 -25.38 -14.82  [grid]
   12 v= 0.389350:   6.26  -8.77   7.01   4.42  -8.04  -2.83  [grid]
   13 v= 0.413553:  -4.88  -9.36  11.86  -2.25 -11.17   3.45  [grid]
   14 v= 0.589793: -17.79  -9.47   3.11 -21.85  -4.26  -6.74  [rand]
   15 v= 0.670822: -30.85  -9.32 -14.39 -13.98  -9.90  36.51  [rand]
   16 v= 0.694703: -14.50 -21.10  11.90  11.68 -27.41  29.85  [grid]
   17 v= 0.614561: -21.81  -1.24 -24.77 -19.40  13.22  15.69  [rand]
   18 v= 0.643817: -28.27  -4.21 -24.09 -29.12  13.53   9.58  [grid]
   19 v= 0.684350:  10.74 -27.49  18.85  22.85 -29.86  11.13  [grid]
   20 v= 0.700859:  11.99 -23.53  17.57 -15.70 -27.55 -30.65  [grid]
   21 v= 0.584501: -16.11 -14.72   3.14  -4.18 -18.39  18.26  [rand]
   22 v= 0.496082:  -7.29  11.08 -17.93  -4.63  14.87   3.42  [grid]
   23 v= 0.598303:  12.65  -9.27   8.58  20.08 -12.39   9.50  [rand]
   24 v= 0.608562: -14.96 -12.12   7.72 -27.34  -6.52 -17.64  [grid]
   25 v= 0.310152:  -8.37  -0.98  -2.52  -4.48   1.57   4.63  [rand]
   26 v= 0.616469:   2.14   7.39 -17.73   9.20  11.43  18.42  [grid]
   27 v= 0.561349: -13.79 -17.33  13.48  -5.53 -19.70   8.36  [rand]
   28 v= 0.635989:  23.36 -10.71   7.81  31.35 -10.21  11.15  [grid]
   29 v=-0.038659:   1.07  -0.01  -4.88   0.70   2.77   1.27  [rand]
   30 v= 0.142069:  -7.30  -0.93   1.94  -4.14  -1.31   1.26  [grid]
   31 v= 0.702273:  29.88 -27.59  13.40  39.92 -24.76   6.98  [rand]
   32 v= 0.651212: -34.83 -12.16 -12.21 -19.22 -12.09  28.53  [rand]
   33 v= 0.640386:   8.87 -11.49  12.17  25.72 -14.27  23.06  [grid]
   34 v= 0.603904:  18.95 -18.39  14.51  11.45 -22.04  -9.63  [grid]
   35 v= 0.693902:  32.79  -6.19 -11.62  16.77  -7.19 -30.60  [rand]
   36 v= 0.640500: -14.67 -21.00  15.20 -29.30 -17.31 -17.47  [grid]
   37 v= 0.673847:  11.77 -20.26  14.57  32.05 -20.13  22.54  [rand]
   38 v= 0.639344:  -6.34 -18.41  11.83  14.20 -23.63  23.69  [grid]
   39 v= 0.727522:  22.71  10.36 -29.78  17.11  15.32 -28.95  [grid]
   40 v= 0.506730:  15.16   5.71 -15.69   9.81  11.07  -5.72  [grid]
   41 v= 0.321893:   7.20   1.69   3.17   4.78  -1.09  -5.28  [grid]
   42 v= 0.462141:   1.32 -11.60   6.93  -0.52  -9.94  -5.46  [grid]
   43 v= 0.633562: -28.01  -1.93 -25.99 -22.83  11.01  19.48  [grid]
   44 v= 0.652949:   7.08 -11.36  13.45  26.83 -14.35  26.53  [grid]
 + - save # 0 for possible use in twobest
 + - save #29 for possible use in twobest
 + - save #30 for possible use in twobest
 + - save #25 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - save #41 for possible use in twobest
 + - save #12 for possible use in twobest
 + - save #13 for possible use in twobest
 + - save #42 for possible use in twobest
 + - save #22 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save # 3 for possible use in twobest
 + - save #27 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - save #21 for possible use in twobest
 + - save # 6 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - save #14 for possible use in twobest
 + - save #10 for possible use in twobest
 + - save # 4 for possible use in twobest
 + - save #23 for possible use in twobest
 + - save #34 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 276.519 .. 1038.91; base clip 215.765 .. 849.141
 +  - versus source range 0.0544943 .. 942.006; base range 0 .. 997.724
 + 41453 total points stored in 402 'RHDD(12.342)' bloks
*[#10468=-0.431035] *[#10474=-0.432781] *[#10478=-0.440825] *[#10486=-0.441461] *[#10487=-0.441577] *[#10488=-0.441656] 
 + - param set #1 has cost=-0.441656
 + -- Parameters = -0.3496 -0.2727 0.2127 -0.0056 -0.3971 0.2494 1.0010 1.0014 1.0000 0.0007 0.0001 -0.0001
 + - param set #2 has cost=-0.265625
 + -- Parameters = 0.6571 -0.8226 -0.5312 0.6381 0.6509 0.6618 0.9829 0.9935 1.0155 0.0059 -0.0045 0.0079
 + - param set #3 has cost=-0.281124
 + -- Parameters = -2.0408 0.9854 1.4009 -1.2176 -1.2343 -0.1246 0.9858 1.0178 0.9881 -0.0147 0.0143 0.0033
 + - param set #4 has cost=-0.218538
 + -- Parameters = -1.8119 -1.1031 -0.4744 -1.1813 -0.0996 0.2792 0.9871 0.9958 1.0046 0.0077 -0.0056 -0.0055
 + - param set #5 has cost=-0.059208
 + -- Parameters = 2.3773 -0.4987 3.1870 1.4426 -2.0832 -0.9124 0.9978 1.0011 0.9962 0.0113 0.0195 0.0009
 + - param set #6 has cost=-0.096396
 + -- Parameters = 1.1703 -1.5078 -1.0209 1.3281 -0.8924 2.0094 1.0223 0.9888 0.9782 0.0182 0.0030 -0.0199
 + - param set #7 has cost=-0.176746
 + -- Parameters = -0.7279 -1.3993 2.0830 -0.4827 -2.5882 -1.0256 1.0001 0.9933 0.9940 0.0037 -0.0059 -0.0190
 + - param set #8 has cost=0.299031
 + -- Parameters = -3.3502 -7.9425 5.2629 -1.8407 -8.7266 0.9270 1.0065 0.9994 0.9978 0.0131 0.0073 -0.0563
 + - param set #9 has cost=0.215992
 + -- Parameters = 1.1793 -4.1428 7.3603 0.4847 -4.6388 -0.8642 1.0062 0.9733 1.0046 -0.0002 -0.0032 -0.0046
 + - param set #10 has cost=0.448963
 + -- Parameters = -6.1929 7.1678 -15.7439 -4.2046 12.9896 2.0162 0.9899 0.9947 0.9889 -0.0011 -0.0073 0.0033
 + - param set #11 has cost=0.441461
 + -- Parameters = 5.4766 1.2129 -15.4279 3.0139 10.3134 -2.6955 1.0136 0.9746 0.9914 -0.0010 0.0025 -0.0066
 + - param set #12 has cost=-0.398798
 + -- Parameters = -0.2496 0.1132 -0.7418 0.0985 -0.5513 0.2500 0.9917 1.0047 0.9842 -0.0019 -0.0004 -0.0121
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0538 
 + --- dist(#3,#1) = 0.0693 
 + --- dist(#4,#1) = 0.0491 
 + --- dist(#5,#1) = 0.0378 
 + --- dist(#6,#1) = 0.0846 
 + --- dist(#7,#1) = 0.0891 
 + --- dist(#8,#1) = 0.0871 
 + --- dist(#9,#1) = 0.0893 
 + --- dist(#10,#1) = 0.253 
 + --- dist(#11,#1) = 0.196 
 + --- dist(#12,#1) = 0.199 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 279.787 .. 1052.08; base clip 216.489 .. 874.571
 +  - versus source range 0.000578549 .. 942.02; base range 0 .. 1000.09
 + 41581 total points stored in 411 'RHDD(12.2051)' bloks
 + - param set #1 has cost=-0.401593
 + -- Parameters = -0.3470 0.1210 0.2379 0.0070 -0.5131 0.2409 1.0015 1.0075 0.9974 -0.0004 0.0006 -0.0012
 + - param set #2 has cost=-0.401794
 + -- Parameters = -0.3457 0.1153 0.0700 0.0147 -0.9482 0.2750 1.0085 1.0070 0.9854 -0.0019 0.0003 -0.0099
 + - param set #3 has cost=-0.363511
 + -- Parameters = -0.9130 0.7842 0.4750 -0.5524 -0.5189 -0.3300 0.9982 1.0169 0.9868 -0.0179 0.0126 0.0031
 + - param set #4 has cost=-0.345551
 + -- Parameters = -0.5239 -0.1986 0.2023 -0.1289 0.2100 0.3133 0.9993 1.0026 1.0080 0.0057 0.0011 0.0090
 + - param set #5 has cost=-0.371960
 + -- Parameters = -0.4181 -0.3748 -0.1583 0.0647 -0.4414 0.5137 1.0073 1.0002 1.0015 0.0051 -0.0047 -0.0060
 + - param set #6 has cost=-0.374246
 + -- Parameters = -0.0871 -0.2081 0.0603 0.1742 -1.2052 0.1701 0.9962 1.0021 0.9926 0.0061 0.0021 -0.0160
 + - param set #7 has cost=-0.319981
 + -- Parameters = -0.0167 -0.5083 0.0291 0.3552 -1.5338 0.4141 1.0034 1.0000 0.9983 0.0198 -0.0048 -0.0253
 + - param set #8 has cost=-0.273962
 + -- Parameters = 0.1074 -0.1503 0.3157 0.3356 -0.6749 -0.1113 0.9951 1.0029 0.9946 0.0205 0.0199 -0.0028
 + - param set #9 has cost=-0.173569
 + -- Parameters = -0.2167 -1.6232 0.5051 0.3273 -0.4234 -0.2298 1.0146 0.9799 1.0159 0.0106 0.0039 -0.0019
 + - param set #10 has cost=-0.207489
 + -- Parameters = -0.4765 -1.2991 -0.1370 0.0734 -3.4906 0.6581 1.0156 0.9910 0.9724 0.0016 -0.0102 -0.0590
 + - param set #11 has cost=-0.046533
 + -- Parameters = 0.6669 -1.6710 0.9370 1.0252 -0.8324 0.1460 1.0237 0.9753 1.0076 0.0300 0.0146 -0.0012
 + - param set #12 has cost=0.442202
 + -- Parameters = -5.5792 6.4503 -12.0249 -3.6795 11.3938 1.4117 1.0064 0.9657 0.9954 0.0071 -0.0029 0.0026
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0394 
 + --- dist(#3,#1) = 0.0361 
 + --- dist(#4,#1) = 0.0438 
 + --- dist(#5,#1) = 0.072 
 + --- dist(#6,#1) = 0.0853 
 + --- dist(#7,#1) = 0.0977 
 + --- dist(#8,#1) = 0.101 
 + --- dist(#9,#1) = 0.221 
 + --- dist(#10,#1) = 0.0831 
 + --- dist(#11,#1) = 0.144 
 + --- dist(#12,#1) = 0.151 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 282.343 .. 1064.72; base clip 217.013 .. 894.531
 +  - versus source range 0 .. 942.02; base range 0 .. 1002.63
 + 42375 total points stored in 432 'RHDD(12.1215)' bloks
 + - param set #1 has cost=-0.335823
 + -- Parameters = -0.3622 0.1522 0.0085 -0.0221 -1.0037 0.2710 1.0045 1.0072 0.9922 -0.0029 -0.0019 -0.0126
 + - param set #2 has cost=-0.328239
 + -- Parameters = -0.3941 0.2041 0.2133 -0.0566 -0.6028 0.2299 1.0027 1.0079 0.9929 -0.0028 -0.0007 -0.0025
 + - param set #3 has cost=-0.325118
 + -- Parameters = -0.2477 -0.0396 0.0178 0.0822 -1.1525 0.2203 1.0010 1.0052 0.9976 0.0027 -0.0003 -0.0165
 + - param set #4 has cost=-0.317700
 + -- Parameters = -0.2757 -0.1509 -0.0910 0.0820 -0.6131 0.3924 1.0037 1.0023 0.9967 0.0014 -0.0054 -0.0075
 + - param set #5 has cost=-0.321676
 + -- Parameters = -0.6438 0.5656 0.1940 -0.3085 -0.8434 -0.1143 1.0023 1.0132 0.9872 -0.0094 0.0081 -0.0052
 + - param set #6 has cost=-0.303932
 + -- Parameters = -0.3329 -0.1455 0.2706 -0.0372 -0.1153 0.1301 0.9996 1.0018 0.9985 -0.0005 0.0015 0.0066
 + - param set #7 has cost=-0.309868
 + -- Parameters = -0.1435 -0.0947 -0.1529 0.1802 -1.5712 0.3773 1.0030 1.0059 0.9943 0.0067 -0.0064 -0.0264
 + - param set #8 has cost=-0.295786
 + -- Parameters = -0.2210 0.0324 0.2943 0.0813 -0.7110 -0.1784 1.0063 1.0063 0.9940 0.0044 0.0122 -0.0029
 + - param set #9 has cost=-0.263999
 + -- Parameters = -0.3517 -0.1769 -0.5735 0.1142 -2.5015 0.4571 1.0067 1.0055 0.9873 -0.0003 -0.0092 -0.0499
 + - param set #10 has cost=-0.293353
 + -- Parameters = -0.2304 -0.5077 -0.1455 0.1084 -0.5835 0.2436 1.0030 0.9985 0.9985 0.0057 0.0006 -0.0088
 + - param set #11 has cost=-0.181667
 + -- Parameters = 0.5167 -0.9330 0.2732 0.6538 -1.1588 -0.1852 1.0166 0.9933 0.9959 0.0163 0.0127 -0.0113
 + - param set #12 has cost=0.450906
 + -- Parameters = -5.4319 5.7139 -10.5387 -3.4820 10.7350 2.1536 1.0057 0.9675 1.0032 0.0074 0.0019 0.0149
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0456 
 + --- dist(#3,#1) = 0.025 
 + --- dist(#4,#1) = 0.0449 
 + --- dist(#5,#1) = 0.0229 
 + --- dist(#6,#1) = 0.0619 
 + --- dist(#7,#1) = 0.0866 
 + --- dist(#8,#1) = 0.0633 
 + --- dist(#9,#1) = 0.0387 
 + --- dist(#10,#1) = 0.168 
 + --- dist(#11,#1) = 0.0863 
 + --- dist(#12,#1) = 0.132 
 + - Total coarse refinement net CPU time = 0.0 s; 3416 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 285.363 .. 1080.99; base clip 217.013 .. 894.531
 +  - versus source range 0 .. 942.381; base range 0 .. 1003.68
 + 42474 total points stored in 437 'RHDD(12.0364)' bloks
 + - cost(#1)=-0.292501 *
 + -- Parameters = -0.3622 0.1522 0.0085 -0.0221 -1.0037 0.2710 1.0045 1.0072 0.9922 -0.0029 -0.0019 -0.0126
 + - cost(#2)=-0.284451  
 + -- Parameters = -0.3941 0.2041 0.2133 -0.0566 -0.6028 0.2299 1.0027 1.0079 0.9929 -0.0028 -0.0007 -0.0025
 + - cost(#3)=-0.281798  
 + -- Parameters = -0.2477 -0.0396 0.0178 0.0822 -1.1525 0.2203 1.0010 1.0052 0.9976 0.0027 -0.0003 -0.0165
 + - cost(#4)=-0.276850  
 + -- Parameters = -0.6438 0.5656 0.1940 -0.3085 -0.8434 -0.1143 1.0023 1.0132 0.9872 -0.0094 0.0081 -0.0052
 + - cost(#5)=-0.276101  
 + -- Parameters = -0.2757 -0.1509 -0.0910 0.0820 -0.6131 0.3924 1.0037 1.0023 0.9967 0.0014 -0.0054 -0.0075
 + - cost(#6)=-0.267076  
 + -- Parameters = -0.1435 -0.0947 -0.1529 0.1802 -1.5712 0.3773 1.0030 1.0059 0.9943 0.0067 -0.0064 -0.0264
 + - cost(#7)=-0.263368  
 + -- Parameters = -0.3329 -0.1455 0.2706 -0.0372 -0.1153 0.1301 0.9996 1.0018 0.9985 -0.0005 0.0015 0.0066
 + - cost(#8)=-0.253434  
 + -- Parameters = -0.2210 0.0324 0.2943 0.0813 -0.7110 -0.1784 1.0063 1.0063 0.9940 0.0044 0.0122 -0.0029
 + - cost(#9)=-0.253067  
 + -- Parameters = -0.2304 -0.5077 -0.1455 0.1084 -0.5835 0.2436 1.0030 0.9985 0.9985 0.0057 0.0006 -0.0088
 + - cost(#10)=-0.225286  
 + -- Parameters = -0.3517 -0.1769 -0.5735 0.1142 -2.5015 0.4571 1.0067 1.0055 0.9873 -0.0003 -0.0092 -0.0499
 + - cost(#11)=-0.145230  
 + -- Parameters = 0.5167 -0.9330 0.2732 0.6538 -1.1588 -0.1852 1.0166 0.9933 0.9959 0.0163 0.0127 -0.0113
 + - cost(#12)=0.456654  
 + -- Parameters = -5.4319 5.7139 -10.5387 -3.4820 10.7350 2.1536 1.0057 0.9675 1.0032 0.0074 0.0019 0.0149
 + - cost(#13)=0.531424  
 + -- Parameters = -1.3556 3.5790 -3.9071 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.293018 *
 + -- Parameters = -0.3724 0.1554 0.0321 -0.0221 -1.0259 0.2811 1.0047 1.0076 0.9923 -0.0031 -0.0018 -0.0128
 + - cost(#2)=-0.286929  
 + -- Parameters = -0.4068 0.1797 0.2325 -0.0633 -0.6906 0.2676 1.0031 1.0070 0.9920 -0.0036 -0.0013 -0.0038
 + - cost(#3)=-0.290046  
 + -- Parameters = -0.3709 0.0073 0.0277 -0.0194 -1.1845 0.1993 1.0020 1.0054 0.9964 -0.0007 -0.0009 -0.0165
 + - cost(#4)=-0.285647  
 + -- Parameters = -0.5949 0.4964 0.2024 -0.2715 -0.8442 -0.1202 1.0024 1.0126 0.9945 -0.0103 0.0063 -0.0080
 + - cost(#5)=-0.285132  
 + -- Parameters = -0.3482 0.0683 0.0250 0.0106 -0.7551 0.3246 1.0019 1.0053 0.9933 0.0001 -0.0055 -0.0082
 + - cost(#6)=-0.283367  
 + -- Parameters = -0.4201 -0.0103 0.0425 -0.0046 -1.6907 0.4152 1.0052 1.0058 0.9928 0.0003 -0.0074 -0.0250
 + - cost(#7)=-0.273432  
 + -- Parameters = -0.3953 -0.0463 0.2809 -0.0810 -0.2711 0.1637 1.0006 1.0028 0.9920 -0.0030 -0.0012 0.0046
 + - cost(#8)=-0.283308  
 + -- Parameters = -0.4156 0.1209 0.3020 -0.1148 -0.7566 -0.0719 1.0036 1.0067 0.9926 -0.0033 0.0064 -0.0039
 + - cost(#9)=-0.274954  
 + -- Parameters = -0.3237 -0.1898 -0.0323 0.0454 -0.7137 0.2548 1.0055 1.0012 0.9942 0.0015 -0.0013 -0.0084
 + - cost(#10)=-0.266629  
 + -- Parameters = -0.6091 0.0192 -0.3306 -0.1506 -2.2942 0.4072 1.0067 1.0080 0.9944 -0.0034 -0.0040 -0.0411
 + - cost(#11)=-0.239038  
 + -- Parameters = 0.1146 -0.1453 0.3211 0.2609 -1.2609 -0.0104 1.0023 1.0020 0.9921 0.0102 0.0062 -0.0139
 + - cost(#12)=0.441548  
 + -- Parameters = -5.3877 5.3902 -8.0125 -3.1541 10.2219 3.5923 1.0087 0.9724 0.9850 -0.0063 -0.0084 0.0405
 + - cost(#13)=-0.270397  
 + -- Parameters = -0.3755 0.1350 0.3873 -0.0252 -0.4116 0.2573 1.0036 1.0063 0.9956 0.0003 0.0015 0.0029
 + - case #1 is now the best
 + - Initial  cost = -0.293018
 + - Initial fine Parameters = -0.3724 0.1554 0.0321 -0.0221 -1.0259 0.2811 1.0047 1.0076 0.9923 -0.0031 -0.0018 -0.0128
 + - Finalish cost = -0.293233 ; 142 funcs
 + - ini Finalish Parameters = -0.3772 0.1642 0.0434 -0.0288 -1.0357 0.2769 1.0047 1.0076 0.9922 -0.0032 -0.0018 -0.0129
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 285.247 .. 1080.94; base clip 217.013 .. 894.531
 +  - versus source range 0 .. 942.381; base range 0 .. 1003.68
*[#15386=-0.838264] *[#15443=-0.838337] *[#15457=-0.838582] *[#15475=-0.838625] *[#15476=-0.838652] *[#15477=-0.838723] *[#15480=-0.838825] *[#15481=-0.83884] *[#15482=-0.838879] *[#15485=-0.838975] *[#15486=-0.839133] *[#15487=-0.839152] *[#15489=-0.839175] *[#15490=-0.839351] *[#15495=-0.839577] *[#15496=-0.839724] *[#15497=-0.839732] *[#15498=-0.839761] *[#15499=-0.839823] *[#15500=-0.83987] *[#15502=-0.840069] *[#15503=-0.840112] *[#15507=-0.840179] *[#15514=-0.840236] *[#15517=-0.84027] *[#15520=-0.84036] *[#15523=-0.840398] *[#15526=-0.840482] *[#15531=-0.840525] *[#15532=-0.840551] *[#15537=-0.840622] *[#15539=-0.840632] *[#15540=-0.840719] *[#15543=-0.840759] *[#15548=-0.840779] *[#15552=-0.840781] *[#15556=-0.840783] *[#15558=-0.840798] *[#15559=-0.8408] *[#15563=-0.840802] *[#15566=-0.840906] *[#15567=-0.840965] *[#15568=-0.841007] *[#15571=-0.841118] *[#15574=-0.841193] *[#15575=-0.841298] *[#15576=-0.841374] *[#15578=-0.841414] *[#15579=-0.841464] *[#15582=-0.841527] *[#15583=-0.841576] *[#15584=-0.841652] *[#15585=-0.841656] *[#15586=-0.841768] *[#15587=-0.841848] *[#15588=-0.841893] *[#15589=-0.842107] *[#15590=-0.842299] *[#15591=-0.842617] *[#15594=-0.842784] *[#15595=-0.843017] *[#15596=-0.843146] *[#15597=-0.843192] *[#15598=-0.843265] *[#15599=-0.843294] *[#15600=-0.843331] *[#15601=-0.843355] *[#15602=-0.843359] *[#15605=-0.843478] *[#15608=-0.843584] *[#15610=-0.843643] *[#15611=-0.843731] *[#15612=-0.843752] *[#15613=-0.84376] *[#15614=-0.843797] *[#15621=-0.843867] *[#15623=-0.84387] *[#15624=-0.844038] *[#15625=-0.844092] *[#15626=-0.844173] *[#15627=-0.844268] *[#15628=-0.84433] *[#15629=-0.844428] *[#15632=-0.8445] *[#15635=-0.844539] *[#15640=-0.844548] *[#15642=-0.844653] *[#15643=-0.844746] *[#15646=-0.844787] *[#15649=-0.844852] *[#15651=-0.844856] *[#15652=-0.844879] *[#15655=-0.844936] *[#15656=-0.844941] *[#15661=-0.844978] *[#15666=-0.845034] *[#15671=-0.845053] *[#15674=-0.845056] *[#15680=-0.845057] *[#15682=-0.845076] *[#15683=-0.845086] *[#15686=-0.845087] *[#15692=-0.845106] *[#15693=-0.845107] *[#15695=-0.845111] *[#15696=-0.845118] *[#15697=-0.84512] *[#15700=-0.845144] *[#15703=-0.845165] *[#15706=-0.845172] *[#15708=-0.845174] *[#15710=-0.845183] *[#15719=-0.845238] *[#15720=-0.845254] *[#15724=-0.845266] *[#15725=-0.845272] *[#15726=-0.845276] *[#15730=-0.845312] *[#15735=-0.845325] *[#15737=-0.845379] *[#15744=-0.845407] *[#15745=-0.845409] *[#15746=-0.845444] *[#15747=-0.845513] *[#15748=-0.845531] *[#15749=-0.845546] *[#15754=-0.845564] *[#15756=-0.845583] *[#15757=-0.845642] *[#15758=-0.845671] *[#15759=-0.845739] *[#15760=-0.845754] *[#15761=-0.845787] *[#15768=-0.845803] *[#15769=-0.845805] *[#15771=-0.845826] *[#15772=-0.84583] *[#15774=-0.845834] *[#15775=-0.845842] *[#15776=-0.845856] *[#15777=-0.845863] *[#15778=-0.845869] *[#15779=-0.845899] *[#15782=-0.845903] *[#15784=-0.845916] *[#15787=-0.845945] *[#15788=-0.845957] *[#15789=-0.845971] *[#15790=-0.845992] *[#15793=-0.84607] *[#15796=-0.846105] *[#15797=-0.846119] *[#15802=-0.846141] *[#15807=-0.846147] *[#15818=-0.846157] *[#15821=-0.846165] *[#15822=-0.846173] *[#15823=-0.846175] *[#15824=-0.846178] *[#15825=-0.846185] *[#15832=-0.8462] *[#15833=-0.846202] *[#15839=-0.846204] *[#15841=-0.846206] *[#15844=-0.846211] *[#15853=-0.846218] *[#15858=-0.846218] *[#15860=-0.846226] *[#15861=-0.846227] *[#15865=-0.846239] *[#15870=-0.846247] *[#15871=-0.846248] *[#15873=-0.84625] *[#15875=-0.846255] *[#15876=-0.846257] *[#15877=-0.846257] *[#15879=-0.846257] *[#15880=-0.846259] *[#15886=-0.846262] *[#15888=-0.846265] *[#15889=-0.846272] *[#15894=-0.84628] *[#15899=-0.846289] *[#15904=-0.846295] *[#15905=-0.846296] *[#15908=-0.846298] *[#15909=-0.846298] *[#15912=-0.846303] *[#15915=-0.846308] *[#15916=-0.846308] *[#15920=-0.846324] *[#15931=-0.846336] *[#15934=-0.846349] *[#15937=-0.84635] *[#15943=-0.846378] *[#15948=-0.846392] *[#15951=-0.846406] *[#15952=-0.846407] *[#15954=-0.846421] *[#15955=-0.846423] *[#15957=-0.846424] *[#15959=-0.846426] *[#15961=-0.846433] *[#15962=-0.846451] *[#15965=-0.846464] *[#15966=-0.84647] *[#15967=-0.846481] *[#15968=-0.846494] *[#15969=-0.84651] *[#15972=-0.846512] *[#15975=-0.846529] *[#15978=-0.84653] *[#15979=-0.846534] *[#15980=-0.846538] *[#15989=-0.846541] *[#15991=-0.84655] *[#15994=-0.846552] *[#15996=-0.846556] *[#16006=-0.846567] *[#16011=-0.846571] *[#16012=-0.846571] *[#16014=-0.846575] *[#16021=-0.846577] *[#16022=-0.846577] *[#16025=-0.84658] *[#16028=-0.84659] *[#16029=-0.846596] *[#16034=-0.846599] *[#16037=-0.846606] *[#16040=-0.846606] *[#16043=-0.846607] *[#16045=-0.84661] *[#16048=-0.846611] *[#16049=-0.846613] *[#16054=-0.846617] *[#16057=-0.846617] *[#16058=-0.846618] *[#16063=-0.84662] *[#16066=-0.846624] *[#16069=-0.846625] *[#16071=-0.846629] *[#16095=-0.84663] *[#16105=-0.84663] *[#16111=-0.846632] *[#16114=-0.846633] *[#16122=-0.846635] *[#16127=-0.846635] *[#16131=-0.846636] *[#16132=-0.846637] *[#16134=-0.846639] *[#16135=-0.846642] *[#16136=-0.846642] *[#16137=-0.846642] *[#16140=-0.846645] *[#16143=-0.846646] *[#16146=-0.846654] *[#16157=-0.846654] *[#16165=-0.846654] *[#16166=-0.846656] *[#16168=-0.84666] *[#16171=-0.846663] *[#16174=-0.846664] *[#16182=-0.846666] *[#16185=-0.846669] *[#16188=-0.84667] *[#16194=-0.846671] *[#16200=-0.846673] *[#16203=-0.846674] *[#16207=-0.846677] *[#16220=-0.846679] *[#16231=-0.846682] *[#16234=-0.846683] *[#16239=-0.846684] *[#16242=-0.846685] *[#16245=-0.846687] *[#16246=-0.846688] *[#16249=-0.846691] *[#16250=-0.846693] *[#16253=-0.846693] *[#16257=-0.8467] *[#16258=-0.846701] *[#16259=-0.846703] *[#16264=-0.846706] *[#16269=-0.84671] *[#16272=-0.846712] *[#16273=-0.846713] *[#16276=-0.846716] *[#16277=-0.846718] *[#16278=-0.84672] *[#16283=-0.846722] *[#16284=-0.846723] *[#16286=-0.846723] *[#16290=-0.846731] *[#16291=-0.846731] *[#16297=-0.846732] *[#16314=-0.846734] *[#16315=-0.846737] *[#16350=-0.846737] *[#16355=-0.846737] *[#16362=-0.846737] *[#16364=-0.846737] *[#16367=-0.846738] *[#16368=-0.846738] *[#16391=-0.846738] *[#16396=-0.846739] *[#16399=-0.846739] *[#16410=-0.846739] *[#16432=-0.846739] *[#16435=-0.84674] *[#16444=-0.84674] *[#16481=-0.84674] 
 + - Final    cost = -0.846740 ; 1127 funcs
 + Final fine fit Parameters:
       x-shift= -0.5641   y-shift=  0.3265   z-shift=  0.0984  ...  enorm=  0.6592 mm
       z-angle= -0.1823   x-angle= -1.3822   y-angle=  0.1194  ...  total=  1.3995 deg
       x-scale=  1.0057   y-scale=  1.0108   z-scale=  0.9991  ...  vol3D=  1.0157 = base smaller than source
     y/x-shear= -0.0069 z/x-shear=  0.0009 z/y-shear= -0.0198
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5641 0.3265 0.0984 -0.1823 -1.3822 0.1194 1.0057 1.0108 0.9991 -0.0069 0.0009 -0.0198
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S13_unflipped_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S13_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 56.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_anatSS.sub-S13_lr_al_junk -overwrite ./anatSS.sub-S13_unflipped_ob+orig
++ processing ./anatSS.sub-S13_unflipped_ob+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_ts_ns_wt+orig -source ./__tt_anatSS.sub-S13_lr_al_junk+orig -prefix ./anatSS.sub-S13_flip_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S13_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 20.756298 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 20.756298 degrees from plumb.
++ Source dataset: ./__tt_anatSS.sub-S13_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1699970 voxels in -source_automask+2
++ Zero-pad: ybot=4 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 46480 voxels [21.0%] in weight mask
++ Number of points for matching = 46480
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 32.016 34.507 23.270 (index)
 + source center of mass = 130.569 166.729 196.354 (index)
 + source-target CM = -16.217 3.579 -3.907 (xyz)
 + estimated center of mass shifts = -16.217 3.579 -3.907
++ shift param auto-range: -76.9..44.5 -64.8..72.0 -60.5..52.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -26.217430 .. -6.217430  center = -16.217430
 + Range param#2 [y-shift] = -6.421021 .. 13.578979  center = 3.578979
 + Range param#3 [z-shift] = -13.907143 .. 6.092857  center = -3.907143
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -56.217430 .. 23.782570  center = -16.217430
 + Range param#2 [y-shift] = -36.421021 .. 43.578979  center = 3.578979
 + Range param#3 [z-shift] = -43.907143 .. 36.092857  center = -3.907143
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -56.217 ..   23.783
 +       y-shift =  -36.421 ..   43.579
 +       z-shift =  -43.907 ..   36.093
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1699970 [out of 31923696] voxels
 + base mask has 61242 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - copying weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 272.811 .. 1025.39; base clip 215.234 .. 828.196
 +  - versus source range 0.73702 .. 942.255; base range 0 .. 995.642
 + 41237 total points stored in 375 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o+++-o-.-oo-+.+$.+ + - best 45 costs found:
    0 v= 0.509669: -16.22   3.58  -3.91   0.00   0.00   0.00  [grid]
    1 v= 0.635633:  10.45  -9.75   9.43  15.00 -15.00 -15.00  [grid]
    2 v= 0.642199: -24.86 -16.85  13.56 -25.20 -18.50 -13.54  [rand]
    3 v= 0.655850:  -2.88  -9.75   9.43 -15.00 -15.00 -30.00  [grid]
    4 v= 0.656179: -29.55 -23.09   9.43 -30.00 -15.00 -15.00  [grid]
    5 v= 0.677633: -26.54 -25.23  11.10 -30.67 -17.79 -20.52  [rand]
    6 v= 0.696165: -42.88  -9.75   9.43 -15.00 -15.00  15.00  [grid]
    7 v= 0.715069: -42.88 -23.09   9.43 -15.00 -30.00  15.00  [grid]
    8 v= 0.716551:  -7.58 -16.85  13.56  25.20 -18.50  13.54  [rand]
    9 v= 0.730598:  10.45 -23.09   9.43  15.00 -30.00 -15.00  [grid]
   10 v= 0.733300:  -2.88  -9.75   9.43  30.00 -15.00  15.00  [grid]
   11 v= 0.742166: -32.20 -15.91   1.82 -20.53  -3.14 -10.08  [rand]
   12 v= 0.752592:  -2.88  -9.75   9.43  15.00 -15.00  15.00  [grid]
   13 v= 0.754288:  -2.88  16.91 -17.24  15.00  15.00  15.00  [grid]
   14 v= 0.768462: -29.55  16.91 -17.24 -15.00  15.00 -15.00  [grid]
   15 v= 0.774988:  -2.88 -23.09  22.76 -15.00 -30.00 -30.00  [grid]
   16 v= 0.789722: -32.36  -5.89 -28.26 -20.99  15.73  16.09  [rand]
   17 v= 0.794329: -29.55  -9.75   9.43 -30.00 -15.00 -15.00  [grid]
   18 v= 0.796651: -29.55  -9.75   9.43  15.00 -15.00  30.00  [grid]
   19 v= 0.798567: -29.55 -23.09   9.43  15.00 -30.00  30.00  [grid]
   20 v= 0.801616: -42.88  -9.75 -30.57 -30.00  15.00  15.00  [grid]
   21 v= 0.804629:  -2.88 -23.09  22.76  30.00 -30.00  15.00  [grid]
   22 v= 0.809246: -39.07 -20.00   6.51  -5.91 -29.74  29.45  [rand]
   23 v= 0.818216: -48.70 -11.11 -15.71 -11.16  -9.40  34.39  [rand]
   24 v= 0.821564: -32.20 -15.91  -9.63 -20.53  -3.14  10.08  [rand]
   25 v= 0.825764: -39.07 -20.00   6.51   5.91 -29.74  29.45  [rand]
   26 v= 0.825909:  -2.88  -9.75  22.76 -15.00 -15.00 -30.00  [grid]
   27 v= 0.833314:  10.45  16.91 -30.57  15.00  15.00 -30.00  [grid]
   28 v= 0.833473:  18.11 -13.01 -12.51  16.34  -8.64 -40.54  [rand]
   29 v= 0.835355:  -2.88  16.91 -17.24  15.00  15.00  30.00  [grid]
   30 v= 0.835769: -29.55 -23.09  22.76 -30.00 -15.00 -15.00  [grid]
   31 v= 0.836408:  -0.07  -5.89  20.44  20.99 -15.73  16.09  [rand]
   32 v= 0.840069:  -2.01  13.03  -8.75  15.99  13.53  29.93  [rand]
   33 v= 0.841037: -29.55  -9.75  22.76 -30.00 -15.00 -15.00  [grid]
   34 v= 0.843890:  10.45  -9.75   9.43  30.00 -15.00  15.00  [grid]
   35 v= 0.845317: -29.55 -23.09  22.76 -30.00 -30.00 -15.00  [grid]
   36 v= 0.849676: -29.55  -9.75   9.43 -15.00 -15.00  15.00  [grid]
   37 v= 0.850214:  10.45  16.91 -17.24  15.00  15.00 -15.00  [grid]
   38 v= 0.861192: -32.20 -15.91   1.82 -20.53   3.14 -10.08  [rand]
   39 v= 0.866496: -50.54 -13.01 -12.51 -16.34  -8.64  40.54  [rand]
   40 v= 0.867433:  10.45 -23.09  22.76  15.00 -30.00 -15.00  [grid]
   41 v= 0.871249:  20.59 -29.51  16.29  39.82 -23.12   9.72  [rand]
   42 v= 0.873766:  -2.88 -23.09   9.43  30.00 -15.00  15.00  [grid]
   43 v= 0.876571: -35.71 -13.09  -6.51 -30.54  19.59 -20.03  [rand]
   44 v= 0.881357:  10.45  16.91 -30.57  15.00  15.00 -15.00  [grid]
 + - A little optimization:*[#8002=0.504673] *[#8004=0.423775] *[#8013=0.399647] *[#8015=0.383856] *[#8016=0.359099] *[#8017=0.336499] *[#8018=0.328988] *[#8021=0.325773] *[#8022=0.324843] *[#8025=0.320102] *[#8027=0.319157] *[#8030=0.316922] *[#8033=0.315855] *[#8035=0.314228] *[#8036=0.313398] *[#8037=0.309737] *[#8038=0.309049] *[#8043=0.307522] ....................................*[#9871=0.306721] *[#9874=0.305957] .........
 + - costs of the above after a little optimization:
    0 v= 0.307522: -15.39   0.98  -0.19  -2.22  -0.04   0.17  [grid]
    1 v= 0.605995:   9.26  -9.24   7.83  14.86 -12.88 -10.29  [grid]
    2 v= 0.590748: -24.31 -16.26  13.69 -19.56 -17.66 -10.92  [rand]
    3 v= 0.597280:  -2.39  -9.89   5.40  -2.83 -13.00 -21.90  [grid]
    4 v= 0.617168: -31.03 -19.87  11.32 -28.99 -14.36 -13.85  [grid]
    5 v= 0.633232: -26.39 -23.89  15.91 -31.17 -18.74 -22.45  [rand]
    6 v= 0.604417: -39.77 -13.86   2.19 -14.67 -14.08  16.03  [grid]
    7 v= 0.619462: -39.02 -18.88   7.05 -18.06 -21.24   9.55  [grid]
    8 v= 0.650476:  -3.26 -15.40  12.85  22.33 -18.77  12.62  [rand]
    9 v= 0.666831:   9.93 -20.52   9.91  15.39 -23.97 -13.69  [grid]
   10 v= 0.648976:  -1.94  -9.94   8.96  25.78 -11.78  17.31  [grid]
   11 v= 0.584676: -32.79 -10.18   2.34 -23.73  -4.34  -9.56  [rand]
   12 v= 0.382523: -17.23  -4.79   6.21  -2.51  -6.57   2.39  [grid]
   13 v= 0.446951:  -9.59   5.78 -11.26   2.28   9.63  -1.24  [grid]
   14 v= 0.563977: -23.59   8.49 -18.94 -10.82  12.78  -9.91  [grid]
   15 v= 0.698830:  -3.33 -23.22  18.85 -13.69 -26.46 -25.59  [grid]
   16 v= 0.622229: -36.37  -0.46 -26.87 -18.35  14.75  16.60  [rand]
   17 v= 0.591170: -29.88 -12.47   8.59 -24.48  -8.57 -13.76  [grid]
   18 v= 0.403477: -17.01  -6.80   7.98  -3.24  -8.58   0.86  [grid]
   19 v= 0.687000: -23.22 -20.23  14.06  13.80 -27.57  24.22  [grid]
   20 v= 0.597079: -38.77  -1.27 -18.35 -22.96   9.72   7.78  [grid]
   21 v= 0.720115:  -0.69 -27.02  19.32  26.19 -30.34  10.52  [grid]
   22 v= 0.700945: -39.16 -21.18   5.97   0.15 -27.37  29.87  [rand]
   23 v= 0.557244: -36.42 -11.43  -1.15 -16.25  -9.12  12.35  [rand]
   24 v= 0.568960: -36.37 -12.42   1.43 -19.74  -8.55   4.26  [rand]
   25 v= 0.700582: -34.87 -21.73   9.14   3.42 -27.79  27.95  [rand]
   26 v= 0.334474: -11.75   0.35   0.61   0.39  -0.20  -0.29  [grid]
   27 v= 0.620495:   6.90   5.20 -21.27  14.68  11.90 -15.34  [grid]
   28 v= 0.698536:  19.50  -7.26  -8.92  16.62  -9.50 -37.38  [rand]
   29 v= 0.606960:  -4.52  10.50 -18.08   9.58  10.96   9.96  [grid]
   30 v= 0.628982: -29.83 -20.59  15.84 -30.36 -16.49 -18.83  [grid]
   31 v= 0.612658:   1.40  -7.36   3.02  19.61  -6.50   4.07  [rand]
   32 v= 0.396692: -10.89   2.05  -6.83   1.14   5.10   1.12  [rand]
   33 v= 0.588894: -29.19 -14.36  13.06 -21.54 -14.59  -9.41  [grid]
   34 v= 0.639952:   5.08  -9.21   5.73  29.15  -9.36  11.67  [grid]
   35 v= 0.640251: -29.59 -23.77  18.36 -27.62 -21.86 -14.31  [grid]
  *36 v= 0.305957: -16.66   0.13   0.94  -3.01  -0.90   0.29  [grid]
   37 v= 0.504414:  -1.55   4.83  -9.97   7.55   8.28  -1.86  [grid]
   38 v= 0.592358: -32.53  -9.00   1.29 -24.09   0.76 -11.68  [rand]
   39 v= 0.708338: -50.06 -11.76 -14.51 -16.18 -12.53  34.16  [rand]
   40 v= 0.609565:   2.14 -16.03   9.69   9.04 -20.59 -12.01  [grid]
   41 v= 0.725362:  16.48 -27.79  13.10  44.87 -21.42   9.10  [rand]
   42 v= 0.666826:  -0.42 -16.93  11.80  27.76 -18.44  14.08  [grid]
   43 v= 0.627817: -35.68  -7.37  -3.66 -30.93   9.34 -18.29  [rand]
   44 v= 0.652560:   5.05   9.51 -26.70  12.32  15.76 -14.61  [grid]
 + - save #36 for possible use in twobest
 + - skip # 0 for twobest: too close to set #36
 + - skip #26 for twobest: too close to set # 0
 + - save #12 for possible use in twobest
 + - save #32 for possible use in twobest
 + - skip #18 for twobest: too close to set #12
 + - save #13 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save #23 for possible use in twobest
 + - save #14 for possible use in twobest
 + - save #24 for possible use in twobest
 + - save #11 for possible use in twobest
 + - save #33 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - save #17 for possible use in twobest
 + - save #38 for possible use in twobest
 + - save #20 for possible use in twobest
 + - save # 3 for possible use in twobest
 + - save # 6 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - save #29 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save #31 for possible use in twobest
 + - save # 4 for possible use in twobest
 + - save # 7 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 276.518 .. 1039.43; base clip 215.765 .. 849.141
 +  - versus source range 0.0544943 .. 942.006; base range 0 .. 997.724
 + 41453 total points stored in 402 'RHDD(12.342)' bloks
 + - param set #1 has cost=0.338809
 + -- Parameters = -16.6904 0.3575 0.9426 -3.1284 -0.9678 0.2934 0.9993 1.0006 0.9987 -0.0005 0.0004 0.0004
 + - param set #2 has cost=0.362155
 + -- Parameters = -17.5465 -2.1418 2.8898 -3.5031 -2.8876 0.6443 0.9879 0.9846 1.0073 0.0019 0.0066 -0.0131
 + - param set #3 has cost=0.357639
 + -- Parameters = -15.6728 2.2103 -3.6302 -2.3624 2.2306 0.7463 0.9979 1.0027 0.9729 -0.0046 -0.0068 -0.0062
 + - param set #4 has cost=0.434162
 + -- Parameters = -11.4585 4.6853 -9.2379 0.6987 8.3233 0.3068 0.9886 0.9901 0.9912 0.0109 0.0193 0.0017
 + - param set #5 has cost=0.347191
 + -- Parameters = -16.6480 1.2472 -2.7920 -3.2775 1.0717 -0.1504 0.9972 0.9927 0.9578 -0.0106 0.0269 -0.0150
 + - param set #6 has cost=0.509817
 + -- Parameters = -32.0239 -12.6266 -0.0550 -11.2246 -8.1470 9.7830 0.9978 0.9919 0.9760 0.0028 -0.0289 0.0048
 + - param set #7 has cost=0.465899
 + -- Parameters = -18.7031 3.1759 -12.4402 -4.1303 9.0040 2.7512 0.9979 0.9965 0.9952 0.0302 -0.0096 -0.0201
 + - param set #8 has cost=0.490995
 + -- Parameters = -26.1813 -9.9974 -0.9673 -9.9830 -5.9212 3.4090 0.9895 1.0122 0.9292 -0.0048 0.0169 -0.0035
 + - param set #9 has cost=0.555392
 + -- Parameters = -34.6918 -9.4388 1.6976 -23.7083 1.2036 -8.1605 0.9845 0.9910 0.9777 -0.0089 0.0194 0.0041
 + - param set #10 has cost=0.550801
 + -- Parameters = -27.2409 -13.1798 13.1703 -19.8422 -11.1633 -16.5929 0.9916 0.9705 0.9671 0.0152 0.0115 -0.0033
 + - param set #11 has cost=0.547397
 + -- Parameters = -24.2307 -16.9285 15.1932 -16.9282 -16.3514 -12.1812 0.9885 0.9851 0.9580 -0.0116 0.0115 0.0183
 + - param set #12 has cost=0.333404
 + -- Parameters = -15.9701 1.6205 -0.2402 -2.5679 -0.0920 0.0963 0.9729 1.0124 0.9919 0.0062 0.0020 -0.0041
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0719 
 + --- dist(#3,#1) = 0.112 
 + --- dist(#4,#1) = 0.068 
 + --- dist(#5,#1) = 0.0759 
 + --- dist(#6,#1) = 0.112 
 + --- dist(#7,#1) = 0.153 
 + --- dist(#8,#1) = 0.171 
 + --- dist(#9,#1) = 0.201 
 + --- dist(#10,#1) = 0.232 
 + --- dist(#11,#1) = 0.192 
 + --- dist(#12,#1) = 0.235 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 280.716 .. 1054.68; base clip 216.489 .. 874.571
 +  - versus source range 0.000578549 .. 942.02; base range 0 .. 1000.09
 + 41581 total points stored in 411 'RHDD(12.2051)' bloks
 + - param set #1 has cost=0.365111
 + -- Parameters = -16.0624 1.5332 -0.1678 -2.8334 -0.4429 -0.1931 0.9909 1.0157 0.9915 0.0039 -0.0005 -0.0064
 + - param set #2 has cost=0.365846
 + -- Parameters = -16.2305 0.8512 0.5965 -3.0753 -1.0070 -0.1452 0.9940 1.0088 0.9971 -0.0086 -0.0047 -0.0030
 + - param set #3 has cost=0.370898
 + -- Parameters = -15.8865 1.0139 -1.6862 -3.1966 -0.1140 -0.8412 1.0014 1.0001 0.9597 -0.0124 0.0243 -0.0121
 + - param set #4 has cost=0.367804
 + -- Parameters = -15.9123 1.2444 -1.1564 -3.0764 -0.3459 -0.5674 1.0020 1.0042 0.9675 -0.0026 0.0010 -0.0094
 + - param set #5 has cost=0.374034
 + -- Parameters = -16.9376 -0.0598 1.1019 -3.3461 -1.6405 0.4284 0.9808 1.0019 1.0201 0.0001 -0.0017 -0.0166
 + - param set #6 has cost=0.412847
 + -- Parameters = -15.7307 1.8104 -4.3015 -2.5781 4.7768 0.1297 1.0045 0.9798 0.9731 0.0279 0.0215 0.0237
 + - param set #7 has cost=0.440396
 + -- Parameters = -16.0905 2.9949 -8.1324 -1.6604 6.5945 3.8520 1.0002 0.9827 0.9872 0.0321 -0.0206 -0.0044
 + - param set #8 has cost=0.428060
 + -- Parameters = -19.9263 -3.9685 0.4247 -4.9181 -3.4830 1.9469 0.9761 0.9791 0.8985 -0.0010 -0.0037 -0.0112
 + - param set #9 has cost=0.516082
 + -- Parameters = -29.9532 -11.7277 1.4672 -11.0304 -7.8591 7.9637 1.0078 0.9870 0.9711 0.0049 -0.0224 0.0048
 + - param set #10 has cost=0.554726
 + -- Parameters = -24.1154 -17.4049 14.8303 -16.2868 -16.2745 -12.0175 0.9876 0.9848 0.9582 -0.0119 0.0111 0.0170
 + - param set #11 has cost=0.561686
 + -- Parameters = -27.4985 -13.0827 13.0078 -19.9214 -11.1345 -16.7780 0.9914 0.9734 0.9660 0.0150 0.0112 -0.0032
 + - param set #12 has cost=0.558337
 + -- Parameters = -34.7620 -9.1752 1.3999 -23.7197 2.0176 -8.8524 0.9829 0.9896 0.9787 -0.0088 0.0181 0.0037
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0561 
 + --- dist(#3,#1) = 0.0654 
 + --- dist(#4,#1) = 0.112 
 + --- dist(#5,#1) = 0.0778 
 + --- dist(#6,#1) = 0.135 
 + --- dist(#7,#1) = 0.253 
 + --- dist(#8,#1) = 0.127 
 + --- dist(#9,#1) = 0.174 
 + --- dist(#10,#1) = 0.237 
 + --- dist(#11,#1) = 0.234 
 + --- dist(#12,#1) = 0.19 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + - using 46480 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 281.762 .. 1064.49; base clip 217.013 .. 894.531
 +  - versus source range 0 .. 942.02; base range 0 .. 1002.63
 + 42375 total points stored in 432 'RHDD(12.1215)' bloks
 + - param set #1 has cost=0.395997
 + -- Parameters = -15.8916 1.7474 -0.3803 -2.8580 -0.3964 -0.3172 0.9916 1.0150 0.9892 0.0027 -0.0017 -0.0062
 + - param set #2 has cost=0.396984
 + -- Parameters = -16.2745 0.9115 0.5360 -3.1829 -1.0173 -0.2197 0.9936 1.0083 0.9970 -0.0092 -0.0044 -0.0038
 + - param set #3 has cost=0.393158
 + -- Parameters = -15.9194 1.3695 -1.0454 -2.9598 -0.7957 -0.4237 1.0046 1.0169 0.9723 -0.0052 -0.0004 -0.0134
 + - param set #4 has cost=0.398163
 + -- Parameters = -15.8260 1.3732 -1.5107 -3.2220 -0.4209 -1.1201 1.0020 1.0118 0.9624 -0.0133 0.0237 -0.0127
 + - param set #5 has cost=0.395879
 + -- Parameters = -16.5175 0.3886 0.8942 -3.1381 -1.7801 0.3372 0.9877 1.0100 1.0037 -0.0113 -0.0109 -0.0124
 + - param set #6 has cost=0.432445
 + -- Parameters = -14.9198 1.9683 -2.6066 -2.4239 3.4794 -1.3022 1.0096 0.9862 0.9680 0.0253 0.0209 0.0307
 + - param set #7 has cost=0.394124
 + -- Parameters = -18.4093 -1.0250 0.0250 -4.2545 -3.1674 1.4572 1.0254 0.9962 0.9831 -0.0472 -0.0645 -0.0470
 + - param set #8 has cost=0.441988
 + -- Parameters = -15.8423 3.6133 -4.5436 -1.7375 4.5846 2.6079 0.9912 1.0021 0.9732 0.0252 -0.0174 0.0064
 + - param set #9 has cost=0.514812
 + -- Parameters = -27.5261 -9.6490 2.5613 -10.1968 -7.4317 5.4413 1.0120 0.9895 0.9672 0.0024 -0.0213 0.0003
 + - param set #10 has cost=0.556321
 + -- Parameters = -23.3448 -17.4310 14.8617 -15.7855 -16.1623 -11.9888 0.9943 0.9842 0.9581 -0.0118 0.0112 0.0168
 + - param set #11 has cost=0.561498
 + -- Parameters = -34.8392 -8.7876 1.0079 -23.6706 2.4734 -8.5644 0.9763 0.9910 0.9814 -0.0098 0.0180 0.0039
 + - param set #12 has cost=0.563362
 + -- Parameters = -27.2616 -13.2622 12.9427 -19.9155 -11.1642 -16.8164 0.9914 0.9732 0.9654 0.0152 0.0115 0.0013
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.289 
 + --- dist(#3,#1) = 0.0856 
 + --- dist(#4,#1) = 0.0461 
 + --- dist(#5,#1) = 0.0673 
 + --- dist(#6,#1) = 0.108 
 + --- dist(#7,#1) = 0.198 
 + --- dist(#8,#1) = 0.137 
 + --- dist(#9,#1) = 0.145 
 + --- dist(#10,#1) = 0.235 
 + --- dist(#11,#1) = 0.236 
 + --- dist(#12,#1) = 0.188 
 + - Total coarse refinement net CPU time = 0.0 s; 3308 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=24.1503 usiz=521.312
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 285.247 .. 1081.1; base clip 217.013 .. 894.531
 +  - versus source range 0 .. 942.381; base range 0 .. 1003.68
 + 42474 total points stored in 437 'RHDD(12.0364)' bloks
 + - cost(#1)=0.406721 *
 + -- Parameters = -15.9194 1.3695 -1.0454 -2.9598 -0.7957 -0.4237 1.0046 1.0169 0.9723 -0.0052 -0.0004 -0.0134
 + - cost(#2)=0.406549 *
 + -- Parameters = -18.4093 -1.0250 0.0250 -4.2545 -3.1674 1.4572 1.0254 0.9962 0.9831 -0.0472 -0.0645 -0.0470
 + - cost(#3)=0.410036  
 + -- Parameters = -16.5175 0.3886 0.8942 -3.1381 -1.7801 0.3372 0.9877 1.0100 1.0037 -0.0113 -0.0109 -0.0124
 + - cost(#4)=0.409821  
 + -- Parameters = -15.8916 1.7474 -0.3803 -2.8580 -0.3964 -0.3172 0.9916 1.0150 0.9892 0.0027 -0.0017 -0.0062
 + - cost(#5)=0.410991  
 + -- Parameters = -16.2745 0.9115 0.5360 -3.1829 -1.0173 -0.2197 0.9936 1.0083 0.9970 -0.0092 -0.0044 -0.0038
 + - cost(#6)=0.411798  
 + -- Parameters = -15.8260 1.3732 -1.5107 -3.2220 -0.4209 -1.1201 1.0020 1.0118 0.9624 -0.0133 0.0237 -0.0127
 + - cost(#7)=0.442071  
 + -- Parameters = -14.9198 1.9683 -2.6066 -2.4239 3.4794 -1.3022 1.0096 0.9862 0.9680 0.0253 0.0209 0.0307
 + - cost(#8)=0.452442  
 + -- Parameters = -15.8423 3.6133 -4.5436 -1.7375 4.5846 2.6079 0.9912 1.0021 0.9732 0.0252 -0.0174 0.0064
 + - cost(#9)=0.522695  
 + -- Parameters = -27.5261 -9.6490 2.5613 -10.1968 -7.4317 5.4413 1.0120 0.9895 0.9672 0.0024 -0.0213 0.0003
 + - cost(#10)=0.558991  
 + -- Parameters = -23.3448 -17.4310 14.8617 -15.7855 -16.1623 -11.9888 0.9943 0.9842 0.9581 -0.0118 0.0112 0.0168
 + - cost(#11)=0.563473  
 + -- Parameters = -34.8392 -8.7876 1.0079 -23.6706 2.4734 -8.5644 0.9763 0.9910 0.9814 -0.0098 0.0180 0.0039
 + - cost(#12)=0.565382  
 + -- Parameters = -27.2616 -13.2622 12.9427 -19.9155 -11.1642 -16.8164 0.9914 0.9732 0.9654 0.0152 0.0115 0.0013
 + - cost(#13)=0.547062  
 + -- Parameters = -16.2174 3.5790 -3.9071 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.404586 *
 + -- Parameters = -15.9093 1.3239 -1.1471 -3.0655 -0.7895 -0.6651 1.0077 1.0154 0.9739 -0.0067 -0.0008 -0.0189
 + - cost(#2)=0.399990 *
 + -- Parameters = -18.0256 -0.7503 -0.3604 -3.8110 -2.8821 1.4953 1.0158 0.9975 0.9852 -0.0473 -0.0643 -0.0478
 + - cost(#3)=0.409384  
 + -- Parameters = -16.5271 0.3347 0.9001 -3.1592 -1.7606 0.2982 0.9878 1.0100 1.0026 -0.0148 -0.0108 -0.0128
 + - cost(#4)=0.408759  
 + -- Parameters = -15.8191 1.7447 -0.4060 -2.8071 -0.4146 -0.2851 0.9918 1.0151 0.9890 -0.0013 -0.0019 -0.0064
 + - cost(#5)=0.408989  
 + -- Parameters = -16.0535 0.9753 0.3263 -3.1420 -0.9628 -0.2454 0.9939 1.0102 0.9961 -0.0106 -0.0105 -0.0044
 + - cost(#6)=0.407114  
 + -- Parameters = -15.5355 1.6080 -1.5298 -3.0183 -0.5710 -0.9816 1.0108 1.0161 0.9667 -0.0146 0.0188 -0.0159
 + - cost(#7)=0.418492  
 + -- Parameters = -14.5744 2.8740 -1.0189 -2.3310 1.0265 -1.6014 1.0108 1.0266 0.9611 0.0034 0.0047 0.0202
 + - cost(#8)=0.429250  
 + -- Parameters = -16.5186 2.4611 -1.9376 -2.6899 1.9903 0.4066 0.9988 1.0007 0.9755 0.0243 -0.0185 0.0096
 + - cost(#9)=0.496940  
 + -- Parameters = -23.6551 -8.3719 3.7989 -5.2576 -7.4812 4.9815 1.0133 0.9965 0.9617 -0.0005 -0.0220 -0.0004
 + - cost(#10)=0.556709  
 + -- Parameters = -23.1220 -16.8938 14.6370 -15.7505 -16.1323 -11.4782 0.9938 0.9786 0.9583 -0.0121 0.0107 0.0161
 + - cost(#11)=0.563153  
 + -- Parameters = -34.7303 -8.7687 1.0189 -23.6595 2.4313 -8.5421 0.9766 0.9908 0.9810 -0.0098 0.0143 0.0038
 + - cost(#12)=0.563851  
 + -- Parameters = -27.4875 -13.7353 12.4860 -20.3436 -11.1411 -16.3408 0.9930 0.9635 0.9635 0.0165 0.0106 0.0016
 + - cost(#13)=0.411141  
 + -- Parameters = -15.2415 0.8161 0.1069 -2.8006 -1.0073 -1.0915 1.0012 1.0039 0.9915 0.0006 -0.0019 -0.0070
 + - case #2 is now the best
 + - Initial  cost = 0.399990
 + - Initial fine Parameters = -18.0256 -0.7503 -0.3604 -3.8110 -2.8821 1.4953 1.0158 0.9975 0.9852 -0.0473 -0.0643 -0.0478
 + - Finalish cost = 0.397936 ; 156 funcs
 + - ini Finalish Parameters = -17.9357 -0.6763 -0.4689 -3.8064 -2.8240 1.4229 1.0086 0.9982 0.9838 -0.0472 -0.0640 -0.0491
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 285.247 .. 1081.61; base clip 217.013 .. 894.531
 +  - versus source range 0 .. 942.381; base range 0 .. 1003.68
*[#15042=-0.185269] *[#15053=-0.185353] *[#15064=-0.185562] *[#15092=-0.185601] *[#15093=-0.185692] *[#15095=-0.185713] *[#15099=-0.185767] *[#15106=-0.185901] *[#15108=-0.185982] *[#15111=-0.186164] *[#15112=-0.186231] *[#15115=-0.186243] *[#15116=-0.186302] *[#15118=-0.186325] *[#15122=-0.186434] *[#15127=-0.186438] *[#15139=-0.186448] *[#15145=-0.186481] *[#15146=-0.186537] *[#15155=-0.186583] *[#15157=-0.186774] *[#15160=-0.186849] *[#15162=-0.186883] *[#15163=-0.187085] *[#15164=-0.18714] *[#15165=-0.18718] *[#15166=-0.187282] *[#15167=-0.187327] *[#15168=-0.187452] *[#15169=-0.18757] *[#15178=-0.187595] *[#15180=-0.187687] *[#15189=-0.187713] *[#15194=-0.187744] *[#15196=-0.187746] *[#15198=-0.187809] *[#15214=-0.187829] *[#15215=-0.187849] *[#15220=-0.187855] *[#15221=-0.187859] *[#15223=-0.187861] *[#15224=-0.187872] *[#15225=-0.187883] *[#15228=-0.187886] *[#15230=-0.187894] *[#15231=-0.187898] *[#15232=-0.187902] *[#15233=-0.187908] *[#15234=-0.187916] *[#15236=-0.187928] *[#15239=-0.187934] *[#15240=-0.187938] *[#15243=-0.187947] *[#15248=-0.18795] *[#15249=-0.187954] *[#15250=-0.187957] *[#15251=-0.187966] *[#15252=-0.187977] *[#15253=-0.187992] *[#15258=-0.188003] *[#15259=-0.18801] *[#15260=-0.188023] *[#15261=-0.188041] *[#15262=-0.188061] *[#15265=-0.188062] *[#15269=-0.188064] *[#15270=-0.188068] *[#15273=-0.188076] *[#15276=-0.188077] *[#15277=-0.188079] *[#15278=-0.188082] *[#15281=-0.188084] *[#15282=-0.188084] *[#15284=-0.188086] *[#15285=-0.18809] *[#15286=-0.188097] *[#15287=-0.188097] *[#15288=-0.188098] *[#15289=-0.188111] *[#15290=-0.188119] *[#15291=-0.188127] *[#15293=-0.188133] *[#15294=-0.188135] *[#15298=-0.188141] *[#15299=-0.188144] *[#15300=-0.188145] *[#15301=-0.188146] *[#15304=-0.188147] *[#15305=-0.188148] *[#15306=-0.188149] *[#15307=-0.188151] *[#15308=-0.188152] *[#15309=-0.188156] *[#15312=-0.188158] *[#15313=-0.188161] *[#15314=-0.188164] *[#15315=-0.188167] *[#15316=-0.18817] *[#15318=-0.188179] *[#15319=-0.188185] *[#15322=-0.188186] *[#15324=-0.188189] *[#15326=-0.188193] *[#15327=-0.188194] *[#15329=-0.188197] *[#15332=-0.188206] *[#15335=-0.188209] *[#15336=-0.188211] *[#15337=-0.188212] *[#15338=-0.188214] *[#15345=-0.188217] *[#15348=-0.188221] *[#15349=-0.188225] *[#15354=-0.188227] *[#15355=-0.188228] *[#15356=-0.18823] *[#15357=-0.188233] *[#15360=-0.188235] *[#15361=-0.188236] *[#15364=-0.188238] *[#15365=-0.188239] *[#15370=-0.188246] *[#15371=-0.188249] *[#15372=-0.188253] *[#15373=-0.188263] *[#15374=-0.188283] *[#15375=-0.188302] *[#15380=-0.188313] *[#15382=-0.188313] *[#15385=-0.188315] *[#15387=-0.188318] *[#15388=-0.188324] *[#15393=-0.188327] *[#15394=-0.18833] *[#15395=-0.188333] *[#15396=-0.188337] *[#15411=-0.188338] *[#15413=-0.188339] *[#15418=-0.188344] *[#15421=-0.188345] *[#15424=-0.188346] *[#15429=-0.188348] *[#15430=-0.18835] *[#15433=-0.18835] *[#15434=-0.18835] *[#15435=-0.18835] *[#15437=-0.188353] *[#15438=-0.188353] *[#15439=-0.188355] *[#15444=-0.188356] *[#15445=-0.188359] *[#15448=-0.188361] *[#15449=-0.188361] *[#15451=-0.188363] *[#15452=-0.188365] *[#15453=-0.188368] *[#15454=-0.18837] *[#15455=-0.188371] *[#15460=-0.188373] *[#15461=-0.188375] *[#15464=-0.188376] *[#15466=-0.188376] *[#15473=-0.188377] *[#15474=-0.188378] *[#15475=-0.188379] *[#15478=-0.188379] *[#15483=-0.188379] *[#15488=-0.188381] *[#15491=-0.188382] *[#15498=-0.188383] *[#15501=-0.188384] *[#15502=-0.188384] *[#15519=-0.188384] *[#15524=-0.188384] *[#15530=-0.188384] *[#15536=-0.188385] *[#15537=-0.188385] *[#15552=-0.188385] *[#15553=-0.188385] *[#15554=-0.188385] *[#15569=-0.188385] *[#15591=-0.188385] *[#15594=-0.188385] 
 + - Final    cost = -0.188385 ; 603 funcs
 + Final fine fit Parameters:
       x-shift=-17.4836   y-shift= -1.3814   z-shift= -0.3167  ...  enorm= 17.5409 mm
       z-angle= -3.6811   x-angle= -3.7848   y-angle=  0.9842  ...  total=  5.3924 deg
       x-scale=  1.0047   y-scale=  0.9992   z-scale=  0.9870  ...  vol3D=  0.9908 = base bigger than source
     y/x-shear= -0.0516 z/x-shear= -0.0558 z/y-shear= -0.0634
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -17.4836 -1.3814 -0.3167 -3.6811 -3.7848 0.9842 1.0047 0.9992 0.9870 -0.0516 -0.0558 -0.0634
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S13_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S13_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S13_unflipped_ob_temp_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 20.756298 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 20.756298 degrees from plumb.
++ Source dataset: ./anatSS.sub-S13_unflipped_ob_temp_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1643743 voxels in -source_automask+2
++ Zero-pad: ybot=4 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 46480 voxels [21.0%] in weight mask
++ Number of points for matching = 46480
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 32.016 34.507 23.270 (index)
 + source center of mass = 96.045 89.398 55.027 (index)
 + source-target CM = -1.005 3.123 -3.611 (xyz)
 + estimated center of mass shifts = -1.005 3.123 -3.611
++ shift param auto-range: -61.7..59.7 -65.3..71.5 -60.2..53.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.004623 .. 8.995377  center = -1.004623
 + Range param#2 [y-shift] = -6.877411 .. 13.122589  center = 3.122589
 + Range param#3 [z-shift] = -13.611294 .. 6.388706  center = -3.611294
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.004623 .. 38.995377  center = -1.004623
 + Range param#2 [y-shift] = -36.877411 .. 43.122589  center = 3.122589
 + Range param#3 [z-shift] = -43.611294 .. 36.388706  center = -3.611294
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -41.005 ..   38.995
 +       y-shift =  -36.877 ..   43.123
 +       z-shift =  -43.611 ..   36.389
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1643743 [out of 4423680] voxels
 + base mask has 61242 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=73.8893 usiz=495.827
 + - copying weight image
 + - using 46480 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 285.13 .. 1085.32; base clip 217.382 .. 907.238
 +  - versus source range 5.05526e-05 .. 1071.69; base range 0 .. 1003.68
 + 42474 total points stored in 437 'RHDD(12.0364)' bloks
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S13_flip_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 20.756298 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 20.756298 degrees from plumb.
++ Source dataset: ./anatSS.sub-S13_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1682248 voxels in -source_automask+2
++ Zero-pad: ybot=4 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 46480 voxels [21.0%] in weight mask
++ Number of points for matching = 46480
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 32.016 34.507 23.270 (index)
 + source center of mass = 94.317 89.494 55.335 (index)
 + source-target CM = -2.733 3.026 -3.303 (xyz)
 + estimated center of mass shifts = -2.733 3.026 -3.303
++ shift param auto-range: -63.4..57.9 -65.3..71.4 -59.9..53.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -12.732597 .. 7.267403  center = -2.732597
 + Range param#2 [y-shift] = -6.973625 .. 13.026375  center = 3.026375
 + Range param#3 [z-shift] = -13.303143 .. 6.696857  center = -3.303143
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -42.732597 .. 37.267403  center = -2.732597
 + Range param#2 [y-shift] = -36.973625 .. 43.026375  center = 3.026375
 + Range param#3 [z-shift] = -43.303143 .. 36.696857  center = -3.303143
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -42.733 ..   37.267
 +       y-shift =  -36.974 ..   43.026
 +       z-shift =  -43.303 ..   36.697
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1682248 [out of 4423680] voxels
 + base mask has 61242 [out of 221184] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=75.071 usiz=495.407
 + - copying weight image
 + - using 46480 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 285.943 .. 1085.99; base clip 217.382 .. 907.238
 +  - versus source range 6.95424e-05 .. 1076.03; base range 0 .. 1003.68
 + 42474 total points stored in 437 'RHDD(12.0364)' bloks
++ -allcostX1D finished
No flip cost is -0.817185 for lpc+ZZ cost function
Flip cost is -0.177820 for lpc+ZZ cost function
Data does not need flipping
#Script is running (command trimmed):
  cat_matvec -ONELINE ./anatSS.sub-S13_al_junk_e2a_only_mat.aff12.1D ./anatSS.sub-S13_unflipped_obla2e_mat.1D -I > ./anatSS.sub-S13_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./vr_base_ts_ns+orig -1Dmatrix_apply ./anatSS.sub-S13_al_junk_mat.aff12.1D -prefix ./anatSS.sub-S13_al_junk -input ./anatSS.sub-S13_unflipped+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 20.756298 degrees from plumb.
++ Source dataset: ./anatSS.sub-S13_unflipped+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 32.016 30.507 15.270 (index)
 + source center of mass = 136.268 103.838 119.634 (index)
 + source-target CM = -0.569 24.175 19.519 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =   -0.569   24.175   19.519
 +  shift search range is +/- =   60.669   60.669   37.316
 +                                  0.9%    39.8%    52.3%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0041 -0.0191 0.0512 38.7792 0.0389 -0.3515 -0.9431 183.2109 0.0421 0.9473 -0.3273 48.8942
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S13_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat anatSS.sub-S13+orig -suffix \
 _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask \
 -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./anatSS.sub-S13_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S13*

# Finished alignment successfully

if ( ! -f anatQQ.sub-S13+tlrc.HEAD ) then
foreach run ( 01 02 03 04 05 06 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.sub-S13.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 20.756298 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S13.r01.tshift+orig.BRIK is 20.756298 degrees from plumb.
++ Reading input dataset ./pb02.sub-S13.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 48736 voxels
 + 6598 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.684  pitch=-0.760  yaw=-2.380  dS=-1.030  dL=-1.500  dP=-0.077
++ Mean: roll=-0.625  pitch=-0.357  yaw=-0.435  dS=-0.285  dL=-0.257  dP=+0.095
++ Max : roll=+0.000  pitch=+0.147  yaw=-0.000  dS=+0.039  dL=+0.047  dP=+0.308
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.48(0.48) 0.41(0.08) 0.45(0.08) 0.39(0.07) 0.39(0.04) 0.41(0.05) 0.38(0.08) 0.40(0.10) 0.45(0.12) 0.46(0.05) 0.44(0.03) 0.50(0.10) 0.44(0.09) 0.46(0.03) 0.46(0.05) 0.47(0.03) 0.45(0.08) 0.46(0.03) 0.48(0.06) 0.44(0.05) 0.43(0.04) 0.44(0.03) 0.45(0.08) 0.41(0.10) 0.44(0.05) 0.46(0.05) 0.42(0.09) 0.45(0.04) 0.45(0.06) 0.43(0.06) 0.44(0.04) 0.43(0.05) 0.37(0.10) 0.40(0.09) 0.43(0.11) 0.41(0.05) 0.39(0.07) 0.38(0.02) 0.37(0.07) 0.35(0.05) 0.35(0.04) 0.34(0.04) 0.33(0.06) 0.33(0.02) 0.38(0.08) 0.40(0.06) 0.38(0.10) 0.38(0.07) 0.37(0.04) 0.35(0.06) 0.34(0.05) 0.35(0.02) 0.33(0.05) 0.32(0.05) 0.33(0.05) 0.32(0.05) 0.31(0.07) 0.33(0.05) 0.28(0.09) 0.32(0.09) 0.32(0.06) 0.32(0.09) 0.39(0.19) 0.52(0.18) 0.52(0.09) 0.41(0.16) 0.42(0.03) 0.41(0.04) 0.38(0.05) 0.35(0.07) 0.34(0.04) 0.34(0.03) 0.33(0.05) 0.35(0.04) 0.29(0.08) 0.29(0.06) 0.34(0.08) 0.33(0.07) 0.31(0.08) 0.29(0.06) 0.30(0.09) 0.32(0.04) 0.28(0.05) 0.31(0.07) 0.39(0.15) 0.34(0.11) 0.31(0.27) 0.33(0.16) 0.40(0.07) 0.32(0.12) 0.25(0.13) 0.27(0.07) 0.25(0.05) 0.27(0.06) 0.26(0.06) 0.26(0.04) 0.28(0.09) 0.29(0.05) 0.30(0.05) 0.32(0.06) 0.28(0.08) 0.32(0.10) 0.35(0.08) 0.44(0.14) 0.51(0.12) 0.44(0.11) 0.46(0.03) 0.50(0.21) 0.50(0.10) 0.65(0.28) 0.66(0.11) 0.57(0.12) 0.65(0.09) 0.60(0.13) 0.70(0.19) 0.68(0.08) 0.71(0.09) 0.79(0.18) 0.77(0.09) 0.84(0.08) 0.74(0.13) 0.74(0.16) 0.77(0.07) 0.83(0.18) 0.83(0.13) 0.76(0.12) 0.88(0.18) 0.90(0.12) 0.88(0.07) 0.86(0.14) 0.82(0.07) 0.87(0.11) 0.91(0.07) 0.99(0.10) 0.93(0.11) 0.84(0.11) 0.93(0.14) 0.92(0.04) 0.86(0.07) 0.92(0.11) 0.98(0.09) 1.00(0.08) 1.00(0.06) 0.96(0.04) 0.99(0.07) 1.02(0.04) 0.91(0.20) 1.07(0.19) 1.19(0.12) 1.08(0.13) 0.88(0.26) 0.86(0.12) 0.88(0.14) 1.00(0.18) 0.99(0.06) 0.97(0.09) 0.97(0.10) 0.94(0.05) 0.98(0.08) 1.00(0.15) 1.01(0.07) 1.03(0.15) 1.01(0.08) 0.86(0.18) 0.99(0.20) 1.01(0.14) 1.03(0.22) 1.00(0.08) 0.98(0.13) 1.01(0.18) 1.02(0.07) 1.00(0.06) 1.03(0.04) 1.15(0.20) 1.26(0.13) 1.19(0.15) 1.15(0.08) 1.10(0.06) 1.15(0.07) 1.14(0.10) 1.08(0.09) 1.14(0.10) 1.12(0.07) 1.16(0.13) 1.18(0.17) 1.19(0.15) 1.27(0.11) 1.21(0.17) 1.24(0.07) 1.20(0.09) 1.17(0.06) 1.15(0.06) 1.18(0.04) 1.17(0.06) 1.12(0.06) 1.10(0.05) 1.19(0.11) 1.20(0.05) 1.16(0.05) 1.14(0.10) 1.17(0.17) 1.17(0.14) 1.15(0.16) 1.13(0.08) 1.15(0.11) 1.18(0.04) 1.16(0.06) 1.14(0.08) 1.15(0.09) 1.34(0.26) 1.37(0.12) 1.32(0.06) 1.29(0.04) 1.50(0.25) 1.40(0.16) 1.30(0.18) 1.35(0.21) 1.55(0.23) 1.40(0.20) 1.38(0.06) 1.46(0.15) 1.40(0.10) 1.36(0.18) 1.36(0.11) 1.46(0.11) 1.50(0.06) 1.64(0.20) 1.55(0.21) 1.47(0.12) 1.39(0.11) 1.41(0.03) 1.45(0.10) 1.38(0.11) 1.44(0.08) 1.41(0.05) 1.41(0.02) 1.44(0.10) 1.41(0.10) 1.46(0.12) 1.46(0.05) 1.47(0.09) 1.46(0.09) 1.39(0.16) 1.41(0.09) 1.57(0.21) 1.46(0.15) 1.49(0.13) 1.50(0.16) 1.58(0.10) 1.51(0.11) 1.55(0.10) 1.59(0.08) 1.49(0.11) 1.50(0.15) 1.56(0.13) 1.55(0.04) 1.58(0.06) 1.54(0.07) 1.54(0.04) 1.57(0.11) 1.61(0.17) 1.61(0.09) 1.56(0.10) 1.77(0.24) 1.90(0.19) 2.07(0.21) 2.08(0.15) 2.01(0.13) 1.99(0.06) 2.04(0.11) 2.03(0.03) 2.00(0.07) 2.06(0.10) 2.00(0.10) 2.03(0.04) 2.07(0.05) 2.03(0.08) 2.07(0.08) 2.01(0.09) 2.08(0.09) 2.07(0.07) 2.04(0.06) 2.08(0.05) 2.00(0.13) 2.02(0.11) 1.97(0.06) 1.99(0.08) 2.00(0.06) 1.99(0.03) 2.06(0.09) 2.07(0.18) 2.14(0.11) 2.07(0.17) 2.04(0.04) 2.04(0.02) 2.02(0.05) 2.09(0.09) 2.06(0.06) 2.00(0.08) 2.01(0.15) 2.00(0.05) 2.07(0.10) 2.07(0.06) 2.04(0.05) 2.08(0.05) 2.06(0.09) 2.06(0.05) 2.12(0.09) 2.09(0.06) 2.10(0.08) 2.12(0.05) 2.07(0.08) 2.13(0.08) 2.16(0.07) 2.11(0.09) 2.12(0.09) 2.18(0.09) 2.12(0.09) 2.12(0.13) 2.17(0.08) 2.12(0.06) 2.15(0.10) 2.20(0.07) 2.13(0.10) 2.20(0.08) 2.15(0.06) 2.18(0.08) 2.20(0.03) 2.20(0.05) 2.19(0.15) 2.15(0.10) 2.13(0.17) 2.20(0.16) 2.17(0.07) 2.22(0.08) 2.20(0.06) 2.12(0.10) 2.16(0.14) 2.13(0.05) 2.13(0.05) 2.16(0.16) 2.16(0.07) 2.22(0.08) 2.18(0.06) 2.22(0.08) 2.17(0.06) 2.20(0.10) 2.28(0.12) 2.24(0.12) 2.24(0.10) 2.26(0.12) 2.26(0.19) 2.30(0.13) 2.51(0.56) 4.36(2.22) 4.84(0.54) 5.01(0.22) 5.16(0.17) 5.29(0.15) 5.35(0.06) 5.36(0.06) 5.36(0.05) 5.40(0.08) 5.36(0.09) 5.38(0.11) 5.42(0.08) 5.40(0.08) 5.39(0.06) 5.40(0.02) 5.42(0.04) 5.40(0.04) 5.41(0.06) 5.42(0.05) 5.41(0.06) 5.40(0.10) 5.41(0.03) 5.43(0.08) 5.41(0.04) 5.39(0.07) 5.40(0.04) 5.40(0.07) 5.40(0.08) 5.43(0.03) 5.43(0.05) 5.42(0.07) 5.41(0.08) 5.43(0.03) 5.45(0.03) 5.44(0.05) 5.43(0.10) 5.45(0.04) 5.47(0.06) 5.45(0.05) 5.46(0.04) 5.49(0.04) 5.52(0.06) 5.47(0.06) 5.47(0.07) 5.46(0.04) 5.44(0.03) 5.46(0.06) 5.47(0.04) 5.45(0.05) 5.46(0.05) 5.45(0.03) 5.47(0.07) 5.47(0.04) 5.46(0.07) 5.46(0.08) 5.45(0.04) 5.55(0.14)
++ Max displacement in automask = 5.55 (mm) at sub-brick 411
++ Max delta displ  in automask = 2.22 (mm) at sub-brick 355
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.sub-S13.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S13.aff12.1D anatSS.sub-S13_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source pb02.sub-S13.r01.tshift+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S13.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S13.r01.tshift+orig.BRIK is 20.756298 degrees from plumb.
++ opened source dataset 'pb02.sub-S13.r01.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1404207104
in use bytes     = 1194134736
Total (incl. mmap):
system bytes     = 1404207104
in use bytes     = 1194134736
max mmap regions =          1
max mmap bytes   =  104980480
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 1721.9 sec
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 20.756298 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1404207104
in use bytes     = 1194134896
Total (incl. mmap):
system bytes     = 1404207104
in use bytes     = 1194134896
max mmap regions =          1
max mmap bytes   =  104980480
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.sub-S13.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 20.756298 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S13.r02.tshift+orig.BRIK is 20.756298 degrees from plumb.
++ Reading input dataset ./pb02.sub-S13.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 48367 voxels
 + 6449 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.675  pitch=-0.121  yaw=-2.397  dS=-1.302  dL=-1.571  dP=+0.113
++ Mean: roll=-1.436  pitch=+0.118  yaw=-2.174  dS=-1.165  dL=-1.438  dP=+0.206
++ Max : roll=-1.210  pitch=+0.363  yaw=-1.927  dS=-1.055  dL=-1.253  dP=+0.295
++ Max displacements (mm) for each sub-brick:
 5.63(0.00) 5.56(0.19) 5.59(0.05) 5.58(0.06) 5.59(0.06) 5.55(0.12) 5.62(0.20) 5.63(0.04) 5.60(0.05) 5.59(0.07) 5.59(0.03) 5.59(0.06) 5.57(0.03) 5.59(0.07) 5.60(0.02) 5.59(0.09) 5.60(0.07) 5.62(0.02) 5.62(0.05) 5.62(0.04) 5.63(0.01) 5.64(0.05) 5.61(0.04) 5.63(0.07) 5.65(0.04) 5.64(0.07) 5.65(0.06) 5.66(0.02) 5.63(0.07) 5.64(0.06) 5.64(0.04) 5.63(0.09) 5.65(0.07) 5.65(0.02) 5.65(0.07) 5.64(0.08) 5.66(0.03) 5.65(0.09) 5.66(0.06) 5.67(0.05) 5.64(0.05) 5.65(0.06) 5.66(0.03) 5.65(0.04) 5.66(0.07) 5.69(0.06) 5.66(0.07) 5.66(0.07) 5.66(0.02) 5.64(0.05) 5.68(0.07) 5.68(0.03) 5.66(0.05) 5.65(0.01) 5.66(0.07) 5.65(0.07) 5.66(0.02) 5.64(0.07) 5.65(0.06) 5.68(0.04) 5.66(0.05) 5.66(0.08) 5.68(0.03) 5.66(0.07) 5.66(0.04) 5.67(0.04) 5.67(0.06) 5.66(0.08) 5.67(0.02) 5.67(0.05) 5.67(0.04) 5.67(0.03) 5.66(0.07) 5.66(0.06) 5.68(0.02) 5.65(0.12) 5.55(0.14) 5.57(0.12) 5.63(0.06) 5.64(0.03) 5.64(0.06) 5.64(0.05) 5.62(0.04) 5.60(0.05) 5.63(0.06) 5.64(0.05) 5.63(0.02) 5.65(0.05) 5.66(0.02) 5.66(0.06) 5.65(0.07) 5.66(0.03) 5.68(0.08) 5.67(0.05) 5.67(0.03) 5.68(0.04) 5.67(0.04) 5.68(0.04) 5.66(0.03) 5.65(0.02) 5.63(0.09) 5.62(0.07) 5.62(0.05) 5.66(0.04) 5.65(0.07) 5.57(0.10) 5.60(0.05) 5.59(0.06) 5.57(0.05) 5.58(0.04) 5.59(0.06) 5.59(0.02) 5.57(0.04) 5.55(0.04) 5.57(0.05) 5.55(0.03) 5.54(0.05) 5.54(0.03) 5.54(0.05) 5.54(0.04) 5.56(0.02) 5.56(0.06) 5.54(0.05) 5.53(0.03) 5.53(0.01) 5.51(0.04) 5.53(0.06) 5.50(0.06) 5.51(0.02) 5.50(0.03) 5.49(0.06) 5.48(0.07) 5.50(0.03) 5.49(0.02) 5.48(0.04) 5.50(0.05) 5.51(0.01) 5.50(0.05) 5.50(0.02) 5.52(0.04) 5.50(0.04) 5.51(0.05) 5.51(0.05) 5.49(0.04) 5.49(0.03) 5.49(0.02) 5.46(0.05) 5.46(0.04) 5.47(0.02) 5.46(0.03) 5.46(0.07) 5.46(0.03) 5.45(0.06) 5.45(0.06) 5.46(0.02) 5.46(0.06) 5.44(0.08) 5.45(0.04) 5.47(0.10) 5.45(0.06) 5.43(0.04) 5.43(0.04) 5.42(0.04) 5.43(0.05) 5.43(0.03) 5.41(0.04) 5.42(0.04) 5.43(0.02) 5.42(0.04) 5.42(0.02) 5.43(0.04) 5.43(0.01) 5.41(0.06) 5.42(0.07) 5.43(0.03) 5.41(0.03) 5.41(0.04) 5.40(0.03) 5.40(0.05) 5.40(0.06) 5.41(0.05) 5.40(0.03) 5.40(0.04) 5.39(0.03) 5.36(0.05) 5.38(0.06) 5.40(0.06) 5.38(0.06) 5.40(0.06) 5.40(0.06) 5.36(0.07) 5.36(0.03) 5.35(0.06) 5.33(0.03) 5.32(0.06) 5.25(0.18) 5.23(0.16) 5.32(0.13) 5.30(0.06) 5.25(0.07) 5.27(0.04) 5.27(0.04) 5.26(0.06) 5.28(0.04) 5.28(0.08) 5.25(0.08) 5.26(0.03) 5.27(0.04) 5.23(0.05) 5.26(0.06) 5.25(0.04) 5.26(0.06) 5.23(0.04) 5.19(0.15) 5.23(0.10) 5.22(0.03) 5.19(0.09) 5.19(0.03) 5.19(0.08) 5.19(0.08) 5.21(0.02) 5.22(0.07) 5.21(0.05) 5.21(0.03) 5.19(0.07) 5.18(0.06) 5.17(0.04) 5.12(0.07) 5.12(0.06) 5.10(0.03) 5.09(0.04) 5.11(0.07) 5.04(0.10) 4.91(0.22) 4.86(0.17) 4.72(0.20) 4.66(0.15) 4.66(0.07) 4.72(0.10) 4.76(0.17) 4.73(0.10) 4.73(0.04) 4.72(0.07) 4.70(0.08) 4.70(0.02) 4.70(0.05) 4.70(0.08) 4.70(0.03) 4.68(0.08) 4.65(0.09) 4.67(0.04) 4.65(0.04) 4.69(0.06) 4.68(0.04) 4.69(0.06) 4.71(0.05) 4.72(0.07) 4.71(0.05) 4.69(0.03) 4.67(0.05) 4.69(0.06) 4.73(0.05) 4.77(0.08) 4.81(0.06) 4.84(0.04) 4.80(0.06) 4.82(0.06) 4.82(0.02) 4.80(0.06) 4.77(0.06) 4.79(0.04) 4.79(0.03) 4.79(0.03) 4.78(0.07) 4.77(0.05) 4.79(0.02) 4.80(0.09) 4.79(0.07) 4.79(0.02) 4.82(0.04) 4.80(0.04) 4.81(0.06) 4.84(0.04) 4.84(0.07) 4.82(0.08) 4.83(0.05) 4.85(0.02) 4.85(0.07) 4.84(0.07) 4.84(0.04) 4.88(0.05) 4.87(0.05) 4.89(0.05) 4.90(0.02) 4.89(0.07) 4.88(0.06) 4.87(0.03) 4.89(0.09) 4.89(0.06) 4.88(0.02) 4.90(0.05) 4.90(0.04) 4.89(0.06) 4.91(0.02) 4.94(0.08) 4.96(0.07) 4.95(0.03) 4.92(0.08) 4.93(0.06) 4.92(0.03) 4.93(0.05) 4.96(0.07) 4.96(0.02) 4.91(0.08) 4.91(0.06) 4.92(0.02) 4.92(0.06) 4.93(0.06) 4.93(0.02) 4.94(0.07) 4.93(0.04) 4.96(0.06) 4.95(0.01) 4.93(0.05) 4.97(0.07) 4.97(0.03) 4.95(0.06) 4.93(0.04) 4.93(0.02) 4.92(0.05) 4.93(0.06) 4.93(0.03) 4.90(0.06) 4.89(0.02) 4.92(0.06) 4.90(0.03) 4.87(0.06) 4.90(0.05) 4.93(0.09) 4.92(0.06) 4.93(0.03) 4.95(0.07) 4.91(0.04) 4.91(0.04) 4.93(0.03) 4.92(0.04) 4.94(0.04) 4.94(0.04) 4.90(0.06) 4.91(0.06) 4.94(0.04) 4.95(0.07) 4.94(0.07) 4.94(0.02) 4.95(0.07) 4.93(0.05) 4.97(0.05) 4.98(0.05) 4.98(0.05) 4.98(0.04) 4.97(0.08) 4.97(0.08) 4.99(0.04) 4.96(0.07) 4.97(0.06) 4.98(0.03) 4.96(0.04) 4.98(0.06) 4.98(0.03) 4.97(0.03) 5.00(0.05) 5.00(0.05) 4.97(0.03) 5.00(0.06) 5.01(0.07) 4.98(0.10) 4.98(0.09) 5.04(0.22) 5.04(0.09) 5.02(0.06) 5.00(0.05) 4.98(0.09) 4.96(0.10) 4.97(0.02) 4.97(0.02) 4.95(0.02) 4.96(0.05) 4.98(0.05) 4.97(0.06) 4.97(0.07) 4.97(0.02) 4.94(0.08) 4.92(0.08) 4.90(0.04) 4.91(0.06) 4.88(0.05) 4.87(0.05) 4.87(0.02) 4.86(0.03) 4.85(0.09) 4.85(0.18) 4.84(0.10) 4.86(0.05) 4.85(0.03) 4.83(0.06) 4.83(0.03) 4.83(0.05) 4.84(0.06) 4.84(0.03) 4.82(0.07) 4.82(0.08) 4.82(0.05)
++ Max displacement in automask = 5.69 (mm) at sub-brick 45
++ Max delta displ  in automask = 0.22 (mm) at sub-brick 233
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.sub-S13.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S13.aff12.1D anatSS.sub-S13_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source pb02.sub-S13.r02.tshift+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S13.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S13.r02.tshift+orig.BRIK is 20.756298 degrees from plumb.
++ opened source dataset 'pb02.sub-S13.r02.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1419743232
in use bytes     = 1209669840
Total (incl. mmap):
system bytes     = 1419743232
in use bytes     = 1209669840
max mmap regions =          1
max mmap bytes   =  104980480
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 1782.7 sec
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 20.756298 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1419743232
in use bytes     = 1209670000
Total (incl. mmap):
system bytes     = 1419743232
in use bytes     = 1209670000
max mmap regions =          1
max mmap bytes   =  104980480
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.sub-S13.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 20.756298 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S13.r03.tshift+orig.BRIK is 20.756298 degrees from plumb.
++ Reading input dataset ./pb02.sub-S13.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 48613 voxels
 + 6605 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.265  pitch=-0.182  yaw=-0.318  dS=-0.016  dL=-0.216  dP=+0.066
++ Mean: roll=-0.083  pitch=+0.148  yaw=-0.204  dS=+0.044  dL=+0.067  dP=+0.168
++ Max : roll=+0.032  pitch=+0.349  yaw=+0.043  dS=+0.113  dL=+0.328  dP=+0.342
++ Max displacements (mm) for each sub-brick:
 0.67(0.00) 0.80(0.33) 0.79(0.04) 0.78(0.08) 0.77(0.06) 0.78(0.02) 0.78(0.07) 0.78(0.06) 0.78(0.02) 0.75(0.09) 0.75(0.03) 0.78(0.05) 0.76(0.11) 0.74(0.03) 0.73(0.06) 0.74(0.03) 0.74(0.07) 0.73(0.08) 0.72(0.03) 0.70(0.04) 0.67(0.05) 0.65(0.06) 0.65(0.03) 0.64(0.09) 0.61(0.07) 0.59(0.02) 0.58(0.04) 0.57(0.04) 0.57(0.06) 0.56(0.06) 0.54(0.07) 0.52(0.09) 0.52(0.04) 0.52(0.09) 0.51(0.06) 0.52(0.06) 0.50(0.07) 0.50(0.04) 0.51(0.03) 0.50(0.08) 0.49(0.06) 0.50(0.03) 0.50(0.07) 0.52(0.07) 0.54(0.08) 0.54(0.07) 0.54(0.02) 0.54(0.03) 0.55(0.08) 0.53(0.07) 0.55(0.04) 0.55(0.06) 0.55(0.07) 0.55(0.05) 0.53(0.05) 0.55(0.04) 0.55(0.04) 0.56(0.05) 0.55(0.03) 0.54(0.08) 0.54(0.09) 0.56(0.04) 0.55(0.07) 0.54(0.06) 0.57(0.09) 0.56(0.07) 0.55(0.07) 0.56(0.04) 0.59(0.07) 0.59(0.05) 0.59(0.04) 0.60(0.10) 0.58(0.09) 0.59(0.04) 0.59(0.07) 0.60(0.09) 0.64(0.07) 0.62(0.08) 0.60(0.06) 0.63(0.04) 0.64(0.08) 0.61(0.07) 0.62(0.01) 0.63(0.09) 0.61(0.06) 0.60(0.05) 0.63(0.05) 0.66(0.06) 0.61(0.08) 0.61(0.03) 0.63(0.10) 0.60(0.07) 0.61(0.04) 0.64(0.07) 0.68(0.09) 0.63(0.09) 0.65(0.03) 0.69(0.08) 0.68(0.07) 0.64(0.08) 0.67(0.05) 0.67(0.03) 0.66(0.06) 0.67(0.03) 0.68(0.04) 0.65(0.06) 0.67(0.03) 0.69(0.06) 0.64(0.11) 0.64(0.05) 0.67(0.07) 0.66(0.04) 0.67(0.05) 0.70(0.06) 0.70(0.08) 0.68(0.06) 0.71(0.04) 0.69(0.04) 0.69(0.08) 0.78(0.18) 0.72(0.11) 0.74(0.11) 0.79(0.12) 0.78(0.10) 0.76(0.10) 0.76(0.04) 0.71(0.07) 0.68(0.08) 0.74(0.09) 0.69(0.10) 0.73(0.05) 0.75(0.07) 0.72(0.09) 0.72(0.03) 0.74(0.07) 0.72(0.07) 0.72(0.04) 0.73(0.05) 0.71(0.07) 0.69(0.05) 0.71(0.09) 0.68(0.05) 0.73(0.07) 0.67(0.12) 0.72(0.09) 0.70(0.07) 0.75(0.13) 0.67(0.11) 0.68(0.04) 0.71(0.06) 0.67(0.08) 0.70(0.05) 0.70(0.03) 0.69(0.03) 0.73(0.09) 0.72(0.05) 0.71(0.05) 0.72(0.02) 0.70(0.08) 0.68(0.03) 0.70(0.06) 0.68(0.06) 0.69(0.03) 0.71(0.05) 0.68(0.05) 0.72(0.07) 0.68(0.07) 0.72(0.07) 0.69(0.07) 0.67(0.05) 0.65(0.06) 0.62(0.11) 0.66(0.10) 0.60(0.10) 0.63(0.04) 0.64(0.04) 0.63(0.06) 0.65(0.08) 0.60(0.10) 0.64(0.05) 0.61(0.05) 0.62(0.03) 0.60(0.03) 0.58(0.05) 0.61(0.06) 0.58(0.09) 0.62(0.06) 0.62(0.05) 0.60(0.05) 0.60(0.02) 0.63(0.08) 0.60(0.08) 0.62(0.02) 0.62(0.06) 0.58(0.08) 0.62(0.07) 0.62(0.06) 0.59(0.09) 0.61(0.05) 0.60(0.07) 0.60(0.06) 0.61(0.02) 0.59(0.06) 0.63(0.08) 0.59(0.08) 0.60(0.06) 0.61(0.04) 0.60(0.04) 0.63(0.07) 0.59(0.07) 0.62(0.05) 0.60(0.05) 0.58(0.04) 0.60(0.05) 0.59(0.03) 0.58(0.06) 0.60(0.06) 0.59(0.04) 0.63(0.09) 0.58(0.07) 0.61(0.03) 0.62(0.04) 0.61(0.07) 0.69(0.14) 0.63(0.10) 0.63(0.02) 0.65(0.05) 0.61(0.06) 0.62(0.07) 0.62(0.01) 0.61(0.04) 0.63(0.08) 0.59(0.09) 0.61(0.05) 0.59(0.06) 0.61(0.04) 0.62(0.02) 0.60(0.03) 0.63(0.06) 0.60(0.05) 0.58(0.04) 0.63(0.08) 0.59(0.08) 0.59(0.04) 0.63(0.08) 0.59(0.09) 0.59(0.05) 0.62(0.07) 0.59(0.08) 0.63(0.06) 0.65(0.06) 0.61(0.09) 0.61(0.05) 0.62(0.05) 0.58(0.08) 0.60(0.06) 0.59(0.10) 0.62(0.07) 0.62(0.06) 0.61(0.05) 0.62(0.04) 0.62(0.05) 0.64(0.06) 0.63(0.04) 0.62(0.04) 0.62(0.07) 0.65(0.04) 0.65(0.07) 0.63(0.09) 0.63(0.02) 0.63(0.02) 0.61(0.07) 0.64(0.04) 0.65(0.04) 0.65(0.05) 0.61(0.06) 0.60(0.06) 0.60(0.06) 0.60(0.04) 0.62(0.05) 0.60(0.07) 0.64(0.11) 0.67(0.09) 0.65(0.04) 0.67(0.03) 0.68(0.03) 0.70(0.09) 0.71(0.08) 0.70(0.07) 0.70(0.04) 0.70(0.02) 0.70(0.08) 0.69(0.06) 0.68(0.03) 0.65(0.08)
++ Max displacement in automask = 0.80 (mm) at sub-brick 1
++ Max delta displ  in automask = 0.33 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.sub-S13.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S13.aff12.1D anatSS.sub-S13_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source pb02.sub-S13.r03.tshift+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S13.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S13.r03.tshift+orig.BRIK is 20.756298 degrees from plumb.
++ opened source dataset 'pb02.sub-S13.r03.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1419702272
in use bytes     = 1209624528
Total (incl. mmap):
system bytes     = 1419702272
in use bytes     = 1209624528
max mmap regions =          1
max mmap bytes   =  104980480
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1339.8 sec
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 20.756298 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1419702272
in use bytes     = 1209624688
Total (incl. mmap):
system bytes     = 1419702272
in use bytes     = 1209624688
max mmap regions =          1
max mmap bytes   =  104980480
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -cubic -1Dmatrix_save mat.r04.vr.aff12.1D pb02.sub-S13.r04.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 20.756298 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S13.r04.tshift+orig.BRIK is 18.913485 degrees from plumb.
++ centers of base and input datasets are 7.54 mm apart
++ Reading input dataset ./pb02.sub-S13.r04.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 48465 voxels
 + 6550 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.458  pitch=+2.740  yaw=-1.238  dS=-2.125  dL=-1.442  dP=-1.572
++ Mean: roll=-1.133  pitch=+3.200  yaw=-1.109  dS=-1.661  dL=-1.147  dP=-1.421
++ Max : roll=-0.821  pitch=+3.531  yaw=-1.040  dS=-1.391  dL=-0.917  dP=-1.216
++ Max displacements (mm) for each sub-brick:
 6.91(0.00) 6.67(0.48) 6.65(0.07) 6.63(0.04) 6.67(0.09) 6.67(0.07) 6.69(0.02) 6.67(0.06) 6.62(0.09) 6.66(0.08) 6.83(0.18) 6.91(0.08) 6.94(0.08) 6.94(0.09) 6.89(0.09) 6.90(0.03) 6.88(0.02) 6.90(0.02) 6.89(0.07) 6.91(0.03) 6.94(0.05) 6.93(0.04) 6.96(0.06) 7.01(0.06) 7.01(0.04) 7.00(0.02) 7.03(0.05) 7.04(0.06) 6.98(0.07) 7.00(0.04) 7.05(0.07) 7.01(0.07) 6.97(0.04) 7.03(0.11) 6.97(0.08) 7.01(0.05) 7.01(0.02) 7.05(0.08) 7.02(0.07) 6.99(0.04) 7.05(0.10) 7.00(0.06) 7.03(0.05) 7.09(0.06) 7.05(0.06) 7.02(0.04) 7.04(0.07) 7.02(0.05) 7.04(0.04) 7.08(0.05) 7.14(0.09) 7.10(0.07) 7.10(0.02) 7.15(0.09) 7.13(0.07) 7.08(0.05) 7.10(0.05) 7.09(0.09) 7.06(0.05) 7.05(0.08) 7.02(0.08) 7.07(0.07) 7.14(0.11) 7.11(0.05) 7.11(0.05) 7.15(0.08) 7.11(0.05) 7.11(0.04) 7.17(0.07) 7.14(0.09) 7.14(0.05) 7.19(0.09) 7.13(0.09) 7.15(0.05) 7.19(0.06) 7.16(0.07) 7.21(0.08) 7.29(0.11) 7.27(0.06) 7.30(0.04) 7.34(0.06) 7.30(0.06) 7.29(0.04) 7.33(0.06) 7.28(0.07) 7.29(0.06) 7.34(0.07) 7.37(0.05) 7.34(0.05) 7.37(0.03) 7.37(0.03) 7.40(0.09) 7.36(0.07) 7.37(0.04) 7.41(0.04) 7.38(0.05) 7.41(0.07) 7.38(0.05) 7.37(0.03) 7.44(0.10) 7.40(0.06) 7.42(0.02) 7.44(0.04) 7.47(0.05) 7.43(0.06) 7.46(0.07) 7.51(0.07) 7.53(0.03) 7.53(0.07) 7.55(0.05) 7.59(0.07) 7.52(0.11) 7.53(0.04) 7.59(0.10) 7.56(0.05) 7.57(0.06) 7.57(0.02) 7.55(0.07) 7.54(0.05) 7.53(0.02) 7.52(0.06) 7.50(0.05) 7.49(0.08) 7.52(0.08) 7.46(0.09) 7.45(0.05) 7.52(0.10) 7.48(0.07) 7.44(0.05) 7.48(0.04) 7.49(0.06) 7.43(0.08) 7.44(0.03) 7.49(0.08) 7.47(0.06) 7.47(0.06) 7.46(0.04) 7.47(0.05) 7.49(0.05) 7.52(0.04) 7.43(0.12) 7.45(0.05) 7.49(0.05) 7.48(0.04) 7.47(0.06) 7.51(0.07) 7.45(0.08) 7.48(0.06) 7.50(0.08) 7.52(0.04) 7.52(0.03) 7.53(0.05) 7.54(0.05) 7.53(0.05) 7.50(0.04) 7.47(0.05) 7.47(0.07) 7.46(0.04) 7.38(0.13) 7.39(0.08) 7.47(0.11) 7.45(0.07) 7.44(0.08) 7.43(0.05) 7.45(0.02) 7.49(0.06) 7.46(0.05) 7.42(0.03) 7.48(0.07) 7.44(0.10) 7.42(0.04) 7.44(0.05) 7.42(0.07) 7.44(0.05) 7.50(0.07) 7.46(0.06) 7.48(0.04) 7.52(0.07) 7.49(0.04) 7.47(0.04) 7.48(0.05) 7.53(0.06) 7.47(0.09) 7.48(0.03) 7.52(0.10) 7.49(0.06) 7.51(0.07) 7.49(0.04) 7.46(0.05) 7.45(0.03) 7.52(0.11) 7.48(0.08) 7.50(0.06) 7.54(0.06) 7.50(0.06) 7.47(0.09) 7.54(0.09) 7.53(0.05) 7.51(0.08) 7.56(0.10) 7.54(0.06) 7.55(0.06) 7.59(0.05) 7.53(0.08) 7.55(0.06) 7.60(0.06) 7.61(0.09) 7.57(0.05) 7.58(0.05) 7.60(0.03) 7.64(0.07) 7.61(0.05) 7.58(0.07) 7.61(0.04) 7.65(0.07) 7.59(0.08) 7.60(0.05) 7.66(0.08) 7.60(0.08) 7.62(0.05) 7.64(0.03) 7.65(0.02) 7.63(0.07) 7.59(0.08) 7.63(0.08) 7.69(0.11) 7.64(0.08) 7.60(0.06) 7.61(0.03) 7.63(0.05) 7.63(0.10) 7.63(0.02) 7.66(0.07) 7.59(0.11) 7.57(0.04) 7.61(0.05) 7.57(0.15) 7.52(0.07) 7.51(0.07) 7.47(0.08) 7.44(0.07) 7.44(0.05) 7.46(0.13) 7.49(0.08) 7.47(0.06) 7.46(0.06) 7.41(0.07) 7.40(0.06) 7.40(0.04) 7.46(0.08) 7.42(0.05) 7.42(0.04) 7.52(0.13) 7.47(0.09) 7.42(0.06) 7.48(0.07) 7.50(0.09) 7.53(0.06) 7.54(0.09) 7.53(0.17) 7.66(0.20) 7.67(0.09) 7.66(0.04) 7.68(0.05) 7.69(0.08) 7.67(0.04) 7.66(0.03) 7.69(0.04) 7.65(0.09) 7.65(0.04) 7.73(0.09) 7.69(0.08) 7.69(0.02) 7.72(0.06) 7.70(0.04) 7.69(0.03) 7.71(0.04) 7.66(0.07) 7.65(0.03) 7.68(0.04) 7.70(0.03) 7.74(0.07) 7.74(0.03) 7.78(0.06) 7.74(0.05) 7.86(0.20) 7.83(0.15) 7.79(0.14) 7.77(0.07) 7.79(0.11) 7.68(0.16) 7.65(0.12) 7.65(0.17) 7.62(0.07) 7.58(0.07) 7.65(0.07) 7.53(0.16) 7.51(0.04) 7.55(0.07) 7.51(0.07) 7.49(0.07) 7.48(0.05) 7.54(0.11) 7.53(0.08) 7.55(0.04) 7.57(0.06) 7.49(0.11) 7.50(0.07) 7.52(0.10) 7.55(0.10) 7.53(0.06) 7.51(0.05) 7.55(0.08) 7.56(0.06) 7.56(0.03) 7.55(0.05) 7.50(0.06) 7.52(0.10) 7.50(0.04) 7.52(0.09) 7.56(0.10) 7.57(0.07) 7.53(0.06) 7.52(0.04) 7.48(0.04) 7.47(0.06) 7.50(0.06) 7.52(0.05) 7.48(0.06) 7.50(0.03) 7.53(0.04) 7.52(0.02) 7.50(0.07) 7.50(0.06) 7.53(0.10) 7.54(0.10) 7.58(0.07) 7.55(0.04) 7.52(0.06) 7.53(0.08) 7.54(0.05) 7.54(0.03) 7.57(0.05) 7.54(0.05) 7.49(0.09) 7.48(0.07) 7.52(0.06) 7.53(0.04) 7.50(0.05) 7.50(0.02) 7.52(0.03) 7.54(0.05) 7.56(0.03) 7.53(0.13) 7.54(0.03) 7.56(0.03) 7.59(0.06) 7.61(0.04) 7.56(0.07) 7.53(0.04) 7.55(0.08) 7.60(0.08) 7.61(0.03) 7.60(0.04) 7.60(0.03) 7.60(0.04) 7.66(0.10) 7.64(0.06) 7.68(0.04) 7.66(0.03) 7.68(0.03) 7.70(0.07) 7.70(0.03) 7.72(0.04) 7.74(0.04) 7.66(0.09) 7.61(0.06) 7.64(0.04) 7.67(0.05) 7.62(0.06) 7.60(0.04) 7.65(0.07) 7.71(0.08) 7.66(0.07) 7.63(0.03) 7.62(0.04) 7.61(0.03) 7.61(0.02) 7.65(0.05) 7.64(0.03) 7.63(0.04) 7.65(0.03) 7.62(0.04) 7.66(0.05) 7.68(0.06) 7.73(0.09) 7.74(0.04) 7.74(0.03) 7.78(0.07) 7.74(0.07) 7.70(0.05) 7.75(0.07) 7.76(0.04) 7.74(0.04) 7.78(0.08) 7.74(0.08) 7.72(0.05) 7.76(0.07) 7.75(0.05) 7.71(0.05) 7.74(0.07) 7.75(0.05)
++ Max displacement in automask = 7.86 (mm) at sub-brick 285
++ Max delta displ  in automask = 0.48 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb02.sub-S13.r04.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S13.aff12.1D anatSS.sub-S13_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source pb02.sub-S13.r04.tshift+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r04.warp.aff12.1D -prefix rm.epi.nomask.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S13.r04.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S13.r04.tshift+orig.BRIK is 18.913485 degrees from plumb.
++ opened source dataset 'pb02.sub-S13.r04.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1313779712
in use bytes     = 1103708208
Total (incl. mmap):
system bytes     = 1313779712
in use bytes     = 1103708208
max mmap regions =          1
max mmap bytes   =  104980480
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r04+tlrc.BRIK
++ total Elapsed time = 1597.1 sec
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r04.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.913485 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1313779712
in use bytes     = 1103708368
Total (incl. mmap):
system bytes     = 1313779712
in use bytes     = 1103708368
max mmap regions =          1
max mmap bytes   =  104980480
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r05.1D -prefix rm.epi.volreg.r05 -cubic -1Dmatrix_save mat.r05.vr.aff12.1D pb02.sub-S13.r05.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 20.756298 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S13.r05.tshift+orig.BRIK is 18.913485 degrees from plumb.
++ centers of base and input datasets are 7.54 mm apart
++ Reading input dataset ./pb02.sub-S13.r05.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 48511 voxels
 + 6564 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-3.108  pitch=+1.412  yaw=-1.218  dS=-2.601  dL=-1.807  dP=-1.160
++ Mean: roll=-1.927  pitch=+2.596  yaw=-1.055  dS=-2.395  dL=-1.568  dP=-1.032
++ Max : roll=-1.504  pitch=+2.977  yaw=-0.955  dS=-1.974  dL=-1.312  dP=-0.787
++ Max displacements (mm) for each sub-brick:
 7.96(0.00) 7.74(0.34) 7.79(0.08) 7.78(0.03) 7.79(0.04) 7.82(0.04) 7.83(0.04) 7.79(0.05) 7.79(0.03) 7.82(0.08) 7.80(0.05) 7.80(0.03) 7.81(0.04) 7.79(0.03) 7.77(0.04) 7.84(0.08) 7.81(0.06) 7.75(0.07) 7.85(0.18) 7.85(0.12) 7.82(0.11) 7.85(0.07) 7.88(0.07) 7.84(0.06) 7.87(0.06) 7.89(0.03) 7.86(0.08) 7.83(0.04) 7.83(0.06) 7.85(0.07) 7.88(0.04) 7.87(0.04) 7.88(0.06) 7.93(0.06) 7.90(0.06) 7.90(0.04) 7.97(0.08) 7.95(0.05) 7.94(0.02) 7.96(0.05) 7.97(0.03) 7.91(0.09) 7.92(0.02) 7.98(0.09) 7.96(0.05) 7.95(0.04) 7.98(0.03) 8.00(0.04) 7.96(0.06) 7.96(0.02) 8.01(0.06) 7.99(0.04) 7.96(0.03) 7.97(0.02) 8.01(0.05) 8.01(0.02) 8.01(0.02) 8.01(0.05) 8.01(0.02) 8.01(0.05) 8.02(0.03) 8.05(0.04) 8.01(0.07) 8.01(0.02) 8.04(0.04) 8.04(0.04) 7.98(0.06) 7.98(0.03) 8.02(0.04) 8.01(0.03) 8.01(0.05) 8.01(0.01) 8.04(0.06) 8.00(0.08) 7.99(0.03) 7.98(0.03) 7.99(0.05) 7.96(0.06) 7.96(0.02) 7.97(0.03) 7.94(0.05) 7.93(0.03) 7.91(0.03) 7.93(0.02) 7.87(0.07) 7.84(0.04) 7.89(0.07) 7.86(0.06) 7.83(0.04) 7.87(0.05) 7.85(0.08) 7.83(0.03) 7.86(0.06) 7.86(0.08) 7.84(0.02) 7.87(0.06) 7.86(0.03) 7.86(0.02) 7.82(0.07) 7.83(0.03) 7.81(0.04) 7.80(0.05) 7.82(0.06) 7.94(0.14) 7.94(0.09) 7.90(0.04) 7.90(0.02) 7.96(0.07) 7.95(0.06) 7.95(0.08) 7.97(0.02) 7.99(0.04) 7.97(0.04) 7.98(0.06) 8.02(0.04) 8.04(0.03) 8.09(0.08) 8.14(0.05) 8.14(0.06) 8.14(0.05) 8.16(0.02) 8.22(0.07) 8.27(0.06) 8.24(0.05) 8.28(0.05) 8.31(0.05) 8.35(0.06) 8.36(0.05) 8.38(0.05) 8.42(0.05) 8.47(0.08) 8.48(0.08) 8.40(0.12) 8.44(0.08) 8.50(0.06) 8.49(0.07) 8.49(0.05) 8.49(0.03) 8.51(0.06) 8.47(0.07) 8.49(0.02) 8.50(0.02) 8.53(0.09) 8.47(0.10) 8.45(0.07) 8.48(0.05) 8.51(0.07) 8.47(0.06) 8.43(0.04) 8.43(0.03) 8.48(0.10) 8.41(0.08) 8.42(0.04) 8.43(0.05) 8.41(0.03) 8.41(0.08) 8.43(0.03) 8.48(0.07) 8.44(0.05) 8.43(0.03) 8.46(0.04) 8.47(0.05) 8.43(0.06) 8.46(0.04) 8.49(0.06) 8.45(0.06) 8.43(0.03) 8.50(0.10) 8.45(0.09) 8.43(0.05) 8.44(0.04) 8.41(0.06) 8.41(0.02) 8.43(0.06) 8.41(0.04) 8.37(0.06) 8.42(0.07) 8.39(0.07) 8.40(0.03) 8.40(0.06) 8.38(0.04) 8.36(0.04) 8.40(0.06) 8.40(0.05) 8.40(0.05) 8.40(0.06) 8.35(0.05) 8.33(0.03) 8.33(0.04) 8.38(0.08) 8.31(0.09) 8.28(0.03) 8.29(0.05) 8.31(0.02) 8.28(0.06) 8.34(0.09) 8.28(0.11) 8.27(0.04) 8.29(0.05) 8.28(0.04) 8.28(0.06) 8.24(0.04) 8.19(0.07) 8.19(0.08) 8.19(0.04) 8.19(0.06) 8.19(0.08) 8.25(0.10) 8.23(0.05) 8.19(0.07) 8.21(0.04) 8.26(0.05) 8.24(0.05) 8.25(0.05) 8.32(0.08) 8.30(0.05) 8.28(0.07) 8.30(0.03) 8.32(0.06) 8.27(0.07) 8.30(0.06) 8.33(0.06) 8.31(0.06) 8.33(0.04) 8.35(0.07) 8.28(0.11) 8.25(0.05) 8.31(0.09) 8.30(0.08) 8.24(0.06) 8.26(0.02) 8.24(0.05) 8.25(0.08) 8.23(0.08) 8.24(0.04) 8.30(0.07) 8.27(0.05) 8.28(0.07) 8.32(0.08) 8.29(0.08) 8.30(0.03) 8.35(0.06) 8.30(0.07) 8.33(0.05) 8.36(0.04) 8.32(0.06) 8.27(0.06) 8.32(0.07) 8.35(0.05) 8.29(0.09) 8.31(0.08) 8.37(0.08) 8.35(0.05) 8.36(0.02) 8.37(0.08) 8.38(0.05) 8.38(0.05) 8.36(0.05) 8.33(0.14) 8.30(0.11) 8.26(0.08) 8.26(0.02) 8.27(0.06) 8.25(0.06) 8.21(0.05) 8.18(0.05) 8.14(0.11) 8.09(0.07) 8.05(0.06) 8.05(0.07) 8.02(0.06) 8.03(0.06) 8.06(0.06) 8.10(0.29) 8.05(0.18) 8.15(0.21) 8.13(0.09) 8.10(0.05) 8.12(0.03) 8.12(0.10) 8.08(0.06) 8.05(0.04) 8.04(0.04) 8.09(0.06) 8.06(0.03) 8.06(0.04) 8.08(0.03) 8.11(0.07) 8.05(0.09) 7.98(0.08) 7.98(0.04) 8.05(0.09) 8.05(0.08) 8.05(0.04) 8.05(0.08) 8.02(0.06) 7.99(0.06) 7.98(0.03) 7.98(0.05) 7.96(0.03) 7.96(0.04) 7.95(0.04) 7.88(0.14) 7.78(0.13) 7.65(0.17) 7.56(0.12) 7.58(0.10) 7.62(0.09) 7.70(0.11) 7.67(0.07) 7.55(0.20) 7.50(0.08) 7.53(0.11) 7.55(0.07) 7.51(0.05) 7.49(0.05) 7.49(0.21) 7.53(0.08) 7.51(0.07) 7.49(0.08) 7.56(0.09) 7.63(0.11) 7.67(0.21) 7.72(0.41) 7.60(0.14) 7.42(0.29) 7.33(0.13) 7.38(0.10) 7.40(0.04) 7.39(0.11) 7.37(0.07) 7.44(0.09) 7.57(0.15) 7.56(0.15) 7.54(0.09) 7.42(0.20) 7.32(0.15) 7.35(0.10) 7.34(0.07) 7.30(0.11) 7.42(0.14) 7.40(0.14) 7.40(0.13) 7.37(0.06) 7.36(0.13) 7.31(0.16) 7.36(0.13) 7.36(0.06) 7.46(0.15) 7.46(0.07) 7.40(0.07) 7.39(0.09) 7.33(0.06) 7.30(0.06) 7.36(0.06) 7.35(0.04) 7.37(0.05) 7.43(0.15) 7.38(0.11) 7.35(0.06) 7.47(0.20) 7.51(0.10) 7.38(0.16) 7.46(0.12) 7.54(0.15) 7.54(0.10) 7.50(0.09) 7.48(0.08) 7.56(0.18) 7.64(0.26) 7.82(0.26) 7.73(0.21) 7.67(0.20) 7.67(0.04) 7.70(0.08) 7.68(0.07) 7.66(0.05) 7.63(0.05) 7.62(0.05) 7.72(0.10) 7.54(0.20) 7.42(0.13) 7.63(0.27) 7.69(0.09) 7.66(0.04) 7.57(0.11) 7.63(0.10) 7.67(0.11) 7.68(0.09) 7.63(0.11) 7.54(0.11) 7.58(0.11) 7.63(0.09) 7.62(0.05) 7.62(0.08) 7.68(0.06) 7.72(0.05) 7.69(0.11) 7.79(0.13) 7.76(0.10) 7.78(0.15) 8.00(0.46) 8.04(0.09) 8.01(0.10) 7.99(0.07) 8.11(0.22) 8.09(0.15) 8.07(0.06) 7.96(0.18) 8.00(0.07) 8.00(0.05) 8.13(0.14)
++ Max displacement in automask = 8.53 (mm) at sub-brick 142
++ Max delta displ  in automask = 0.46 (mm) at sub-brick 401
++ Wrote dataset to disk in ./rm.epi.volreg.r05+orig.BRIK
3dcalc -overwrite -a pb02.sub-S13.r05.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S13.aff12.1D anatSS.sub-S13_al_junk_mat.aff12.1D -I mat.r05.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source pb02.sub-S13.r05.tshift+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r05.warp.aff12.1D -prefix rm.epi.nomask.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S13.r05.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S13.r05.tshift+orig.BRIK is 18.913485 degrees from plumb.
++ opened source dataset 'pb02.sub-S13.r05.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1328521216
in use bytes     = 1118450736
Total (incl. mmap):
system bytes     = 1328521216
in use bytes     = 1118450736
max mmap regions =          1
max mmap bytes   =  104980480
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r05+tlrc.BRIK
++ total Elapsed time = 1645.2 sec
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r05.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.913485 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1328521216
in use bytes     = 1118450896
Total (incl. mmap):
system bytes     = 1328521216
in use bytes     = 1118450896
max mmap regions =          1
max mmap bytes   =  104980480
3dTstat -min -prefix rm.epi.min.r05 rm.epi.1.r05+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r05+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r06.1D -prefix rm.epi.volreg.r06 -cubic -1Dmatrix_save mat.r06.vr.aff12.1D pb02.sub-S13.r06.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 20.756298 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S13.r06.tshift+orig.BRIK is 18.913631 degrees from plumb.
++ centers of base and input datasets are 7.54 mm apart
++ Reading input dataset ./pb02.sub-S13.r06.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 48601 voxels
 + 6563 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.517  pitch=+0.930  yaw=-1.249  dS=-0.991  dL=-1.202  dP=-1.649
++ Mean: roll=-0.810  pitch=+1.669  yaw=-0.738  dS=-0.884  dL=-0.524  dP=-1.311
++ Max : roll=-0.696  pitch=+2.598  yaw=-0.472  dS=-0.789  dL=-0.112  dP=-1.016
++ Max displacements (mm) for each sub-brick:
 2.94(0.00) 3.07(0.19) 3.08(0.04) 3.04(0.08) 3.08(0.10) 3.04(0.06) 3.05(0.07) 3.06(0.04) 3.03(0.04) 3.08(0.07) 3.06(0.05) 3.11(0.07) 3.07(0.08) 3.07(0.06) 3.10(0.03) 3.07(0.05) 3.10(0.07) 3.06(0.05) 3.11(0.09) 3.09(0.07) 3.10(0.04) 3.09(0.05) 3.10(0.04) 3.14(0.07) 3.11(0.05) 3.13(0.06) 3.12(0.06) 3.12(0.06) 3.17(0.07) 3.14(0.05) 3.14(0.05) 3.16(0.03) 3.14(0.03) 3.20(0.06) 3.20(0.04) 3.22(0.09) 3.21(0.07) 3.20(0.03) 3.26(0.11) 3.23(0.09) 3.23(0.06) 3.22(0.04) 3.24(0.06) 3.23(0.07) 3.24(0.04) 3.25(0.05) 3.25(0.04) 3.28(0.07) 3.25(0.06) 3.25(0.02) 3.29(0.06) 3.28(0.04) 3.26(0.03) 3.29(0.04) 3.25(0.06) 3.28(0.08) 3.25(0.08) 3.25(0.03) 3.27(0.04) 3.26(0.06) 3.26(0.04) 3.28(0.06) 3.27(0.05) 3.30(0.06) 3.30(0.04) 3.28(0.06) 3.31(0.08) 3.30(0.07) 3.32(0.03) 3.32(0.03) 3.31(0.02) 3.39(0.10) 3.39(0.05) 3.38(0.03) 3.41(0.04) 3.41(0.03) 3.45(0.07) 3.45(0.06) 3.46(0.04) 3.49(0.05) 3.44(0.06) 3.45(0.05) 3.46(0.06) 3.45(0.05) 3.46(0.04) 3.46(0.04) 3.51(0.08) 3.50(0.06) 3.50(0.05) 3.52(0.04) 3.50(0.10) 3.52(0.05) 3.58(0.08) 3.57(0.07) 3.59(0.05) 3.61(0.08) 3.61(0.04) 3.60(0.04) 3.61(0.03) 3.62(0.04) 3.63(0.08) 3.65(0.06) 3.66(0.08) 3.64(0.07) 3.65(0.04) 3.69(0.05) 3.67(0.05) 3.65(0.03) 3.67(0.07) 3.65(0.08) 3.62(0.05) 3.65(0.07) 3.63(0.05) 3.65(0.04) 3.68(0.10) 3.76(0.16) 3.84(0.11) 3.80(0.09) 3.81(0.13) 3.79(0.10) 3.79(0.03) 3.82(0.10) 3.81(0.05) 3.81(0.02) 3.84(0.05) 3.80(0.07) 3.77(0.05) 3.83(0.08) 3.79(0.07) 3.82(0.07) 3.82(0.04) 3.81(0.05) 3.82(0.03) 3.86(0.08) 3.84(0.05) 3.83(0.04) 3.84(0.04) 3.85(0.02) 3.86(0.06) 3.90(0.07) 3.90(0.07) 3.88(0.06) 3.87(0.03) 3.89(0.03) 3.89(0.04) 3.89(0.03) 3.95(0.09) 3.94(0.04) 3.98(0.06) 3.99(0.07) 4.01(0.02) 4.03(0.03) 4.02(0.02) 4.06(0.07) 4.08(0.04) 4.11(0.07) 4.12(0.03) 4.15(0.05) 4.20(0.09) 4.17(0.08) 4.17(0.03) 4.20(0.08) 4.16(0.09) 4.19(0.06) 4.24(0.08) 4.25(0.04) 4.26(0.07) 4.24(0.06) 4.22(0.04) 4.25(0.05) 4.26(0.06) 4.27(0.04) 4.26(0.04) 4.25(0.02) 4.31(0.07) 4.30(0.07) 4.35(0.08) 4.33(0.06) 4.33(0.03) 4.35(0.05) 4.36(0.05) 4.40(0.06) 4.38(0.06) 4.39(0.04) 4.44(0.06) 4.47(0.05) 4.53(0.09) 4.49(0.09) 4.51(0.07) 4.59(0.11) 4.56(0.08) 4.52(0.05) 4.60(0.09) 4.59(0.07) 4.64(0.09) 4.65(0.05) 4.68(0.04) 4.67(0.07) 4.68(0.06) 4.70(0.04) 4.74(0.07) 4.75(0.08) 4.80(0.16) 4.84(0.06) 4.83(0.08) 4.88(0.07) 4.88(0.03) 4.89(0.05) 4.92(0.08) 4.98(0.08) 4.95(0.11) 4.94(0.02) 4.97(0.06) 5.04(0.08) 5.04(0.02) 5.04(0.03) 5.02(0.07) 5.04(0.05) 5.04(0.04) 5.06(0.05) 5.08(0.07) 5.12(0.10) 5.12(0.04) 5.15(0.06) 5.18(0.09) 5.15(0.07) 5.11(0.04) 5.14(0.09) 5.14(0.03) 5.17(0.03) 5.14(0.07) 5.14(0.05) 5.18(0.11) 5.18(0.06) 5.16(0.03) 5.23(0.11) 5.21(0.06) 5.23(0.08) 5.26(0.05) 5.17(0.12) 5.15(0.05) 5.18(0.05) 5.21(0.07) 5.27(0.09) 5.22(0.08) 5.15(0.09) 5.19(0.09) 5.17(0.06) 5.18(0.02) 5.20(0.06) 5.21(0.07) 5.24(0.07) 5.24(0.05) 5.26(0.08) 5.27(0.04) 5.26(0.03) 5.30(0.05) 5.27(0.05) 5.29(0.06) 5.31(0.04) 5.29(0.03) 5.34(0.08) 5.30(0.11) 5.27(0.08) 5.33(0.10) 5.36(0.10) 5.35(0.05) 5.35(0.03) 5.34(0.03) 5.41(0.11) 5.38(0.06) 5.41(0.04) 5.43(0.07) 5.37(0.11) 5.37(0.03) 5.44(0.10) 5.41(0.14) 5.42(0.09) 5.49(0.08) 5.48(0.13) 5.48(0.15) 5.47(0.08) 5.51(0.06) 5.54(0.05) 5.58(0.04) 5.60(0.06) 5.60(0.09) 5.60(0.09) 5.61(0.08) 5.65(0.06) 5.78(0.21) 5.93(0.28) 6.33(0.46) 6.33(0.09) 6.38(0.12)
++ Max displacement in automask = 6.38 (mm) at sub-brick 294
++ Max delta displ  in automask = 0.46 (mm) at sub-brick 292
++ Wrote dataset to disk in ./rm.epi.volreg.r06+orig.BRIK
3dcalc -overwrite -a pb02.sub-S13.r06.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S13.aff12.1D anatSS.sub-S13_al_junk_mat.aff12.1D -I mat.r06.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source pb02.sub-S13.r06.tshift+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r06.warp.aff12.1D -prefix rm.epi.nomask.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S13.r06.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S13.r06.tshift+orig.BRIK is 18.913631 degrees from plumb.
++ opened source dataset 'pb02.sub-S13.r06.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1313742848
in use bytes     = 1103662896
Total (incl. mmap):
system bytes     = 1313742848
in use bytes     = 1103662896
max mmap regions =          1
max mmap bytes   =  104980480
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r06+tlrc.BRIK
++ total Elapsed time = 1226.9 sec
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S13_WARP.nii mat.r06.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.913631 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1313742848
in use bytes     = 1103663056
Total (incl. mmap):
system bytes     = 1313742848
in use bytes     = 1103663056
max mmap regions =          1
max mmap bytes   =  104980480
3dTstat -min -prefix rm.epi.min.r06 rm.epi.1.r06+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r06+tlrc.BRIK
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D dfile.r04.1D dfile.r05.1D dfile.r06.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD rm.epi.min.r04+tlrc.HEAD rm.epi.min.r05+tlrc.HEAD rm.epi.min.r06+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask_epi_extents+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S13.r01.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S13.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S13.r02.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S13.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S13.r03.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S13.r03.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r04+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S13.r04.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S13.r04.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r05+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S13.r05.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S13.r05.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r06+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S13.r06.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S13.r06.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anatQQ.sub-S13.aff12.1D anatSS.sub-S13_al_junk_mat.aff12.1D -I
3dNwarpApply -master anatQQ.sub-S13+tlrc -dxyz 3 -source vr_base+orig -nwarp anatQQ.sub-S13_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S13+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 20.756298 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     =  292339712
in use bytes     = 1990587808
Total (incl. mmap):
system bytes     =  690249728
in use bytes     = 2388497824
max mmap regions =          1
max mmap bytes   =  397910016
++ Warping:.Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 10.9 sec
3dcopy anatQQ.sub-S13+tlrc anat_final.sub-S13
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.sub-S13+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.sub-S13+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'RHDD(11.07)'
 +        -cmass x y z shifts =   -1.661    1.085   -2.464
 +  shift search range is +/- =   68.373   84.744   68.373
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.153776
   sp   = 0.305083
   mi   = 2.48127
   crM  = 0.0215638
   nmi  = 0.815308
   je   = 2.48127
   hel  = -0.113148
   crA  = 0.146966
   crU  = 0.152899
   lss  = 0.846224
   lpc  = -0.172749
   lpa  = 0.827251
   lpc+ = -0.0625116
   lpa+ = 0.937488
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.6
++ ###########################################################
3dTstat -mean -prefix rm.signal.vreg.r01 pb03.sub-S13.r01.volreg+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.vreg.r01+tlrc.BRIK
3dDetrend -polort 6 -prefix rm.noise.det -overwrite pb03.sub-S13.r01.volreg+tlrc
++ 3dDetrend: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTstat -stdev -prefix rm.noise.vreg.r01 rm.noise.det+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.vreg.r01+tlrc.BRIK
3dcalc -a rm.signal.vreg.r01+tlrc -b rm.noise.vreg.r01+tlrc -c mask_epi_extents+tlrc -expr c*a/b -prefix TSNR.vreg.r01.sub-S13
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.vreg.r01.sub-S13+tlrc.BRIK
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 10098 survived, 16767118 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 275784 survived, 16501432 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dNwarpApply -source copy_af_anat_w_skull+orig -master anat_final.sub-S13+tlrc -ainterp wsinc5 -nwarp anatQQ.sub-S13_WARP.nii anatQQ.sub-S13.aff12.1D -prefix follow_anat_anat_w_skull
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_anat_w_skull+orig'
++ -master dataset is 'anat_final.sub-S13+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3653787648
in use bytes     = 1560900720
Total (incl. mmap):
system bytes     = 3965911040
in use bytes     = 1873024112
max mmap regions =          1
max mmap bytes   =  312123392
++ Warping:.Z
++ Output dataset ./follow_anat_anat_w_skull+tlrc.BRIK
++ total Elapsed time = 10.2 sec
3dNwarpApply -source copy_af_aaseg+orig -master anat_final.sub-S13+tlrc -ainterp NN -nwarp anatQQ.sub-S13_WARP.nii anatQQ.sub-S13.aff12.1D -prefix follow_ROI_aaseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aaseg+orig'
++ -master dataset is 'anat_final.sub-S13+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3759058944
in use bytes     = 1873306208
Total (incl. mmap):
system bytes     = 3759312896
in use bytes     = 1873560160
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aaseg+tlrc.BRIK
++ total Elapsed time = 8.1 sec
3dNwarpApply -source copy_af_aeseg+orig -master pb03.sub-S13.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S13_WARP.nii anatQQ.sub-S13.aff12.1D -prefix follow_ROI_aeseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aeseg+orig'
++ -master dataset is 'pb03.sub-S13.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3759177728
in use bytes     = 1873438336
Total (incl. mmap):
system bytes     = 3759431680
in use bytes     = 1873692288
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aeseg+tlrc.BRIK
++ total Elapsed time = 8.3 sec
3dNwarpApply -source copy_af_FSvent_erode+orig -master pb03.sub-S13.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S13_WARP.nii anatQQ.sub-S13.aff12.1D -prefix follow_ROI_FSvent
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSvent_erode+orig'
++ -master dataset is 'pb03.sub-S13.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3653910528
in use bytes     = 1561026192
Total (incl. mmap):
system bytes     = 3966033920
in use bytes     = 1873149584
max mmap regions =          1
max mmap bytes   =  312123392
++ Warping:.Z
++ Output dataset ./follow_ROI_FSvent+tlrc.BRIK
++ total Elapsed time = 8.3 sec
3dNwarpApply -source copy_af_FSWe_erode+orig -master pb03.sub-S13.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S13_WARP.nii anatQQ.sub-S13.aff12.1D -prefix follow_ROI_FSWe
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSWe_erode+orig'
++ -master dataset is 'pb03.sub-S13.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3653910528
in use bytes     = 1561026320
Total (incl. mmap):
system bytes     = 3966033920
in use bytes     = 1873149712
max mmap regions =          1
max mmap bytes   =  312123392
++ Warping:.Z
++ Output dataset ./follow_ROI_FSWe+tlrc.BRIK
++ total Elapsed time = 7.9 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb03.volreg pb03.sub-S13.r01.volreg+tlrc.HEAD pb03.sub-S13.r02.volreg+tlrc.HEAD pb03.sub-S13.r03.volreg+tlrc.HEAD pb03.sub-S13.r04.volreg+tlrc.HEAD pb03.sub-S13.r05.volreg+tlrc.HEAD pb03.sub-S13.r06.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.3 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.0 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S13.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S13.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S13.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S13.r04.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r04.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S13.r05.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r05.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S13.r06.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r06.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 04 05 06 )
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S13.r01.blur pb03.sub-S13.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S13.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S13.r02.blur pb03.sub-S13.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S13.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S13.r03.blur pb03.sub-S13.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S13.r03.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S13.r04.blur pb03.sub-S13.r04.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S13.r04.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S13.r05.blur pb03.sub-S13.r05.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S13.r05.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S13.r06.blur pb03.sub-S13.r06.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S13.r06.blur+tlrc.BRIK

end
foreach run ( 01 02 03 04 05 06 )
3dAutomask -prefix rm.mask_r01 pb04.sub-S13.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S13.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 306.089172
 + Used gradual clip level = 280.523102 .. 346.433929
 + Number voxels above clip level = 71330
 + Clustering voxels ...
 + Largest cluster has 71330 voxels
 + Clustering voxels ...
 + Largest cluster has 71291 voxels
 + Filled    60 voxels in small holes; now have 71351 voxels
 + Clustering voxels ...
 + Largest cluster has 71351 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239945 voxels
 + Mask now has 71351 voxels
++ 71351 voxels in the mask [out of 311296: 22.92%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   8 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   10 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb04.sub-S13.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S13.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 304.292847
 + Used gradual clip level = 278.720703 .. 345.578278
 + Number voxels above clip level = 71294
 + Clustering voxels ...
 + Largest cluster has 71294 voxels
 + Clustering voxels ...
 + Largest cluster has 71248 voxels
 + Filled    66 voxels in small holes; now have 71314 voxels
 + Filled     1 voxels in large holes; now have 71315 voxels
 + Clustering voxels ...
 + Largest cluster has 71315 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239981 voxels
 + Mask now has 71315 voxels
++ 71315 voxels in the mask [out of 311296: 22.91%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   8 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   10 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb04.sub-S13.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S13.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 305.082642
 + Used gradual clip level = 279.080078 .. 345.780701
 + Number voxels above clip level = 71313
 + Clustering voxels ...
 + Largest cluster has 71313 voxels
 + Clustering voxels ...
 + Largest cluster has 71272 voxels
 + Filled    61 voxels in small holes; now have 71333 voxels
 + Clustering voxels ...
 + Largest cluster has 71333 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239963 voxels
 + Mask now has 71333 voxels
++ 71333 voxels in the mask [out of 311296: 22.91%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   8 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   10 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r04 pb04.sub-S13.r04.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S13.r04.blur+tlrc
++ Forming automask
 + Fixed clip level = 306.611786
 + Used gradual clip level = 281.193695 .. 348.326233
 + Number voxels above clip level = 71436
 + Clustering voxels ...
 + Largest cluster has 71436 voxels
 + Clustering voxels ...
 + Largest cluster has 71390 voxels
 + Filled    95 voxels in small holes; now have 71485 voxels
 + Filled     1 voxels in large holes; now have 71486 voxels
 + Clustering voxels ...
 + Largest cluster has 71486 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239810 voxels
 + Mask now has 71486 voxels
++ 71486 voxels in the mask [out of 311296: 22.96%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   8 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   10 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r05 pb04.sub-S13.r05.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S13.r05.blur+tlrc
++ Forming automask
 + Fixed clip level = 306.643677
 + Used gradual clip level = 281.407715 .. 347.965973
 + Number voxels above clip level = 71355
 + Clustering voxels ...
 + Largest cluster has 71355 voxels
 + Clustering voxels ...
 + Largest cluster has 71317 voxels
 + Filled    74 voxels in small holes; now have 71391 voxels
 + Clustering voxels ...
 + Largest cluster has 71391 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239905 voxels
 + Mask now has 71391 voxels
++ 71391 voxels in the mask [out of 311296: 22.93%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   8 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   10 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r06 pb04.sub-S13.r06.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S13.r06.blur+tlrc
++ Forming automask
 + Fixed clip level = 308.281799
 + Used gradual clip level = 282.886322 .. 349.110901
 + Number voxels above clip level = 71306
 + Clustering voxels ...
 + Largest cluster has 71306 voxels
 + Clustering voxels ...
 + Largest cluster has 71273 voxels
 + Filled    75 voxels in small holes; now have 71348 voxels
 + Clustering voxels ...
 + Largest cluster has 71348 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239948 voxels
 + Mask now has 71348 voxels
++ 71348 voxels in the mask [out of 311296: 22.92%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   8 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last   10 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD -union -prefix full_mask.sub-S13
++ processing 6 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 6 volumes gives min count 0
++ voxel limits: 0 clipped, 72021 survived, 239275 were zero
++ writing result full_mask.sub-S13...
++ Output dataset ./full_mask.sub-S13+tlrc.BRIK
3dresample -master full_mask.sub-S13+tlrc -input anatQQ.sub-S13+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.sub-S13
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 73508 survived, 237788 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-S13...
++ Output dataset ./mask_anat.sub-S13+tlrc.BRIK
3dmask_tool -input full_mask.sub-S13+tlrc mask_anat.sub-S13+tlrc -inter -prefix mask_epi_anat.sub-S13
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 7809 clipped, 68860 survived, 234627 were zero
++ writing result mask_epi_anat.sub-S13...
++ Output dataset ./mask_epi_anat.sub-S13+tlrc.BRIK
3dABoverlap -no_automask full_mask.sub-S13+tlrc mask_anat.sub-S13+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#A=./full_mask.sub-S13+tlrc.BRIK  B=./mask_anat.sub-S13+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
72021        73508        76669        68860        3161         4648          4.3890      6.3231     1.0122     0.9510     1.0383
3ddot -dodice full_mask.sub-S13+tlrc mask_anat.sub-S13+tlrc
tee out.mask_ae_dice.txt
0.946341	
3dresample -master full_mask.sub-S13+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_centos_7_64/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71053 survived, 240243 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
++ Output dataset ./mask_group+tlrc.BRIK
3ddot -dodice mask_anat.sub-S13+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.981413	
foreach run ( 01 02 03 04 05 06 )
3dTstat -prefix rm.mean_r01 pb04.sub-S13.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.sub-S13.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S13.r01.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S13.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.sub-S13.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.sub-S13.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S13.r02.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S13.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.sub-S13.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.sub-S13.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S13.r03.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S13.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb04.sub-S13.r04.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb04.sub-S13.r04.blur+tlrc -b rm.mean_r04+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S13.r04.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S13.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb04.sub-S13.r05.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb04.sub-S13.r05.blur+tlrc -b rm.mean_r05+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S13.r05.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S13.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb04.sub-S13.r06.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb04.sub-S13.r06.blur+tlrc -b rm.mean_r06+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S13.r06.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S13.r06.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile motion_demean.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_demean
1d_tool.py -infile motion_deriv.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_deriv
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -show_censor_count -censor_prev_TR -censor_motion 0.25 motion_sub-S13
total number of censored TRs (simple form) = 12
1deval -a motion_sub-S13_censor.1D -b outcount_sub-S13_censor.1D -expr a*b
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 6
set nt = 412
set run = 01
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r01.1D
end
set nt = 412
set run = 02
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r02.1D
end
set nt = 295
set run = 03
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 03 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r03.1D
end
set nt = 412
set run = 04
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 04 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r04.1D
end
set nt = 412
set run = 05
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 05 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r05.1D
end
set nt = 295
set run = 06
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 06 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r06.1D
end
1dcat bpass.r01.1D bpass.r02.1D bpass.r03.1D bpass.r04.1D bpass.r05.1D bpass.r06.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-S13_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 03 04 05 06 )
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 01 -infile censor_sub-S13_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 5 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb03.sub-S13.r01.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 39 ; remaining = 373
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 373 retained time points MINUS 6 regressors ==> 367 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 132693 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+tlrc.BRIK
++ ===== clock time = 5s 947ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r01 rm.det_pcin_r01+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r01.1D -infile rm.ROIPC.FSvent.r01_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 01 6 -infile - -write ROIPC.FSvent.r01.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 02 -infile censor_sub-S13_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 5 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb03.sub-S13.r02.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 412 retained time points MINUS 6 regressors ==> 406 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 132693 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+tlrc.BRIK
++ ===== clock time = 6s 658ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r02 rm.det_pcin_r02+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r02.1D -infile rm.ROIPC.FSvent.r02_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 02 6 -infile - -write ROIPC.FSvent.r02.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 03 -infile censor_sub-S13_combined_2.1D -write rm.censor.r03.1D
3dTproject -polort 5 -prefix rm.det_pcin_r03 -censor rm.censor.r03.1D -cenmode KILL -input pb03.sub-S13.r03.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 295 retained time points MINUS 6 regressors ==> 289 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 132693 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r03+tlrc.BRIK
++ ===== clock time = 4s 666ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r03 rm.det_pcin_r03+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r03.1D -infile rm.ROIPC.FSvent.r03_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 03 6 -infile - -write ROIPC.FSvent.r03.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 04 -infile censor_sub-S13_combined_2.1D -write rm.censor.r04.1D
3dTproject -polort 5 -prefix rm.det_pcin_r04 -censor rm.censor.r04.1D -cenmode KILL -input pb03.sub-S13.r04.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 2 ; remaining = 410
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 410 retained time points MINUS 6 regressors ==> 404 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 132816 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r04+tlrc.BRIK
++ ===== clock time = 6s 320ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r04 rm.det_pcin_r04+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r04.1D -infile rm.ROIPC.FSvent.r04_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 04 6 -infile - -write ROIPC.FSvent.r04.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 05 -infile censor_sub-S13_combined_2.1D -write rm.censor.r05.1D
3dTproject -polort 5 -prefix rm.det_pcin_r05 -censor rm.censor.r05.1D -cenmode KILL -input pb03.sub-S13.r05.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 4 ; remaining = 408
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 408 retained time points MINUS 6 regressors ==> 402 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 132693 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r05+tlrc.BRIK
++ ===== clock time = 6s 334ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r05 rm.det_pcin_r05+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r05.1D -infile rm.ROIPC.FSvent.r05_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 05 6 -infile - -write ROIPC.FSvent.r05.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 06 -infile censor_sub-S13_combined_2.1D -write rm.censor.r06.1D
3dTproject -polort 5 -prefix rm.det_pcin_r06 -censor rm.censor.r06.1D -cenmode KILL -input pb03.sub-S13.r06.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 295 ; censored = 4 ; remaining = 291
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 291 retained time points MINUS 6 regressors ==> 285 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 132693 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r06+tlrc.BRIK
++ ===== clock time = 4s 491ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r06 rm.det_pcin_r06+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r06.1D -infile rm.ROIPC.FSvent.r06_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 06 6 -infile - -write ROIPC.FSvent.r06.1D
end
3dDeconvolve -input pb05.sub-S13.r01.scale+tlrc.HEAD pb05.sub-S13.r02.scale+tlrc.HEAD pb05.sub-S13.r03.scale+tlrc.HEAD pb05.sub-S13.r04.scale+tlrc.HEAD pb05.sub-S13.r05.scale+tlrc.HEAD pb05.sub-S13.r06.scale+tlrc.HEAD -censor censor_sub-S13_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.r01.1D ROIPC.FSvent.r01 -ortvec ROIPC.FSvent.r02.1D ROIPC.FSvent.r02 -ortvec ROIPC.FSvent.r03.1D ROIPC.FSvent.r03 -ortvec ROIPC.FSvent.r04.1D ROIPC.FSvent.r04 -ortvec ROIPC.FSvent.r05.1D ROIPC.FSvent.r05 -ortvec ROIPC.FSvent.r06.1D ROIPC.FSvent.r06 -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_demean.r04.1D mot_demean_r04 -ortvec mot_demean.r05.1D mot_demean_r05 -ortvec mot_demean.r06.1D mot_demean_r06 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -ortvec mot_deriv.r04.1D mot_deriv_r04 -ortvec mot_deriv.r05.1D mot_deriv_r05 -ortvec mot_deriv.r06.1D mot_deriv_r06 -polort 5 -num_stimts 0 -jobs 32 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-S13 -errts errts.sub-S13 -x1D_stop -cbucket all_betas.sub-S13 -bucket stats.sub-S13
++ 3dDeconvolve extending num_stimts from 0 to 1506 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 412 824 1119 1531 1943
++ STAT automask has 178665 voxels (out of 311296 = 57.4%)
++ Skipping check for initial transients
[7m*+ WARNING:[0m Input polort=5; Longest run=824.0 s; Recommended minimum polort=6
++ Number of time points: 2238 (before censor) ; 2189 (after)
 + Number of parameters:  1542 [1542 baseline ; 0 signal]
++ total shared memory needed = 9,414,836,224 bytes (about 9.4 billion)
++ mmap() memory allocated: 9,414,836,224 bytes (about 9.4 billion)
++ Memory required for output bricks = 9,414,836,224 bytes (about 9.4 billion)
** WARNING: in memory plot exceeds 1163231 elements!
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.sub-S13.r01.scale+tlrc.HEAD pb05.sub-S13.r02.scale+tlrc.HEAD pb05.sub-S13.r03.scale+tlrc.HEAD pb05.sub-S13.r04.scale+tlrc.HEAD pb05.sub-S13.r05.scale+tlrc.HEAD pb05.sub-S13.r06.scale+tlrc.HEAD" \
 -Rbeta all_betas.sub-S13_REML -fout -tout \
 -Rbuck stats.sub-S13_REML -Rvar stats.sub-S13_REMLvar \
 -Rfitts fitts.sub-S13_REML -Rerrts errts.sub-S13_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (2189x1542):  1045.01  ++ OK ++
++ ----- Baseline-only matrix condition [X] (2189x1542):  1045.01  ++ OK ++
++ ----- stim_base-only matrix condition [X] (2189x1506):  753.415  ++ OK ++
++ ----- polort-only matrix condition [X] (2189x36):  1.20988  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb05.sub-S13.r01.scale+tlrc.HEAD pb05.sub-S13.r02.scale+tlrc.HEAD pb05.sub-S13.r03.scale+tlrc.HEAD pb05.sub-S13.r04.scale+tlrc.HEAD pb05.sub-S13.r05.scale+tlrc.HEAD pb05.sub-S13.r06.scale+tlrc.HEAD -censor censor_sub-S13_combined_2.1D -cenmode NTRP -ort X.nocensor.xmat.1D -prefix errts.sub-S13.tproject
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 6 input dataset names
++ Auto-catenated dataset has 6 runs
++ input time points = 2238 ; censored = 49 ; remaining = 2189
++ Setting up regressors
++ 6 Blocks * 1 polynomials -- 6 polort regressors
 + -- 1542 other fixed ort regressors
++ 2189 retained time points MINUS 1548 regressors ==> 641 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
++ THD_dset_to_vectim: allocated 2786721792 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 132693 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.sub-S13.tproject+tlrc.BRIK
++ ===== clock time = 5m 53s 662ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
