echo auto-generated by afni_proc.py, Mon Nov 16 13:26:35 2020
auto-generated by afni_proc.py, Mon Nov 16 13:26:35 2020
echo (version 7.12, April 14, 2020)
(version 7.12, April 14, 2020)
echo execution started: `date`
date
execution started: Mon Nov 16 14:01:35 EST 2020
afni -ver
Precompiled binary linux_centos_7_64: Nov 12 2020 (Version AFNI_20.3.02 'Vespasian')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   12 Nov 2020
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-S18
endif
set output_dir = /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI
if ( -d /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/stimuli
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D01_Anatomical/anatSS.sub-S18.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/anatSS.sub-S18
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D01_Anatomical/anatUAC.sub-S18.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/copy_af_anat_w_skull
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S18/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S18/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S18/SUMA/fs_ap_latvent.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S18/SUMA/fs_ap_wm.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D01_Anatomical/anatQQ.sub-S18.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/anatQQ.sub-S18
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D01_Anatomical/anatQQ.sub-S18.aff12.1D /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/anatQQ.sub-S18.aff12.1D
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D01_Anatomical/anatQQ.sub-S18_WARP.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/anatQQ.sub-S18_WARP.nii
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/pb00.sub-S18.r01.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D00_OriginalData/sub-S18_SleepAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.8 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/pb00.sub-S18.r02.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D00_OriginalData/sub-S18_SleepDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/pb00.sub-S18.r03.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D00_OriginalData/sub-S18_SleepRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/pb00.sub-S18.r04.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D00_OriginalData/sub-S18_WakeAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/pb00.sub-S18.r05.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D00_OriginalData/sub-S18_WakeDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI/pb00.sub-S18.r06.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D00_OriginalData/sub-S18_WakeRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
set tr_counts = ( 412 412 295 412 412 295 )
cd /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S18/D02_Preproc_fMRI
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.sub-S18.r01.tcat+orig.HEAD pb00.sub-S18.r02.tcat+orig.HEAD pb00.sub-S18.r03.tcat+orig.HEAD pb00.sub-S18.r04.tcat+orig.HEAD pb00.sub-S18.r05.tcat+orig.HEAD pb00.sub-S18.r06.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 11.697636 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r01.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r01.automask+orig.BRIK is 11.697636 degrees from plumb.

-- running correlation on dataset pb00.sub-S18.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 11.697636 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r01+orig.BRIK is 11.697636 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r01+orig.BRIK is 11.697636 degrees from plumb.
++ Oblique dataset:./epi.r01+orig.BRIK is 11.697636 degrees from plumb.
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 11.697636 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r02.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r02.automask+orig.BRIK is 11.697636 degrees from plumb.

-- running correlation on dataset pb00.sub-S18.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 11.697636 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r02+orig.BRIK is 11.697636 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r02+orig.BRIK is 11.697636 degrees from plumb.
++ Oblique dataset:./epi.r02+orig.BRIK is 11.697636 degrees from plumb.
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 11.697636 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r03.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r03.automask+orig.BRIK is 11.697636 degrees from plumb.

-- running correlation on dataset pb00.sub-S18.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 11.697636 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r03+orig.BRIK is 11.697636 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r03+orig.BRIK is 11.697636 degrees from plumb.
++ Oblique dataset:./epi.r03+orig.BRIK is 11.697636 degrees from plumb.
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 12.303345 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r04.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r04.automask+orig.BRIK is 12.303345 degrees from plumb.

-- running correlation on dataset pb00.sub-S18.r04.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 12.303345 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r04+orig.BRIK is 12.303345 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r04+orig.BRIK is 12.303345 degrees from plumb.
++ Oblique dataset:./epi.r04+orig.BRIK is 12.303345 degrees from plumb.
++ Wrote dataset: ./radcor.20.r04.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 12.303345 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r05.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r05.automask+orig.BRIK is 12.303345 degrees from plumb.

-- running correlation on dataset pb00.sub-S18.r05.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 12.303345 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r05+orig.BRIK is 12.303345 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r05+orig.BRIK is 12.303345 degrees from plumb.
++ Oblique dataset:./epi.r05+orig.BRIK is 12.303345 degrees from plumb.
++ Wrote dataset: ./radcor.20.r05.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 12.303345 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r06.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r06.automask+orig.BRIK is 12.303345 degrees from plumb.

-- running correlation on dataset pb00.sub-S18.r06.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 12.303345 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r06+orig.BRIK is 12.303345 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r06+orig.BRIK is 12.303345 degrees from plumb.
++ Oblique dataset:./epi.r06+orig.BRIK is 12.303345 degrees from plumb.
++ Wrote dataset: ./radcor.20.r06.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S18.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r01.tcat+orig.BRIK is 11.697636 degrees from plumb.
++ 39560 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S18.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r02.tcat+orig.BRIK is 11.697636 degrees from plumb.
++ 39803 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S18.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r03.tcat+orig.BRIK is 11.697636 degrees from plumb.
++ 39682 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S18.r04.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r04.tcat+orig.BRIK is 12.303345 degrees from plumb.
++ 39875 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S18.r05.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r05.tcat+orig.BRIK is 12.303345 degrees from plumb.
++ 39858 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S18.r06.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r06.tcat+orig.BRIK is 12.303345 degrees from plumb.
++ 39822 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dDespike -NEW -nomask -prefix pb01.sub-S18.r01.despike pb00.sub-S18.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r01.tcat+orig.BRIK is 11.697636 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S18.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #3
++ start OpenMP thread #10
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #7
++ start OpenMP thread #14
++ start OpenMP thread #5
++ start OpenMP thread #11
++ start OpenMP thread #12
++ start OpenMP thread #9
++ start OpenMP thread #6
........................................................
++ Elapsed despike time =  1s 27ms

++ FINAL: 53157888 data points, 2358812 edits [4.437%], 402609 big edits [0.757%]
++ Output dataset ./pb01.sub-S18.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S18.r02.despike pb00.sub-S18.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r02.tcat+orig.BRIK is 11.697636 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S18.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #6
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #5
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #11
++ start OpenMP thread #10
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #14
++ start OpenMP thread #3
++ start OpenMP thread #7
++ start OpenMP thread #2
........................................................
++ Elapsed despike time =  1s 69ms

++ FINAL: 53157888 data points, 1936702 edits [3.643%], 115703 big edits [0.218%]
++ Output dataset ./pb01.sub-S18.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S18.r03.despike pb00.sub-S18.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r03.tcat+orig.BRIK is 11.697636 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S18.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #10
++ start OpenMP thread #7
++ start OpenMP thread #14
++ start OpenMP thread #13
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #4
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #11
........................................................
++ Elapsed despike time =  679ms

++ FINAL: 38062080 data points, 1375409 edits [3.614%], 80813 big edits [0.212%]
++ Output dataset ./pb01.sub-S18.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S18.r04.despike pb00.sub-S18.r04.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r04.tcat+orig.BRIK is 12.303345 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S18.r04.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #1
++ start OpenMP thread #6
++ start OpenMP thread #5
++ start OpenMP thread #4
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #7
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #3
++ start OpenMP thread #14
........................................................
++ Elapsed despike time =  1s 19ms

++ FINAL: 53157888 data points, 1926745 edits [3.625%], 99698 big edits [0.188%]
++ Output dataset ./pb01.sub-S18.r04.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S18.r05.despike pb00.sub-S18.r05.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r05.tcat+orig.BRIK is 12.303345 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S18.r05.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #6
++ start OpenMP thread #3
++ start OpenMP thread #10
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #13
++ start OpenMP thread #8
++ start OpenMP thread #4
++ start OpenMP thread #14
++ start OpenMP thread #7
++ start OpenMP thread #5
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #11
........................................................
++ Elapsed despike time =  1s 69ms

++ FINAL: 53157888 data points, 1831024 edits [3.445%], 75037 big edits [0.141%]
++ Output dataset ./pb01.sub-S18.r05.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S18.r06.despike pb00.sub-S18.r06.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S18.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S18.r06.tcat+orig.BRIK is 12.303345 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S18.r06.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #7
++ start OpenMP thread #14
++ start OpenMP thread #9
++ start OpenMP thread #12
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #8
++ start OpenMP thread #3
++ start OpenMP thread #13
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  670ms

++ FINAL: 38062080 data points, 1376459 edits [3.616%], 69317 big edits [0.182%]
++ Output dataset ./pb01.sub-S18.r06.despike+orig.BRIK
end
foreach run ( 01 02 03 04 05 06 )
3dTshift -tzero 0 -quintic -prefix pb02.sub-S18.r01.tshift pb01.sub-S18.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S18.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S18.r01.despike+orig.BRIK is 11.697636 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S18.r02.tshift pb01.sub-S18.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S18.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S18.r02.despike+orig.BRIK is 11.697636 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S18.r03.tshift pb01.sub-S18.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S18.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S18.r03.despike+orig.BRIK is 11.697636 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S18.r04.tshift pb01.sub-S18.r04.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S18.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S18.r04.despike+orig.BRIK is 12.303345 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S18.r05.tshift pb01.sub-S18.r05.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S18.r05.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S18.r05.despike+orig.BRIK is 12.303345 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S18.r06.tshift pb01.sub-S18.r06.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S18.r06.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S18.r06.despike+orig.BRIK is 12.303345 degrees from plumb.
end
3dbucket -prefix vr_base pb02.sub-S18.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
align_epi_anat.py -anat2epi -anat anatSS.sub-S18+orig -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S18+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S18*
#Script is running (command trimmed):
  3dcopy ./anatSS.sub-S18+orig ./anatSS.sub-S18_unflipped+orig
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#Script is running (command trimmed):
  3dinfo ./anatSS.sub-S18_unflipped+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D02_Preproc_fMRI/anatSS.sub-S18_unflipped+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D02_Preproc_fMRI/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S18_unflipped+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./anatSS.sub-S18_unflipped_ob -newgrid 1.000000 ./anatSS.sub-S18_unflipped+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./anatSS.sub-S18_unflipped_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./anatSS.sub-S18_unflipped_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 11.697636 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 338.460999
 + Used gradual clip level = 324.672302 .. 364.258636
 + Number voxels above clip level = 40297
 + Clustering voxels ...
 + Largest cluster has 40076 voxels
 + Clustering voxels ...
 + Largest cluster has 39785 voxels
 + Filled   319 voxels in small holes; now have 40104 voxels
 + Clustering voxels ...
 + Largest cluster has 40104 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 90968 voxels
 + Mask now has 40104 voxels
++ 40104 voxels in the mask [out of 131072: 30.60%]
++ first  10 x-planes are zero [from R]
++ last   11 x-planes are zero [from L]
++ first   2 y-planes are zero [from P]
++ last    4 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_ts_ns+orig
#++ Applying threshold of 848.313538 on /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S18/D02_Preproc_fMRI/vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_ts_ns_wt -a ./vr_base_ts_ns+orig -expr 'min(1,(a/848.313538))'
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./anatSS.sub-S18_unflipped_ob_al_junk_wtal -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S18_unflipped_ob+orig -prefix ./anatSS.sub-S18_unflipped_ob_temp_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S18_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 11.697636 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 11.697636 degrees from plumb.
++ Source dataset: ./anatSS.sub-S18_unflipped_ob+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1457596 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 40104 voxels [17.6%] in weight mask
++ Output dataset ./anatSS.sub-S18_unflipped_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 40104
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.282 35.751 22.057 (index)
 + source center of mass = 146.148 163.826 188.684 (index)
 + source-target CM = 0.599 3.197 -2.464 (xyz)
 + estimated center of mass shifts = 0.599 3.197 -2.464
++ shift param auto-range: -60.1..61.3 -67.1..73.5 -59.0..54.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.400970 .. 10.599030  center = 0.599030
 + Range param#2 [y-shift] = -6.803356 .. 13.196644  center = 3.196644
 + Range param#3 [z-shift] = -12.464211 .. 7.535789  center = -2.464211
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.400970 .. 40.599030  center = 0.599030
 + Range param#2 [y-shift] = -36.803356 .. 43.196644  center = 3.196644
 + Range param#3 [z-shift] = -42.464211 .. 37.535789  center = -2.464211
 + 12 free parameters
++ Normalized convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -39.401 ..   40.599
 +       y-shift =  -36.803 ..   43.197
 +       z-shift =  -42.464 ..   37.536
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1457596 [out of 29048140] voxels
 + base mask has 53464 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - copying weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 267.767 .. 1031.24; base clip 231.744 .. 872.389
 +  - versus source range 0.372363 .. 938.872; base range 0 .. 1071.36
 + 36011 total points stored in 332 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o++.+-.-++-.+.-+$.o + - best 45 costs found:
    0 v= 0.448832:   0.60   3.20  -2.46   0.00   0.00   0.00  [grid]
    1 v= 0.675915: -31.89 -11.50 -14.27 -11.16  -9.40  34.39  [rand]
    2 v= 0.695557:  13.93  16.53 -15.80  15.00  15.00  15.00  [grid]
    3 v= 0.711995:  13.93 -10.14  10.87 -15.00 -15.00 -30.00  [grid]
    4 v= 0.725795:  27.27 -10.14  10.87  15.00 -15.00 -15.00  [grid]
    5 v= 0.750072: -15.38 -16.30  -8.19 -20.53  -3.14  10.08  [rand]
    6 v= 0.750997: -12.73 -10.14  10.87  15.00 -15.00  30.00  [grid]
    7 v= 0.752756:  27.27  16.53 -29.13  15.00  15.00 -30.00  [grid]
    8 v= 0.758285: -17.73 -22.95   3.58  -6.51 -20.18   7.56  [rand]
    9 v= 0.765172: -13.61  -6.26   2.37  15.99 -13.53  29.93  [rand]
   10 v= 0.786800:  13.93 -23.47  10.87 -15.00 -15.00 -30.00  [grid]
   11 v= 0.787646: -12.73  16.53 -15.80 -15.00  15.00 -15.00  [grid]
   12 v= 0.787651:   9.24 -17.24  15.01  25.20 -18.50  13.54  [rand]
   13 v= 0.787989: -12.73 -23.47  10.87 -30.00 -15.00 -15.00  [grid]
   14 v= 0.789331: -26.07 -10.14  10.87 -15.00 -15.00  15.00  [grid]
   15 v= 0.794822:  27.27  16.53 -15.80  15.00  15.00 -15.00  [grid]
   16 v= 0.797252: -26.07  16.53 -29.13 -15.00  15.00  30.00  [grid]
   17 v= 0.800598:  -8.04 -17.24  15.01 -25.20 -18.50 -13.54  [rand]
   18 v= 0.807069:  33.08 -11.50 -14.27  11.16  -9.40 -34.39  [rand]
   19 v= 0.807557:  18.93 -22.95   3.58   6.51 -20.18  -7.56  [rand]
   20 v= 0.810450:  13.93  16.53 -29.13  15.00  30.00  15.00  [grid]
   21 v= 0.812984:  34.93 -13.39 -11.07  16.34  -8.64 -40.54  [rand]
   22 v= 0.838641:  13.93 -10.14  10.87  30.00 -15.00  15.00  [grid]
   23 v= 0.841491:  14.80  -6.26   2.37 -15.99 -13.53 -29.93  [rand]
   24 v= 0.851838: -12.73  16.53 -29.13 -15.00  30.00 -15.00  [grid]
   25 v= 0.856468: -15.38 -16.30   3.26 -20.53  -3.14 -10.08  [rand]
   26 v= 0.858441:  16.82  17.31 -37.60  15.74  34.09  -7.78  [rand]
   27 v= 0.862603:  16.82  17.31 -37.60  15.74  34.09   7.78  [rand]
   28 v= 0.869751:  27.27  16.53 -29.13  15.00  15.00 -15.00  [grid]
   29 v= 0.871894: -33.73 -13.39 -11.07 -16.34  -8.64  40.54  [rand]
   30 v= 0.873222:  -9.73 -25.62  12.54 -30.67 -17.79 -20.52  [rand]
   31 v= 0.886185: -26.07  16.53 -29.13 -15.00  15.00  15.00  [grid]
   32 v= 0.888635:  13.93  16.53 -15.80  15.00  15.00 -15.00  [grid]
   33 v= 0.891567: -15.38 -16.30  -8.19 -20.53   3.14  10.08  [rand]
   34 v= 0.891729:  13.93 -23.47  10.87  30.00 -15.00  15.00  [grid]
   35 v= 0.891879:  13.93  16.53 -29.13  15.00  30.00  30.00  [grid]
   36 v= 0.893608:  13.93 -23.47  10.87 -30.00 -15.00 -30.00  [grid]
   37 v= 0.895302:  26.91 -22.76  15.33 -15.82 -17.65 -37.25  [rand]
   38 v= 0.900151: -15.62  17.31 -37.60 -15.74  34.09   7.78  [rand]
   39 v= 0.905172: -26.07 -23.47 -15.80 -15.00 -15.00  30.00  [grid]
   40 v= 0.909297: -15.54  12.66 -26.81 -20.99  15.73  16.09  [rand]
   41 v= 0.910378: -15.38 -16.30   3.26 -20.53  -3.14  10.08  [rand]
   42 v= 0.911652:  27.27 -23.47  10.87  15.00 -30.00 -15.00  [grid]
   43 v= 0.913526: -12.73  16.53 -29.13 -15.00  15.00  15.00  [grid]
   44 v= 0.916018:  15.89  24.08 -32.85  14.56  29.40  15.92  [rand]
 + - A little optimization:*[#8004=0.321089] *[#8006=0.193988] *[#8009=0.160293] *[#8012=0.106774] *[#8013=-0.197365] *[#8017=-0.197756] *[#8018=-0.235215] *[#8020=-0.244859] *[#8021=-0.320819] *[#8026=-0.330052] *[#8031=-0.338594] .............................................
 + - costs of the above after a little optimization:
  * 0 v=-0.338594:   0.12  -0.68  -0.56  -0.24   0.69   0.74  [grid]
    1 v= 0.653969: -30.48  -8.76 -14.64  -9.95  -7.71  33.13  [rand]
    2 v= 0.581754:   9.94  13.30 -16.95   8.87  13.11   8.23  [grid]
    3 v= 0.609986:  13.36 -11.91   2.28 -12.56  -9.57 -28.83  [grid]
    4 v= 0.587403:  23.21  -6.67   7.33  12.52  -8.29 -11.38  [grid]
    5 v= 0.596167: -18.96 -13.09  -4.12 -17.26  -3.85  10.47  [rand]
    6 v= 0.661871: -11.96 -12.28   6.95  12.82 -14.57  27.00  [grid]
    7 v= 0.696285:  27.03  12.47 -27.28  14.55  14.72 -29.34  [grid]
    8 v= 0.031146:  -1.93  -3.90   1.72  -1.07  -1.24   1.85  [rand]
    9 v= 0.623407: -12.03  -7.73   0.85  10.36  -9.14  27.59  [rand]
   10 v=-0.196961:   0.27  -2.04   1.59  -0.59  -1.33   0.22  [grid]
   11 v= 0.378598:  -0.46   6.43 -11.47  -1.48  10.79   0.93  [grid]
   12 v= 0.233482:   4.61  -2.96   4.23   2.41  -2.81   1.16  [rand]
   13 v= 0.670996:  -6.67 -18.77   9.20 -22.88 -12.29 -10.39  [grid]
   14 v= 0.293768:  -6.69   1.49  -0.15  -3.73   0.98   5.66  [grid]
   15 v= 0.595649:  22.49   9.53 -16.82  12.66  12.31 -11.44  [grid]
   16 v= 0.601582: -17.25   6.94 -25.33  -8.96  12.68  24.42  [grid]
   17 v= 0.208437:   3.37  -3.73   4.38  -0.30  -3.45  -2.78  [rand]
   18 v= 0.533072:  12.02   0.85  -5.53   1.59   2.92 -17.81  [rand]
   19 v= 0.273272:   7.11  -0.65   1.68   3.96  -1.02  -3.00  [rand]
   20 v= 0.703409:  11.86  15.00 -29.04  14.80  23.78  13.95  [grid]
   21 v= 0.676712:  35.87  -7.81  -9.94  10.80  -8.01 -37.90  [rand]
   22 v= 0.674816:  13.36 -10.56   8.04  23.25 -10.34   9.59  [grid]
   23 v= 0.601532:  12.75  -7.87   2.35 -13.34  -5.64 -30.41  [rand]
   24 v= 0.713190: -10.89  14.00 -31.00 -12.37  27.91   1.35  [grid]
   25 v=-0.075952:  -2.85  -1.76   0.33  -2.85  -0.41   0.12  [rand]
   26 v= 0.698932:  14.88  17.78 -32.37  12.03  26.61  -4.25  [rand]
   27 v= 0.570915:   7.12   5.30 -13.59  10.75  10.67   7.46  [rand]
   28 v= 0.478338:  16.87   3.08  -7.30   7.52   5.74  -7.35  [grid]
   29 v= 0.613609: -17.16  -6.12 -11.21   4.97  -3.53  31.69  [rand]
   30 v= 0.754847:  -5.35 -24.03  11.50 -29.07 -17.20 -19.01  [rand]
   31 v= 0.609745: -19.04   9.55 -25.56 -11.51  14.41  19.66  [grid]
   32 v= 0.365460:   4.82   3.42  -9.37   3.62   7.36   2.61  [grid]
   33 v= 0.286348:  -7.13  -2.40   3.92  -3.82  -2.82   4.85  [rand]
   34 v=-0.215668:  -2.01  -1.25  -1.56  -1.94   1.05   0.80  [grid]
   35 v= 0.725549:   7.01  14.13 -28.44  15.08  24.72  30.63  [grid]
   36 v= 0.697162:  12.72 -22.52   9.25 -22.35 -16.62 -31.76  [grid]
   37 v= 0.599469:  18.29 -12.49   2.05  -7.28 -11.59 -25.84  [rand]
   38 v= 0.741786: -11.78  13.07 -35.80 -12.98  29.15  11.30  [rand]
   39 v= 0.604353: -26.58 -13.29  -3.98 -15.21  -9.18  17.32  [grid]
   40 v= 0.553498: -15.82   7.02 -19.17  -8.26  12.31  13.58  [rand]
   41 v= 0.195176:  -5.53  -1.69   2.53  -2.07  -1.44   5.11  [rand]
   42 v= 0.527449:  15.01 -11.86   2.94   5.03 -10.98 -10.33  [grid]
   43 v= 0.589983: -13.88  11.40 -26.03  -8.84  16.50  17.83  [grid]
   44 v= 0.682620:  14.22  13.02 -23.62  19.37  20.90   7.80  [rand]
 + - save # 0 for possible use in twobest
 + - skip #34 for twobest: too close to set # 0
 + - skip #10 for twobest: too close to set # 0
 + - skip #25 for twobest: too close to set # 0
 + - skip # 8 for twobest: too close to set # 0
 + - skip #41 for twobest: too close to set # 8
 + - skip #17 for twobest: too close to set #10
 + - skip #12 for twobest: too close to set #17
 + - skip #19 for twobest: too close to set #17
 + - skip #33 for twobest: too close to set #41
 + - skip #14 for twobest: too close to set #41
 + - save #32 for possible use in twobest
 + - save #11 for possible use in twobest
 + - save #28 for possible use in twobest
 + - save #42 for possible use in twobest
 + - save #18 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save #27 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - save # 4 for possible use in twobest
 + - save #43 for possible use in twobest
 + - save #15 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save #23 for possible use in twobest
 + - save #16 for possible use in twobest
 + - save #39 for possible use in twobest
 + - save #31 for possible use in twobest
 + - save # 3 for possible use in twobest
 + - save #29 for possible use in twobest
 + - save # 9 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 271.131 .. 1043.91; base clip 232.433 .. 890.701
 +  - versus source range 0.0303573 .. 939; base range 0 .. 1073.41
 + 35595 total points stored in 346 'RHDD(12.342)' bloks
*[#10754=-0.346074] *[#10759=-0.346583] *[#10761=-0.355134] *[#10762=-0.359419] *[#10765=-0.362224] *[#10766=-0.363402] *[#10775=-0.370945] *[#10776=-0.372563] *[#10778=-0.376364] *[#10779=-0.376681] *[#10785=-0.379655] *[#10790=-0.381335] *[#10791=-0.387541] *[#10792=-0.393136] *[#10795=-0.394697] *[#10798=-0.395803] *[#10801=-0.402229] *[#10802=-0.404901] *[#10804=-0.405123] *[#10805=-0.408884] *[#10806=-0.411867] *[#10807=-0.412261] *[#10808=-0.413269] *[#10811=-0.419432] *[#10812=-0.420792] *[#10817=-0.421444] *[#10818=-0.421967] *[#10819=-0.422517] 
 + - param set #1 has cost=-0.422517
 + -- Parameters = -0.1726 -0.2358 -0.1905 -0.5552 0.1225 0.9044 0.9967 1.0142 0.9904 0.0132 0.0009 0.0002
 + - param set #2 has cost=-0.327644
 + -- Parameters = 0.1953 -0.3963 -1.2918 -0.2863 1.1883 1.2572 0.9909 1.0073 0.9738 0.0110 -0.0049 0.0073
 + - param set #3 has cost=-0.276026
 + -- Parameters = -0.7322 0.7557 -0.0652 -0.9313 1.2943 0.7671 0.9942 1.0332 0.9985 0.0195 0.0039 0.0287
 + - param set #4 has cost=0.071338
 + -- Parameters = 2.2661 -2.9881 -0.9033 1.0777 0.3559 -1.4238 1.0207 0.9637 0.9817 -0.0099 0.0193 -0.0015
 + - param set #5 has cost=0.333209
 + -- Parameters = 5.7143 -6.6069 4.8097 0.5995 -3.2858 -4.3211 0.9920 0.9863 1.0003 0.0008 0.0041 -0.0057
 + - param set #6 has cost=0.217956
 + -- Parameters = 4.6039 0.7549 -4.3723 1.0827 2.2788 -3.1760 0.9849 1.0154 0.9784 0.0075 -0.0000 -0.0137
 + - param set #7 has cost=0.484965
 + -- Parameters = -7.1502 3.6972 -18.7104 -5.4605 14.9146 -0.6718 0.9918 0.9739 0.9673 -0.0120 -0.0078 0.0155
 + - param set #8 has cost=0.390546
 + -- Parameters = -0.3976 0.5923 -13.8040 -1.1757 8.6859 -0.6238 0.9869 0.9989 0.9954 0.0118 -0.0050 -0.0016
 + - param set #9 has cost=0.442520
 + -- Parameters = 4.9496 7.3968 -16.6286 2.8752 13.2253 0.8772 0.9809 0.9925 0.9715 0.0092 -0.0043 0.0031
 + - param set #10 has cost=0.476358
 + -- Parameters = 17.7270 -2.9182 1.9997 7.0310 -3.6061 -9.1021 0.9867 1.0142 0.9591 -0.0034 0.0179 -0.0198
 + - param set #11 has cost=0.499379
 + -- Parameters = -9.7265 1.2604 -23.9590 -6.6291 15.8111 3.0918 0.9622 0.9630 0.9876 0.0132 -0.0229 -0.0095
 + - param set #12 has cost=-0.405895
 + -- Parameters = -0.4436 -0.3483 -0.2112 -0.9067 0.1841 0.5489 1.0031 1.0104 0.9958 0.0021 0.0026 -0.0021
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0496 
 + --- dist(#3,#1) = 0.0454 
 + --- dist(#4,#1) = 0.128 
 + --- dist(#5,#1) = 0.138 
 + --- dist(#6,#1) = 0.0626 
 + --- dist(#7,#1) = 0.0796 
 + --- dist(#8,#1) = 0.17 
 + --- dist(#9,#1) = 0.205 
 + --- dist(#10,#1) = 0.224 
 + --- dist(#11,#1) = 0.231 
 + --- dist(#12,#1) = 0.297 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 274.525 .. 1056.49; base clip 233.018 .. 910.363
 +  - versus source range 0.000249999 .. 939.026; base range 0 .. 1075.54
 + 34587 total points stored in 338 'RHDD(12.2051)' bloks
 + - param set #1 has cost=-0.413235
 + -- Parameters = -0.0697 -0.0652 -0.0368 -0.4887 0.0979 0.5419 1.0042 1.0162 0.9914 0.0116 0.0024 0.0023
 + - param set #2 has cost=-0.421016
 + -- Parameters = -0.4258 0.3039 0.0530 -0.8284 0.0357 0.5917 1.0062 1.0213 0.9871 0.0019 -0.0019 0.0040
 + - param set #3 has cost=-0.405864
 + -- Parameters = -0.3022 0.1234 -0.2615 -0.7093 0.4483 0.8108 0.9971 1.0184 0.9707 0.0095 -0.0067 0.0136
 + - param set #4 has cost=-0.400082
 + -- Parameters = -0.3221 0.4443 0.4138 -0.6902 1.0137 0.8648 1.0031 1.0222 0.9885 0.0067 -0.0099 0.0261
 + - param set #5 has cost=-0.343321
 + -- Parameters = -0.2571 -0.4692 -0.1532 -0.9651 -0.5127 -0.1600 1.0149 1.0128 0.9823 0.0001 0.0237 -0.0078
 + - param set #6 has cost=-0.153437
 + -- Parameters = 0.3905 0.6693 -3.0871 -0.4544 1.8542 -0.1375 1.0064 1.0236 0.9741 0.0197 0.0183 0.0009
 + - param set #7 has cost=-0.351253
 + -- Parameters = -0.1202 -0.3834 -0.1082 -0.7389 0.0106 0.2236 0.9932 1.0083 0.9983 0.0047 0.0115 -0.0027
 + - param set #8 has cost=0.296711
 + -- Parameters = -1.9965 -1.7360 -9.8510 -1.8285 6.5975 0.4264 0.9912 0.9714 0.9477 -0.0290 -0.0028 0.0169
 + - param set #9 has cost=0.403762
 + -- Parameters = 3.6544 7.4951 -9.8065 1.8110 13.2932 -1.1546 0.9993 0.9744 0.9853 0.0256 0.0114 0.0645
 + - param set #10 has cost=0.186950
 + -- Parameters = 3.5071 -5.0480 -1.2885 1.6358 -3.3945 -1.6546 1.0658 0.9760 0.9487 0.0041 0.0254 -0.0601
 + - param set #11 has cost=0.455492
 + -- Parameters = -5.0550 4.6198 -16.4196 -3.6219 13.1127 1.5068 1.0029 0.9932 0.9848 -0.0150 0.0001 0.0322
 + - param set #12 has cost=0.496284
 + -- Parameters = -8.9018 -0.9366 -22.1405 -6.4848 14.1620 3.4514 0.9622 0.9577 0.9876 0.0153 -0.0195 -0.0017
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0436 
 + --- dist(#3,#1) = 0.0446 
 + --- dist(#4,#1) = 0.0997 
 + --- dist(#5,#1) = 0.0602 
 + --- dist(#6,#1) = 0.115 
 + --- dist(#7,#1) = 0.0909 
 + --- dist(#8,#1) = 0.288 
 + --- dist(#9,#1) = 0.139 
 + --- dist(#10,#1) = 0.273 
 + --- dist(#11,#1) = 0.206 
 + --- dist(#12,#1) = 0.277 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 276.397 .. 1067.53; base clip 233.639 .. 927.704
 +  - versus source range 0 .. 939.027; base range 0 .. 1077.79
 + 35581 total points stored in 363 'RHDD(12.1215)' bloks
 + - param set #1 has cost=-0.356479
 + -- Parameters = -0.2855 0.2086 0.0138 -0.6966 0.0772 0.6175 1.0000 1.0206 0.9864 0.0017 -0.0023 0.0042
 + - param set #2 has cost=-0.350977
 + -- Parameters = -0.0733 0.0732 -0.0721 -0.4855 0.0267 0.5869 1.0028 1.0198 0.9869 0.0138 0.0003 0.0015
 + - param set #3 has cost=-0.354893
 + -- Parameters = -0.2414 0.1767 0.0126 -0.6256 0.3035 0.7092 1.0021 1.0188 0.9793 0.0046 -0.0050 0.0112
 + - param set #4 has cost=-0.341154
 + -- Parameters = -0.3349 0.4308 0.3566 -0.6562 0.8855 0.8524 1.0018 1.0204 0.9861 0.0056 -0.0093 0.0234
 + - param set #5 has cost=-0.346507
 + -- Parameters = -0.1159 0.0241 -0.0214 -0.6674 -0.3338 0.3145 1.0026 1.0198 0.9880 0.0055 0.0093 -0.0043
 + - param set #6 has cost=-0.331029
 + -- Parameters = -0.2042 -0.1671 -0.1763 -0.7805 -0.2027 0.1513 1.0041 1.0158 0.9842 0.0035 0.0163 -0.0027
 + - param set #7 has cost=-0.323010
 + -- Parameters = -0.1270 0.5387 0.0009 -0.7854 0.6249 -0.0969 1.0009 1.0221 0.9877 0.0001 0.0199 0.0145
 + - param set #8 has cost=-0.006345
 + -- Parameters = 1.5094 -1.8438 -1.1616 0.5287 -2.4835 -0.5963 1.0396 1.0034 0.9740 0.0238 0.0143 -0.0595
 + - param set #9 has cost=0.170130
 + -- Parameters = -2.5964 -2.7733 -3.8659 -2.1944 3.5076 0.2782 0.9798 0.9785 0.9999 -0.0344 -0.0010 0.0242
 + - param set #10 has cost=0.175121
 + -- Parameters = 1.3186 2.3300 -1.6808 -0.2601 5.2096 -1.8470 1.0067 1.0064 0.9095 -0.0002 0.0401 0.0802
 + - param set #11 has cost=0.442727
 + -- Parameters = 0.7939 3.3559 -13.1765 -0.8451 12.7021 -1.3886 1.0014 0.9770 1.0144 -0.0184 0.0129 0.0537
 + - param set #12 has cost=0.369794
 + -- Parameters = -4.5670 -3.5971 -8.5911 -3.8878 5.7321 0.4072 0.9637 0.9461 0.9796 0.0014 -0.0244 -0.0111
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0315 
 + --- dist(#3,#1) = 0.054 
 + --- dist(#4,#1) = 0.0524 
 + --- dist(#5,#1) = 0.0867 
 + --- dist(#6,#1) = 0.0837 
 + --- dist(#7,#1) = 0.1 
 + --- dist(#8,#1) = 0.286 
 + --- dist(#9,#1) = 0.163 
 + --- dist(#10,#1) = 0.342 
 + --- dist(#11,#1) = 0.203 
 + --- dist(#12,#1) = 0.223 
 + - Total coarse refinement net CPU time = 0.0 s; 3514 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 280.712 .. 1083.71; base clip 233.639 .. 927.704
 +  - versus source range 0 .. 939.39; base range 0 .. 1079.06
 + 35432 total points stored in 369 'RHDD(12.0364)' bloks
 + - cost(#1)=-0.295860 *
 + -- Parameters = -0.2855 0.2086 0.0138 -0.6966 0.0772 0.6175 1.0000 1.0206 0.9864 0.0017 -0.0023 0.0042
 + - cost(#2)=-0.296245 *
 + -- Parameters = -0.2414 0.1767 0.0126 -0.6256 0.3035 0.7092 1.0021 1.0188 0.9793 0.0046 -0.0050 0.0112
 + - cost(#3)=-0.291613  
 + -- Parameters = -0.0733 0.0732 -0.0721 -0.4855 0.0267 0.5869 1.0028 1.0198 0.9869 0.0138 0.0003 0.0015
 + - cost(#4)=-0.286395  
 + -- Parameters = -0.1159 0.0241 -0.0214 -0.6674 -0.3338 0.3145 1.0026 1.0198 0.9880 0.0055 0.0093 -0.0043
 + - cost(#5)=-0.282636  
 + -- Parameters = -0.3349 0.4308 0.3566 -0.6562 0.8855 0.8524 1.0018 1.0204 0.9861 0.0056 -0.0093 0.0234
 + - cost(#6)=-0.273868  
 + -- Parameters = -0.2042 -0.1671 -0.1763 -0.7805 -0.2027 0.1513 1.0041 1.0158 0.9842 0.0035 0.0163 -0.0027
 + - cost(#7)=-0.264491  
 + -- Parameters = -0.1270 0.5387 0.0009 -0.7854 0.6249 -0.0969 1.0009 1.0221 0.9877 0.0001 0.0199 0.0145
 + - cost(#8)=0.041946  
 + -- Parameters = 1.5094 -1.8438 -1.1616 0.5287 -2.4835 -0.5963 1.0396 1.0034 0.9740 0.0238 0.0143 -0.0595
 + - cost(#9)=0.192426  
 + -- Parameters = -2.5964 -2.7733 -3.8659 -2.1944 3.5076 0.2782 0.9798 0.9785 0.9999 -0.0344 -0.0010 0.0242
 + - cost(#10)=0.205814  
 + -- Parameters = 1.3186 2.3300 -1.6808 -0.2601 5.2096 -1.8470 1.0067 1.0064 0.9095 -0.0002 0.0401 0.0802
 + - cost(#11)=0.388397  
 + -- Parameters = -4.5670 -3.5971 -8.5911 -3.8878 5.7321 0.4072 0.9637 0.9461 0.9796 0.0014 -0.0244 -0.0111
 + - cost(#12)=0.456506  
 + -- Parameters = 0.7939 3.3559 -13.1765 -0.8451 12.7021 -1.3886 1.0014 0.9770 1.0144 -0.0184 0.0129 0.0537
 + - cost(#13)=0.514726  
 + -- Parameters = 0.5990 3.1966 -2.4642 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.299530 *
 + -- Parameters = -0.2346 0.1672 -0.0375 -0.6223 0.0814 0.6664 1.0028 1.0199 0.9849 0.0054 -0.0029 0.0042
 + - cost(#2)=-0.298744  
 + -- Parameters = -0.2640 0.1612 0.0045 -0.6321 0.2714 0.7340 1.0030 1.0193 0.9833 0.0054 -0.0050 0.0095
 + - cost(#3)=-0.298540  
 + -- Parameters = -0.1174 0.1604 -0.0099 -0.5248 0.0200 0.6514 1.0024 1.0201 0.9845 0.0091 -0.0027 0.0036
 + - cost(#4)=-0.295768  
 + -- Parameters = -0.1952 0.0562 -0.0800 -0.6484 -0.2580 0.4712 1.0032 1.0200 0.9841 0.0048 0.0032 -0.0017
 + - cost(#5)=-0.290030  
 + -- Parameters = -0.3271 0.2907 0.0924 -0.6886 0.7880 0.7946 1.0007 1.0194 0.9866 0.0038 -0.0077 0.0187
 + - cost(#6)=-0.287688  
 + -- Parameters = -0.2738 0.0662 -0.1646 -0.7683 -0.2254 0.3073 1.0031 1.0197 0.9826 0.0040 0.0105 -0.0020
 + - cost(#7)=-0.287145  
 + -- Parameters = -0.1746 0.2878 0.1464 -0.6748 0.4099 0.3784 1.0049 1.0210 0.9870 0.0032 0.0085 0.0131
 + - cost(#8)=-0.132319  
 + -- Parameters = 0.4132 -0.9238 -1.1811 -0.1533 -2.3786 0.2033 0.9991 1.0179 0.9671 0.0245 0.0042 -0.0547
 + - cost(#9)=-0.141792  
 + -- Parameters = -0.6683 -0.4035 -0.2108 -1.3101 1.9314 0.2091 0.9993 1.0018 0.9841 -0.0340 0.0099 0.0368
 + - cost(#10)=-0.046227  
 + -- Parameters = 0.1680 -0.2303 -0.0253 -0.7565 3.2491 -0.4768 0.9993 0.9994 0.9211 -0.0026 0.0360 0.0840
 + - cost(#11)=0.283324  
 + -- Parameters = -2.7494 -3.5098 -7.5508 -2.4380 4.6490 0.3899 0.9747 0.9557 0.9907 -0.0323 -0.0234 -0.0108
 + - cost(#12)=0.337598  
 + -- Parameters = -0.3375 3.0704 -3.1959 -0.8289 9.3779 0.3931 0.9619 0.9883 1.0197 -0.0145 0.0269 0.1031
 + - cost(#13)=-0.290236  
 + -- Parameters = -0.2060 0.0808 -0.0105 -0.6758 0.2164 0.4523 1.0039 1.0179 0.9928 0.0046 0.0026 0.0046
 + - case #1 is now the best
 + - Initial  cost = -0.299530
 + - Initial fine Parameters = -0.2346 0.1672 -0.0375 -0.6223 0.0814 0.6664 1.0028 1.0199 0.9849 0.0054 -0.0029 0.0042
 + - Finalish cost = -0.299643 ; 125 funcs
 + - ini Finalish Parameters = -0.2408 0.1505 -0.0504 -0.6412 0.0909 0.6676 1.0027 1.0199 0.9848 0.0054 -0.0029 0.0042
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 280.596 .. 1084.04; base clip 233.639 .. 927.704
 +  - versus source range 0 .. 939.39; base range 0 .. 1079.06
*[#15789=-0.822093] *[#15839=-0.822479] *[#15859=-0.822485] *[#15865=-0.822492] *[#15883=-0.822503] *[#15885=-0.822517] *[#15889=-0.822641] *[#15892=-0.822752] *[#15894=-0.82276] *[#15895=-0.822792] *[#15896=-0.822822] *[#15897=-0.822878] *[#15898=-0.8229] *[#15899=-0.822938] *[#15900=-0.822953] *[#15901=-0.822971] *[#15906=-0.822999] *[#15909=-0.823023] *[#15910=-0.823042] *[#15911=-0.823049] *[#15912=-0.823052] *[#15914=-0.823075] *[#15915=-0.823082] *[#15920=-0.823096] *[#15923=-0.823122] *[#15924=-0.823131] *[#15927=-0.823154] *[#15930=-0.823186] *[#15931=-0.823196] *[#15938=-0.823201] *[#15946=-0.823203] *[#15948=-0.823209] *[#15949=-0.823209] *[#15953=-0.823211] *[#15962=-0.823232] *[#15963=-0.823234] *[#15965=-0.823238] *[#15966=-0.823249] *[#15967=-0.823258] *[#15974=-0.823268] *[#15977=-0.823275] *[#15980=-0.823285] *[#15981=-0.823285] *[#15984=-0.823291] *[#15987=-0.823293] *[#15990=-0.823305] *[#15995=-0.823318] *[#16010=-0.82332] *[#16014=-0.823324] *[#16024=-0.823329] *[#16029=-0.823335] *[#16030=-0.823338] *[#16035=-0.82334] *[#16038=-0.823341] *[#16042=-0.823348] *[#16043=-0.82335] *[#16046=-0.823353] *[#16047=-0.823355] *[#16057=-0.823357] *[#16085=-0.823357] *[#16090=-0.823359] *[#16093=-0.823359] *[#16094=-0.823361] *[#16099=-0.823362] *[#16104=-0.823362] *[#16111=-0.823363] *[#16114=-0.823363] *[#16115=-0.823363] *[#16117=-0.823363] *[#16120=-0.823364] *[#16123=-0.823364] *[#16126=-0.823365] *[#16129=-0.823365] *[#16141=-0.823366] *[#16154=-0.823367] *[#16171=-0.823367] 
 + - Final    cost = -0.823367 ; 429 funcs
 + Final fine fit Parameters:
       x-shift= -0.2070   y-shift=  0.2744   z-shift=  0.0284  ...  enorm=  0.3449 mm
       z-angle= -0.6059   x-angle=  0.0349   y-angle=  0.6329  ...  total=  0.8766 deg
       x-scale=  1.0041   y-scale=  1.0224   z-scale=  0.9847  ...  vol3D=  1.0108 = base smaller than source
     y/x-shear=  0.0060 z/x-shear= -0.0028 z/y-shear=  0.0046
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.2070 0.2744 0.0284 -0.6059 0.0349 0.6329 1.0041 1.0224 0.9847 0.0060 -0.0028 0.0046
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S18_unflipped_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S18_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 53.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_anatSS.sub-S18_lr_al_junk -overwrite ./anatSS.sub-S18_unflipped_ob+orig
++ processing ./anatSS.sub-S18_unflipped_ob+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_ts_ns_wt+orig -source ./__tt_anatSS.sub-S18_lr_al_junk+orig -prefix ./anatSS.sub-S18_flip_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S18_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 11.697636 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 11.697636 degrees from plumb.
++ Source dataset: ./__tt_anatSS.sub-S18_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1457596 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 40104 voxels [17.6%] in weight mask
++ Number of points for matching = 40104
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 31.282 35.751 22.057 (index)
 + source center of mass = 142.852 163.826 188.684 (index)
 + source-target CM = -2.698 3.197 -2.464 (xyz)
 + estimated center of mass shifts = -2.698 3.197 -2.464
++ shift param auto-range: -63.4..58.0 -67.1..73.5 -59.0..54.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -12.697693 .. 7.302307  center = -2.697693
 + Range param#2 [y-shift] = -6.803356 .. 13.196644  center = 3.196644
 + Range param#3 [z-shift] = -12.464211 .. 7.535789  center = -2.464211
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -42.697693 .. 37.302307  center = -2.697693
 + Range param#2 [y-shift] = -36.803356 .. 43.196644  center = 3.196644
 + Range param#3 [z-shift] = -42.464211 .. 37.535789  center = -2.464211
 + 12 free parameters
++ Normalized convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -42.698 ..   37.302
 +       y-shift =  -36.803 ..   43.197
 +       z-shift =  -42.464 ..   37.536
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1457596 [out of 29048140] voxels
 + base mask has 53464 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - copying weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 268.464 .. 1031.77; base clip 231.744 .. 872.389
 +  - versus source range 0.372363 .. 938.872; base range 0 .. 1071.36
 + 36011 total points stored in 332 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o++.o++.+-.-++-.++o$.+o + - best 45 costs found:
    0 v= 0.474199:  -2.70   3.20  -2.46   0.00   0.00   0.00  [grid]
    1 v= 0.660889: -35.18 -11.50 -14.27 -11.16  -9.40  34.39  [rand]
    2 v= 0.709521:  10.64 -10.14  10.87 -15.00 -15.00 -30.00  [grid]
    3 v= 0.728898: -21.03 -22.95   3.58  -6.51 -20.18   7.56  [rand]
    4 v= 0.744078:  10.64  16.53 -15.80  15.00  15.00  15.00  [grid]
    5 v= 0.746697: -16.03 -23.47  10.87 -30.00 -15.00 -15.00  [grid]
    6 v= 0.758191: -18.68 -16.30  -8.19 -20.53  -3.14  10.08  [rand]
    7 v= 0.758798:  23.97 -10.14  10.87  15.00 -15.00 -15.00  [grid]
    8 v= 0.760577: -16.03  16.53 -15.80 -15.00  15.00 -15.00  [grid]
    9 v= 0.762468: -16.03 -10.14  10.87  15.00 -15.00  30.00  [grid]
   10 v= 0.767281: -16.90  -6.26   2.37  15.99 -13.53  29.93  [rand]
   11 v= 0.771332: -11.34 -17.24  15.01 -25.20 -18.50 -13.54  [rand]
   12 v= 0.771666:  10.64 -23.47  10.87 -15.00 -15.00 -30.00  [grid]
   13 v= 0.782363: -29.36 -10.14  10.87 -15.00 -15.00  15.00  [grid]
   14 v= 0.802888: -16.03  16.53 -29.13 -15.00  30.00 -15.00  [grid]
   15 v= 0.803040:  23.97  16.53 -29.13  15.00  15.00 -30.00  [grid]
   16 v= 0.803223: -29.36  16.53 -29.13 -15.00  15.00  30.00  [grid]
   17 v= 0.817452: -18.68 -16.30   3.26 -20.53  -3.14 -10.08  [rand]
   18 v= 0.820898:  31.63 -13.39 -11.07  16.34  -8.64 -40.54  [rand]
   19 v= 0.823824:  29.79 -11.50 -14.27  11.16  -9.40 -34.39  [rand]
   20 v= 0.825462:   5.94 -17.24  15.01  25.20 -18.50  13.54  [rand]
   21 v= 0.825869: -13.02 -25.62  12.54 -30.67 -17.79 -20.52  [rand]
   22 v= 0.839514:  15.63 -22.95   3.58   6.51 -20.18  -7.56  [rand]
   23 v= 0.840406:  23.97  16.53 -15.80  15.00  15.00 -15.00  [grid]
   24 v= 0.841379: -37.02 -13.39 -11.07 -16.34  -8.64  40.54  [rand]
   25 v= 0.850941:  11.51  -6.26   2.37 -15.99 -13.53 -29.93  [rand]
   26 v= 0.862886: -29.36  16.53 -29.13 -15.00  15.00  15.00  [grid]
   27 v= 0.872201:  10.64 -10.14  10.87  30.00 -15.00  15.00  [grid]
   28 v= 0.874506:  10.64  16.53 -29.13  15.00  30.00  15.00  [grid]
   29 v= 0.886006: -18.91  17.31 -37.60 -15.74  34.09   7.78  [rand]
   30 v= 0.889690: -18.91  17.31 -37.60 -15.74  34.09  -7.78  [rand]
   31 v= 0.895955: -29.36 -23.47 -15.80 -15.00 -15.00  30.00  [grid]
   32 v= 0.898155: -18.68 -16.30  -8.19 -20.53   3.14  10.08  [rand]
   33 v= 0.901090: -18.84  12.66 -26.81 -20.99  15.73  16.09  [rand]
   34 v= 0.901595:  23.61 -22.76  15.33 -15.82 -17.65 -37.25  [rand]
   35 v= 0.911867:  10.64  16.53 -15.80  15.00  15.00 -15.00  [grid]
   36 v= 0.915120:  23.97  16.53 -29.13  15.00  15.00 -15.00  [grid]
   37 v= 0.915192:  10.64 -23.47  10.87 -30.00 -15.00 -30.00  [grid]
   38 v= 0.917819: -16.03  16.53 -15.80 -15.00  15.00  15.00  [grid]
   39 v= 0.917923: -18.68 -16.30   3.26 -20.53  -3.14  10.08  [rand]
   40 v= 0.919812: -16.03  16.53 -29.13 -15.00  30.00 -30.00  [grid]
   41 v= 0.921456: -16.03  16.53 -29.13 -15.00  15.00  15.00  [grid]
   42 v= 0.923937:  13.52  17.31 -37.60  15.74  34.09  -7.78  [rand]
   43 v= 0.926994: -18.84  -6.27 -26.81 -20.99  15.73  16.09  [rand]
   44 v= 0.932665:  13.45  12.66 -26.81  20.99  15.73 -16.09  [rand]
 + - A little optimization:*[#8004=0.410075] *[#8006=0.354359] *[#8012=0.33509] *[#8015=0.324136] *[#8016=0.322314] *[#8018=0.313868] *[#8019=0.312732] *[#8022=0.31261] *[#8024=0.307603] *[#8026=0.307366] *[#8027=0.301325] *[#8028=0.297578] *[#8031=0.294708] *[#8034=0.289563] *[#8035=0.288943] *[#8036=0.287403] *[#8043=0.283804] *[#8044=0.2826] *[#8046=0.282417] *[#8050=0.279751] .......................................*[#10491=0.278813] *[#10492=0.271783] ......
 + - costs of the above after a little optimization:
    0 v= 0.279751:  -2.83   1.03  -2.22  -1.20   2.75   0.35  [grid]
    1 v= 0.647920: -34.68  -7.76 -14.52 -10.89  -8.94  34.19  [rand]
    2 v= 0.606816:   9.37  -9.23   6.71 -13.32  -8.74 -26.45  [grid]
    3 v= 0.341919:  -5.66  -7.13   4.82  -4.45  -5.24   0.19  [rand]
    4 v= 0.407735:  -5.07   4.09 -10.62  -2.88   9.44   1.20  [grid]
    5 v= 0.676430: -11.89 -19.45   8.31 -27.17 -12.48 -16.09  [grid]
    6 v= 0.320874:  -6.12  -5.73   2.85  -3.53  -3.79   2.01  [rand]
    7 v= 0.666279:  22.32 -10.45   5.78  11.56 -11.30 -15.08  [grid]
    8 v= 0.291794:  -2.69  -0.21  -2.54  -0.94   2.78   0.90  [grid]
    9 v= 0.444959: -13.94  -0.66   0.46  -7.24  -0.16   7.21  [grid]
   10 v= 0.646078: -15.65  -8.28   1.48  11.64 -10.44  29.07  [rand]
   11 v= 0.300856:  -5.66  -0.57  -0.19  -2.95   0.34   1.79  [rand]
   12 v= 0.609963:   3.84 -15.62   5.45 -14.86 -11.78 -24.70  [grid]
   13 v= 0.578163: -22.72 -11.40  -0.22  -6.72  -7.28  18.16  [grid]
   14 v= 0.719073: -11.45  13.49 -28.57 -12.81  28.52 -14.53  [grid]
   15 v= 0.741010:  23.75  12.18 -28.49  14.88  14.60 -30.03  [grid]
   16 v= 0.557980: -22.25   2.14 -14.75 -14.03   8.98  11.91  [grid]
   17 v= 0.427152: -10.42 -10.25   3.55  -7.75  -5.72   1.85  [rand]
   18 v= 0.628499:  22.44   0.84 -10.16  -1.42  -1.03 -39.68  [rand]
   19 v= 0.697611:  29.01  -8.31  -7.75   8.27  -9.58 -34.93  [rand]
   20 v= 0.321246:  -3.14  -4.87   4.70  -1.91  -5.11  -0.28  [rand]
   21 v= 0.705906:  -5.35 -25.17  10.59 -27.83 -17.44 -21.35  [rand]
   22 v= 0.364546:  -4.13  -8.88   6.15  -4.01  -6.79  -2.28  [rand]
   23 v= 0.416575:   1.67   5.04  -8.07   0.28   7.64  -2.79  [grid]
   24 v= 0.650323: -33.90 -10.34 -15.84  -8.25  -9.50  36.59  [rand]
   25 v= 0.602770:   9.61  -7.89   3.26 -14.47  -6.02 -30.99  [rand]
   26 v= 0.610905: -25.24   7.62 -23.87 -14.54  13.05  19.12  [grid]
   27 v= 0.651059:   6.01  -3.06   0.48  21.20  -2.97   9.60  [grid]
   28 v= 0.716001:   7.37  15.12 -26.82  15.08  23.24  11.48  [grid]
   29 v= 0.579416: -15.78   9.99 -21.17  -8.54  12.81  17.22  [rand]
   30 v= 0.418715:  -1.07   7.46 -10.86  -0.12  10.80   1.22  [rand]
   31 v= 0.390275:  -6.94  -6.23   3.75  -6.48  -5.09   0.59  [grid]
   32 v= 0.287906:  -5.00  -2.95   1.57  -2.49  -1.91   1.86  [rand]
   33 v= 0.572288: -19.37   8.61 -24.54 -10.76  15.97  14.14  [rand]
   34 v= 0.616495:  14.09 -14.58   4.04 -10.03 -12.37 -28.14  [rand]
   35 v= 0.465861:   6.28   7.30  -2.37   2.96   5.35  -5.86  [grid]
   36 v= 0.557260:  12.54   9.28 -17.00   5.60  12.35 -13.00  [grid]
   37 v= 0.666931:   5.42 -21.82   8.64 -21.72 -15.04 -28.96  [grid]
   38 v= 0.346585:  -3.70   4.79  -4.21  -2.02   5.58   0.56  [grid]
  *39 v= 0.271783:  -3.92  -0.45   0.39  -2.32   0.21   0.88  [rand]
   40 v= 0.388975:  -0.66   6.41  -6.93  -1.02   7.39  -3.25  [grid]
   41 v= 0.524428: -10.47   9.25 -20.98  -5.38  15.53   8.72  [grid]
   42 v= 0.592682:   3.75  15.34 -17.56  -0.10  14.95 -17.68  [rand]
   43 v= 0.555547: -21.44  -1.40 -15.08 -12.62   6.96  12.82  [rand]
   44 v= 0.562619:   6.77  11.72 -18.96   1.84  15.38 -18.81  [rand]
 + - save #39 for possible use in twobest
 + - skip # 0 for twobest: too close to set #39
 + - skip #32 for twobest: too close to set #39
 + - skip # 8 for twobest: too close to set #39
 + - skip #11 for twobest: too close to set #39
 + - skip # 6 for twobest: too close to set #32
 + - skip #20 for twobest: too close to set #32
 + - skip # 3 for twobest: too close to set # 6
 + - skip #38 for twobest: too close to set # 0
 + - skip #22 for twobest: too close to set # 6
 + - skip #40 for twobest: too close to set #38
 + - skip #31 for twobest: too close to set #32
 + - save # 4 for possible use in twobest
 + - skip #23 for twobest: too close to set #40
 + - skip #30 for twobest: too close to set #40
 + - save #17 for possible use in twobest
 + - save # 9 for possible use in twobest
 + - save #35 for possible use in twobest
 + - save #41 for possible use in twobest
 + - save #43 for possible use in twobest
 + - save #36 for possible use in twobest
 + - skip #16 for twobest: too close to set #43
 + - save #44 for possible use in twobest
 + - save #33 for possible use in twobest
 + - save #13 for possible use in twobest
 + - skip #29 for twobest: too close to set #33
 + - skip #42 for twobest: too close to set #44
 + - save #25 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - save #12 for possible use in twobest
 + - save #26 for possible use in twobest
 + - save #34 for possible use in twobest
 + - save #18 for possible use in twobest
 + - save #10 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - skip #24 for twobest: too close to set # 1
 + - save #27 for possible use in twobest
 + - save # 7 for possible use in twobest
 + - save #37 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 270.773 .. 1044.6; base clip 232.433 .. 890.701
 +  - versus source range 0.0303573 .. 939; base range 0 .. 1073.41
 + 35595 total points stored in 346 'RHDD(12.342)' bloks
 + - param set #1 has cost=0.273794
 + -- Parameters = -2.7952 0.3513 0.3932 -1.3082 -0.3011 0.7673 0.9962 1.0221 0.9874 0.0016 -0.0220 -0.0007
 + - param set #2 has cost=0.366435
 + -- Parameters = -3.3077 4.0823 -5.0469 -2.1329 6.4081 -0.0909 1.0068 0.9991 0.9987 -0.0068 0.0059 0.0105
 + - param set #3 has cost=0.338003
 + -- Parameters = -1.7704 -4.7381 3.8007 -0.7004 -3.7316 -0.3540 0.9658 0.9917 1.0172 -0.0014 -0.0034 -0.0073
 + - param set #4 has cost=0.327419
 + -- Parameters = -5.2753 1.9542 -0.8997 -3.0308 1.6285 2.1069 1.0018 1.0157 0.9939 -0.0085 0.0022 0.0088
 + - param set #5 has cost=0.371170
 + -- Parameters = 0.8969 2.8606 -2.8831 1.0065 4.1493 -2.0091 0.9749 0.9940 0.9869 -0.0019 0.0088 0.0096
 + - param set #6 has cost=0.471403
 + -- Parameters = -8.5242 8.5192 -16.4592 -5.6811 14.2929 2.8968 0.9880 0.9801 0.9853 -0.0094 0.0129 -0.0038
 + - param set #7 has cost=0.512256
 + -- Parameters = -16.1675 -3.6437 -15.2405 -10.7168 8.7510 7.2196 1.0034 0.9605 0.9877 0.0114 0.0225 -0.0154
 + - param set #8 has cost=0.454815
 + -- Parameters = -0.6123 8.7606 -16.0090 -0.0590 12.7418 -0.3079 0.9811 1.0036 0.9522 -0.0034 -0.0059 -0.0123
 + - param set #9 has cost=0.454763
 + -- Parameters = 1.5139 5.4427 -13.2182 0.7234 11.9950 -2.7174 0.9873 0.9947 0.9977 0.0091 0.0150 0.0161
 + - param set #10 has cost=0.521346
 + -- Parameters = -17.1093 7.7891 -22.0054 -9.7238 15.8453 9.8886 0.9908 0.9786 0.9779 -0.0154 -0.0008 -0.0046
 + - param set #11 has cost=0.452129
 + -- Parameters = -12.2601 -10.3882 1.7231 -8.4213 -6.5212 3.9278 1.0122 1.0254 0.9447 -0.0387 -0.0041 0.0156
 + - param set #12 has cost=0.294585
 + -- Parameters = -2.6337 -0.8725 0.7923 -1.3584 0.0113 0.1495 0.9977 0.9960 0.9968 -0.0036 -0.0015 0.0053
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0922 
 + --- dist(#3,#1) = 0.109 
 + --- dist(#4,#1) = 0.0838 
 + --- dist(#5,#1) = 0.125 
 + --- dist(#6,#1) = 0.139 
 + --- dist(#7,#1) = 0.181 
 + --- dist(#8,#1) = 0.17 
 + --- dist(#9,#1) = 0.205 
 + --- dist(#10,#1) = 0.211 
 + --- dist(#11,#1) = 0.2 
 + --- dist(#12,#1) = 0.28 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 273.826 .. 1057; base clip 233.018 .. 910.363
 +  - versus source range 0.000249999 .. 939.026; base range 0 .. 1075.54
 + 34587 total points stored in 338 'RHDD(12.2051)' bloks
 + - param set #1 has cost=0.292571
 + -- Parameters = -2.1922 0.2669 0.3562 -0.6616 -0.5648 0.4061 0.9913 1.0338 0.9791 -0.0066 -0.0283 0.0022
 + - param set #2 has cost=0.299620
 + -- Parameters = -2.0448 0.2462 0.2944 -0.9776 -0.3569 -0.3396 0.9899 1.0275 0.9853 -0.0105 -0.0086 0.0044
 + - param set #3 has cost=0.300995
 + -- Parameters = -3.7356 1.7422 -1.0625 -1.6848 1.3924 1.2282 1.0068 1.0283 0.9652 -0.0242 -0.0220 0.0201
 + - param set #4 has cost=0.309886
 + -- Parameters = -2.1425 -0.0642 0.9261 -0.8655 -1.0716 0.1654 0.9653 1.0370 1.0029 -0.0039 -0.0029 -0.0099
 + - param set #5 has cost=0.324994
 + -- Parameters = -3.4610 3.1877 -1.8811 -1.8410 3.7319 0.4550 0.9997 1.0201 0.9729 -0.0453 -0.0021 0.0359
 + - param set #6 has cost=0.310274
 + -- Parameters = -2.6017 3.4603 -2.2279 -1.2439 2.0007 0.2206 0.9933 1.0457 0.9654 0.0004 0.0012 0.0092
 + - param set #7 has cost=0.317248
 + -- Parameters = -4.5403 0.5268 -0.4716 -2.5842 -0.8800 0.8697 1.0244 1.0353 0.9466 -0.0572 -0.0157 0.0033
 + - param set #8 has cost=0.429167
 + -- Parameters = 0.0595 7.0823 -8.8542 -0.0924 9.8016 -1.5718 0.9821 0.9881 0.9673 0.0115 0.0275 0.0231
 + - param set #9 has cost=0.408646
 + -- Parameters = -2.2923 6.3380 -6.2982 -1.0410 6.6687 -0.5693 0.9967 1.0029 0.9405 0.0063 0.0051 0.0050
 + - param set #10 has cost=0.475617
 + -- Parameters = -7.5108 8.2091 -15.3013 -5.1005 13.7418 2.9849 1.0051 0.9839 0.9854 -0.0055 0.0130 -0.0026
 + - param set #11 has cost=0.492002
 + -- Parameters = -13.0631 -1.5799 -14.4924 -8.0873 9.9579 4.0586 1.0487 0.9421 0.9642 0.0370 0.0103 -0.0271
 + - param set #12 has cost=0.508006
 + -- Parameters = -14.2456 8.3466 -19.4227 -9.3323 15.7836 7.0670 1.0098 0.9697 0.9802 -0.0144 -0.0005 -0.0084
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0887 
 + --- dist(#3,#1) = 0.0804 
 + --- dist(#4,#1) = 0.114 
 + --- dist(#5,#1) = 0.133 
 + --- dist(#6,#1) = 0.228 
 + --- dist(#7,#1) = 0.174 
 + --- dist(#8,#1) = 0.151 
 + --- dist(#9,#1) = 0.251 
 + --- dist(#10,#1) = 0.196 
 + --- dist(#11,#1) = 0.25 
 + --- dist(#12,#1) = 0.247 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + - using 40104 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 276.864 .. 1067.63; base clip 233.639 .. 927.704
 +  - versus source range 0 .. 939.027; base range 0 .. 1077.79
 + 35581 total points stored in 363 'RHDD(12.1215)' bloks
 + - param set #1 has cost=0.334032
 + -- Parameters = -2.3197 0.2006 0.3437 -0.7548 -0.5677 0.4317 0.9911 1.0337 0.9789 -0.0062 -0.0232 0.0023
 + - param set #2 has cost=0.332807
 + -- Parameters = -2.1753 0.6438 0.1743 -0.8659 -0.0469 0.0969 0.9897 1.0352 0.9807 -0.0120 -0.0098 0.0071
 + - param set #3 has cost=0.332856
 + -- Parameters = -3.3497 1.8790 -0.9292 -1.5473 1.2576 0.8896 0.9984 1.0315 0.9632 -0.0242 -0.0239 0.0201
 + - param set #4 has cost=0.340639
 + -- Parameters = -2.1563 -0.2810 0.8335 -0.9414 -1.0741 0.0903 0.9746 1.0354 0.9937 -0.0051 0.0007 -0.0042
 + - param set #5 has cost=0.335772
 + -- Parameters = -2.2543 2.2476 -1.4562 -0.8504 0.7873 0.0872 0.9938 1.0495 0.9623 0.0008 0.0034 0.0062
 + - param set #6 has cost=0.332386
 + -- Parameters = -3.6469 1.1947 -0.7693 -1.9741 -0.5302 0.6742 1.0053 1.0418 0.9543 -0.0637 -0.0192 -0.0002
 + - param set #7 has cost=0.337129
 + -- Parameters = -3.3792 3.0778 -0.0696 -1.9245 2.3459 0.1543 0.9951 1.0443 0.9639 -0.0484 -0.0054 0.0514
 + - param set #8 has cost=0.371517
 + -- Parameters = -1.6462 3.0969 -4.2921 -0.6741 3.2713 -0.8629 0.9917 1.0133 0.9127 0.0048 0.0022 0.0145
 + - param set #9 has cost=0.447904
 + -- Parameters = -0.5042 6.3758 -8.1064 -0.2143 9.0591 -0.9348 0.9879 0.9955 0.9724 0.0103 0.0304 0.0228
 + - param set #10 has cost=0.472491
 + -- Parameters = -5.4760 7.8072 -12.0232 -4.1560 11.8180 -0.7329 1.0096 0.9814 0.9694 -0.0054 0.0109 0.0035
 + - param set #11 has cost=0.473645
 + -- Parameters = -9.2918 0.6735 -11.4922 -6.6106 9.1657 1.2274 1.0451 0.9317 0.9804 -0.0242 0.0688 -0.0050
 + - param set #12 has cost=0.499570
 + -- Parameters = -10.4475 2.7957 -16.2405 -7.3630 16.0511 1.4590 1.0505 0.8528 0.9456 -0.0856 0.0262 0.0200
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.233 
 + --- dist(#3,#1) = 0.177 
 + --- dist(#4,#1) = 0.258 
 + --- dist(#5,#1) = 0.29 
 + --- dist(#6,#1) = 0.232 
 + --- dist(#7,#1) = 0.263 
 + --- dist(#8,#1) = 0.308 
 + --- dist(#9,#1) = 0.333 
 + --- dist(#10,#1) = 0.262 
 + --- dist(#11,#1) = 0.396 
 + --- dist(#12,#1) = 0.514 
 + - Total coarse refinement net CPU time = 0.0 s; 3514 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=21.5761 usiz=522.522
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 280.596 .. 1084.16; base clip 233.639 .. 927.704
 +  - versus source range 0 .. 939.39; base range 0 .. 1079.06
 + 35432 total points stored in 369 'RHDD(12.0364)' bloks
 + - cost(#1)=0.349106 *
 + -- Parameters = -3.6469 1.1947 -0.7693 -1.9741 -0.5302 0.6742 1.0053 1.0418 0.9543 -0.0637 -0.0192 -0.0002
 + - cost(#2)=0.348677 *
 + -- Parameters = -2.1753 0.6438 0.1743 -0.8659 -0.0469 0.0969 0.9897 1.0352 0.9807 -0.0120 -0.0098 0.0071
 + - cost(#3)=0.349185  
 + -- Parameters = -3.3497 1.8790 -0.9292 -1.5473 1.2576 0.8896 0.9984 1.0315 0.9632 -0.0242 -0.0239 0.0201
 + - cost(#4)=0.350844  
 + -- Parameters = -2.3197 0.2006 0.3437 -0.7548 -0.5677 0.4317 0.9911 1.0337 0.9789 -0.0062 -0.0232 0.0023
 + - cost(#5)=0.353277  
 + -- Parameters = -2.2543 2.2476 -1.4562 -0.8504 0.7873 0.0872 0.9938 1.0495 0.9623 0.0008 0.0034 0.0062
 + - cost(#6)=0.352718  
 + -- Parameters = -3.3792 3.0778 -0.0696 -1.9245 2.3459 0.1543 0.9951 1.0443 0.9639 -0.0484 -0.0054 0.0514
 + - cost(#7)=0.355294  
 + -- Parameters = -2.1563 -0.2810 0.8335 -0.9414 -1.0741 0.0903 0.9746 1.0354 0.9937 -0.0051 0.0007 -0.0042
 + - cost(#8)=0.389231  
 + -- Parameters = -1.6462 3.0969 -4.2921 -0.6741 3.2713 -0.8629 0.9917 1.0133 0.9127 0.0048 0.0022 0.0145
 + - cost(#9)=0.458492  
 + -- Parameters = -0.5042 6.3758 -8.1064 -0.2143 9.0591 -0.9348 0.9879 0.9955 0.9724 0.0103 0.0304 0.0228
 + - cost(#10)=0.483946  
 + -- Parameters = -5.4760 7.8072 -12.0232 -4.1560 11.8180 -0.7329 1.0096 0.9814 0.9694 -0.0054 0.0109 0.0035
 + - cost(#11)=0.483224  
 + -- Parameters = -9.2918 0.6735 -11.4922 -6.6106 9.1657 1.2274 1.0451 0.9317 0.9804 -0.0242 0.0688 -0.0050
 + - cost(#12)=0.509109  
 + -- Parameters = -10.4475 2.7957 -16.2405 -7.3630 16.0511 1.4590 1.0505 0.8528 0.9456 -0.0856 0.0262 0.0200
 + - cost(#13)=0.525500  
 + -- Parameters = -2.6977 3.1966 -2.4642 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.345776 *
 + -- Parameters = -3.4353 1.2337 -1.1438 -1.7140 -0.1735 0.7810 1.0031 1.0415 0.9563 -0.0636 -0.0187 -0.0006
 + - cost(#2)=0.346947  
 + -- Parameters = -2.1015 0.6753 0.0130 -0.7543 -0.0986 0.1845 0.9853 1.0365 0.9799 -0.0134 -0.0089 0.0066
 + - cost(#3)=0.344213 *
 + -- Parameters = -3.0586 1.9475 -0.9751 -1.1230 1.1500 1.0373 0.9936 1.0399 0.9630 -0.0256 -0.0228 0.0202
 + - cost(#4)=0.348668  
 + -- Parameters = -2.2860 0.1513 0.2793 -0.6948 -0.5942 0.4425 0.9890 1.0351 0.9800 -0.0100 -0.0224 0.0024
 + - cost(#5)=0.348251  
 + -- Parameters = -2.1929 2.1870 -1.3404 -0.6934 0.8067 0.1139 0.9940 1.0484 0.9617 -0.0144 0.0042 0.0087
 + - cost(#6)=0.348414  
 + -- Parameters = -3.2292 3.0315 -0.0685 -1.8321 2.1429 0.2624 0.9934 1.0445 0.9628 -0.0641 -0.0037 0.0520
 + - cost(#7)=0.353076  
 + -- Parameters = -2.0753 -0.1795 0.6975 -0.8335 -1.0433 0.1378 0.9744 1.0358 0.9917 -0.0086 0.0000 -0.0042
 + - cost(#8)=0.365339  
 + -- Parameters = -1.7603 3.2729 -3.6296 -0.4862 2.3527 0.0064 0.9826 1.0446 0.9267 -0.0024 0.0026 0.0159
 + - cost(#9)=0.448892  
 + -- Parameters = -0.8297 5.5790 -7.1545 -0.8969 8.0436 -1.4748 0.9861 1.0020 0.9672 0.0091 0.0315 0.0231
 + - cost(#10)=0.438540  
 + -- Parameters = -2.3878 6.7702 -6.2946 -0.6632 8.2528 1.4129 1.0080 1.0235 0.9616 0.0185 -0.0032 0.0493
 + - cost(#11)=0.465989  
 + -- Parameters = -8.2600 0.8192 -8.8179 -5.8930 7.6437 0.2904 1.0526 0.9360 0.9809 -0.0248 0.0693 -0.0081
 + - cost(#12)=0.503159  
 + -- Parameters = -9.8706 2.9842 -16.1332 -6.6538 15.7903 2.6285 1.0498 0.8616 0.9398 -0.0855 0.0260 0.0224
 + - cost(#13)=0.352376  
 + -- Parameters = -2.4174 0.3183 0.1300 -1.0108 -0.0220 0.2695 0.9939 1.0213 0.9865 -0.0111 -0.0015 0.0018
 + - case #3 is now the best
 + - Initial  cost = 0.344213
 + - Initial fine Parameters = -3.0586 1.9475 -0.9751 -1.1230 1.1500 1.0373 0.9936 1.0399 0.9630 -0.0256 -0.0228 0.0202
 + - Finalish cost = 0.343801 ; 178 funcs
 + - ini Finalish Parameters = -3.0545 1.9713 -0.9617 -1.1420 1.1238 0.9997 0.9927 1.0400 0.9634 -0.0254 -0.0233 0.0197
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 280.946 .. 1084.95; base clip 233.639 .. 927.704
 +  - versus source range 0 .. 939.39; base range 0 .. 1079.06
*[#15915=-0.228915] *[#15937=-0.229128] *[#15964=-0.229317] *[#15971=-0.229372] *[#15974=-0.229569] *[#15985=-0.22975] *[#15994=-0.229801] *[#16001=-0.229839] *[#16006=-0.229869] *[#16008=-0.229897] *[#16011=-0.229957] *[#16014=-0.229984] *[#16025=-0.230041] *[#16059=-0.230048] *[#16060=-0.230054] *[#16061=-0.230055] *[#16063=-0.230057] *[#16066=-0.230058] *[#16067=-0.230061] *[#16070=-0.230065] *[#16071=-0.230066] *[#16072=-0.230067] *[#16073=-0.230069] *[#16076=-0.23007] *[#16081=-0.230076] *[#16084=-0.230078] *[#16085=-0.230079] *[#16089=-0.230081] *[#16094=-0.230084] *[#16096=-0.230089] *[#16097=-0.230091] *[#16098=-0.230094] *[#16099=-0.230095] *[#16100=-0.230096] *[#16101=-0.230099] *[#16102=-0.2301] *[#16103=-0.2301] *[#16104=-0.230103] *[#16107=-0.230107] *[#16108=-0.230108] *[#16110=-0.230111] *[#16111=-0.230114] *[#16112=-0.230116] *[#16115=-0.230121] *[#16116=-0.230123] *[#16117=-0.230127] *[#16118=-0.230133] *[#16120=-0.230139] *[#16123=-0.230142] *[#16124=-0.230147] *[#16125=-0.230152] *[#16126=-0.230165] *[#16127=-0.230175] *[#16128=-0.230176] *[#16129=-0.230179] *[#16130=-0.230192] *[#16131=-0.230197] *[#16134=-0.230204] *[#16135=-0.230208] *[#16136=-0.230212] *[#16137=-0.230214] *[#16138=-0.230215] *[#16139=-0.230216] *[#16141=-0.230221] *[#16144=-0.230227] *[#16145=-0.230232] *[#16148=-0.230236] *[#16149=-0.230242] *[#16150=-0.230248] *[#16151=-0.230255] *[#16158=-0.230257] *[#16162=-0.230258] *[#16163=-0.230261] *[#16166=-0.230267] *[#16167=-0.230268] *[#16169=-0.230273] *[#16170=-0.230283] *[#16171=-0.2303] *[#16172=-0.230306] *[#16175=-0.230306] *[#16177=-0.230307] *[#16178=-0.230313] *[#16179=-0.230316] *[#16180=-0.230317] *[#16182=-0.230321] *[#16187=-0.230327] *[#16190=-0.230327] *[#16192=-0.23033] *[#16193=-0.230333] *[#16194=-0.230337] *[#16195=-0.23035] *[#16198=-0.230354] *[#16199=-0.230356] *[#16200=-0.230384] *[#16201=-0.230399] *[#16202=-0.230401] *[#16203=-0.230415] *[#16204=-0.23042] *[#16207=-0.230424] *[#16210=-0.230428] *[#16213=-0.230431] *[#16214=-0.230441] *[#16215=-0.230445] *[#16216=-0.23045] *[#16217=-0.230452] *[#16218=-0.230459] *[#16219=-0.23046] *[#16221=-0.230469] *[#16222=-0.230477] *[#16223=-0.230482] *[#16224=-0.23049] *[#16225=-0.230513] *[#16230=-0.230513] *[#16233=-0.230516] *[#16234=-0.230525] *[#16235=-0.230528] *[#16236=-0.230534] *[#16237=-0.23054] *[#16238=-0.230541] *[#16239=-0.230546] *[#16240=-0.230563] *[#16241=-0.230581] *[#16242=-0.230601] *[#16243=-0.23062] *[#16244=-0.230633] *[#16249=-0.230653] *[#16250=-0.230661] *[#16251=-0.230672] *[#16252=-0.230682] *[#16253=-0.230684] *[#16255=-0.230694] *[#16259=-0.230695] *[#16260=-0.230717] *[#16263=-0.230732] *[#16266=-0.230752] *[#16267=-0.230771] *[#16268=-0.23078] *[#16273=-0.230785] *[#16274=-0.230786] *[#16275=-0.230788] *[#16276=-0.23079] *[#16277=-0.230793] *[#16278=-0.230798] *[#16279=-0.230799] *[#16283=-0.230803] *[#16284=-0.230803] *[#16286=-0.230806] *[#16287=-0.230806] *[#16289=-0.230807] *[#16298=-0.23081] *[#16300=-0.23081] *[#16301=-0.230816] *[#16304=-0.23082] *[#16305=-0.230824] *[#16306=-0.230827] *[#16309=-0.230831] *[#16311=-0.230835] *[#16312=-0.230839] *[#16315=-0.230841] *[#16316=-0.230841] *[#16318=-0.230842] *[#16320=-0.230847] *[#16321=-0.230848] *[#16322=-0.230851] *[#16323=-0.230856] *[#16330=-0.230859] *[#16331=-0.230859] *[#16334=-0.230861] *[#16335=-0.230862] *[#16336=-0.230862] *[#16338=-0.230863] *[#16339=-0.230864] *[#16344=-0.230867] *[#16345=-0.230871] *[#16346=-0.230873] *[#16347=-0.230879] *[#16354=-0.23088] *[#16356=-0.230881] *[#16360=-0.230882] *[#16361=-0.230882] *[#16367=-0.230883] *[#16370=-0.230884] *[#16377=-0.230884] *[#16388=-0.230884] *[#16389=-0.230885] *[#16390=-0.230885] *[#16393=-0.230885] *[#16409=-0.230885] *[#16410=-0.230885] *[#16415=-0.230885] *[#16421=-0.230886] *[#16424=-0.230888] *[#16429=-0.230889] *[#16435=-0.230889] *[#16441=-0.23089] *[#16442=-0.23089] *[#16450=-0.230892] *[#16452=-0.230894] *[#16453=-0.230895] *[#16456=-0.230899] *[#16457=-0.230901] *[#16460=-0.230901] *[#16462=-0.230904] *[#16463=-0.230905] *[#16466=-0.230908] *[#16469=-0.230911] *[#16470=-0.230912] *[#16471=-0.230914] *[#16472=-0.230914] *[#16473=-0.230919] *[#16474=-0.230925] *[#16477=-0.230929] *[#16478=-0.230934] *[#16481=-0.23094] *[#16482=-0.230942] *[#16483=-0.230945] *[#16484=-0.230953] *[#16485=-0.230953] *[#16487=-0.230968] *[#16488=-0.230971] *[#16489=-0.230975] *[#16490=-0.230979] *[#16495=-0.230985] *[#16496=-0.230986] *[#16497=-0.230986] *[#16501=-0.23099] *[#16502=-0.230993] *[#16503=-0.230995] *[#16504=-0.231005] *[#16511=-0.231007] *[#16520=-0.23101] *[#16523=-0.231015] *[#16524=-0.231021] *[#16525=-0.231027] *[#16528=-0.231027] *[#16530=-0.231027] *[#16532=-0.231032] *[#16535=-0.231032] *[#16537=-0.231036] *[#16538=-0.231039] *[#16539=-0.231044] *[#16542=-0.231045] *[#16543=-0.231046] *[#16544=-0.231056] *[#16545=-0.231061] *[#16546=-0.231065] *[#16547=-0.231071] *[#16548=-0.231075] *[#16551=-0.231083] *[#16552=-0.231085] *[#16553=-0.231092] *[#16554=-0.231104] *[#16555=-0.231108] *[#16556=-0.231113] *[#16557=-0.231117] *[#16560=-0.231129] *[#16565=-0.231136] *[#16566=-0.231146] *[#16567=-0.231149] *[#16568=-0.231154] *[#16569=-0.231159] *[#16570=-0.231169] *[#16575=-0.23117] *[#16577=-0.231175] *[#16578=-0.231177] *[#16579=-0.23118] *[#16580=-0.231183] *[#16581=-0.231192] *[#16582=-0.231198] *[#16583=-0.231201] *[#16585=-0.23121] *[#16586=-0.231213] *[#16587=-0.231224] *[#16588=-0.231237] *[#16589=-0.231248] *[#16590=-0.231252] *[#16593=-0.231261] *[#16594=-0.231265] *[#16597=-0.231269] *[#16606=-0.231273] *[#16607=-0.231274] *[#16610=-0.231276] *[#16611=-0.231279] *[#16612=-0.23128] *[#16615=-0.231281] *[#16616=-0.231284] *[#16619=-0.231291] *[#16620=-0.231296] *[#16621=-0.231297] *[#16623=-0.231298] *[#16626=-0.231303] *[#16627=-0.231307] *[#16628=-0.231309] *[#16629=-0.231312] *[#16630=-0.231318] *[#16633=-0.231327] *[#16634=-0.231333] *[#16637=-0.231339] *[#16642=-0.231346] *[#16645=-0.231351] *[#16646=-0.231351] *[#16648=-0.231353] *[#16651=-0.231356] *[#16654=-0.231362] *[#16655=-0.231363] *[#16656=-0.231364] *[#16659=-0.231367] *[#16660=-0.231368] *[#16661=-0.231372] *[#16664=-0.231375] *[#16665=-0.231378] *[#16666=-0.231383] *[#16667=-0.231386] *[#16668=-0.2314] *[#16669=-0.231423] *[#16670=-0.231445] *[#16671=-0.231477] *[#16676=-0.231518] *[#16677=-0.231518] *[#16678=-0.231522] *[#16679=-0.231531] *[#16680=-0.231534] *[#16681=-0.231535] *[#16682=-0.231539] *[#16683=-0.231545] *[#16684=-0.23155] *[#16688=-0.231551] *[#16690=-0.231552] *[#16691=-0.231556] *[#16692=-0.231558] *[#16695=-0.231561] *[#16696=-0.231562] *[#16697=-0.231564] *[#16698=-0.231565] *[#16699=-0.231565] *[#16700=-0.231566] *[#16703=-0.231569] *[#16704=-0.231577] *[#16705=-0.231582] *[#16706=-0.231585] *[#16707=-0.2316] *[#16708=-0.231604] *[#16711=-0.231604] *[#16713=-0.231609] *[#16714=-0.231615] *[#16715=-0.231615] *[#16716=-0.231621] *[#16717=-0.231623] *[#16718=-0.231627] *[#16719=-0.231631] *[#16720=-0.231635] *[#16721=-0.231639] *[#16722=-0.23164] *[#16726=-0.231643] *[#16727=-0.231649] *[#16730=-0.231652] *[#16731=-0.231655] *[#16732=-0.231658] *[#16733=-0.231661] *[#16736=-0.231667] *[#16739=-0.231668] *[#16740=-0.231671] *[#16741=-0.231677] *[#16742=-0.231681] *[#16745=-0.231683] *[#16746=-0.231683] *[#16748=-0.231688] *[#16749=-0.231689] *[#16751=-0.23169] *[#16754=-0.231692] *[#16759=-0.231695] *[#16764=-0.231698] *[#16765=-0.231701] *[#16766=-0.231704] *[#16767=-0.231708] *[#16768=-0.231711] *[#16769=-0.231717] *[#16770=-0.231732] *[#16771=-0.231736] *[#16772=-0.231738] *[#16774=-0.231748] *[#16783=-0.231755] *[#16784=-0.231757] *[#16785=-0.23176] *[#16786=-0.231765] *[#16791=-0.231768] *[#16792=-0.231773] *[#16793=-0.23178] *[#16794=-0.231785] *[#16795=-0.231789] *[#16798=-0.231794] *[#16799=-0.231796] *[#16800=-0.231798] *[#16801=-0.231799] *[#16802=-0.2318] *[#16803=-0.231801] *[#16804=-0.231804] *[#16805=-0.231805] *[#16808=-0.231813] *[#16809=-0.231813] *[#16811=-0.231814] *[#16812=-0.231816] *[#16813=-0.231818] *[#16816=-0.231819] *[#16817=-0.231823] *[#16818=-0.231825] *[#16820=-0.231826] *[#16821=-0.231827] *[#16822=-0.23183] *[#16823=-0.231832] *[#16824=-0.231833] *[#16825=-0.231835] *[#16826=-0.231836] *[#16827=-0.231836] *[#16828=-0.231839] *[#16831=-0.231839] *[#16833=-0.23184] *[#16834=-0.231842] *[#16835=-0.231843] *[#16840=-0.231846] *[#16841=-0.231846] *[#16843=-0.231846] *[#16844=-0.231848] *[#16847=-0.231849] *[#16848=-0.23185] *[#16849=-0.231851] *[#16852=-0.231854] *[#16853=-0.231857] *[#16858=-0.231859] *[#16859=-0.231859] *[#16863=-0.231864] *[#16866=-0.231867] *[#16869=-0.231867] *[#16871=-0.231867] *[#16872=-0.231868] *[#16873=-0.231869] *[#16876=-0.231872] *[#16879=-0.231873] *[#16880=-0.231874] *[#16881=-0.231875] *[#16884=-0.231875] *[#16885=-0.231875] *[#16887=-0.231877] *[#16888=-0.231877] *[#16891=-0.231878] *[#16893=-0.231879] *[#16894=-0.23188] *[#16901=-0.23188] *[#16902=-0.231881] *[#16903=-0.231881] *[#16904=-0.231881] *[#16909=-0.231882] *[#16916=-0.231882] *[#16917=-0.231882] *[#16918=-0.231883] *[#16925=-0.231884] *[#16930=-0.231884] *[#16935=-0.231886] *[#16938=-0.231887] *[#16939=-0.231889] *[#16942=-0.23189] *[#16943=-0.231891] *[#16944=-0.231892] *[#16949=-0.231893] *[#16957=-0.231893] *[#16958=-0.231894] *[#16959=-0.231896] *[#16962=-0.231896] *[#16963=-0.231897] *[#16968=-0.231898] *[#16971=-0.2319] *[#16972=-0.2319] *[#16981=-0.231901] *[#16982=-0.231901] *[#16985=-0.231902] *[#16994=-0.231903] *[#16995=-0.231903] *[#17000=-0.231904] *[#17003=-0.231905] *[#17004=-0.231905] *[#17006=-0.231905] *[#17007=-0.231906] *[#17010=-0.231906] *[#17011=-0.231907] *[#17017=-0.231908] *[#17018=-0.231909] *[#17019=-0.231909] *[#17021=-0.231911] *[#17022=-0.231913] *[#17025=-0.231914] *[#17026=-0.231915] *[#17027=-0.231917] *[#17028=-0.23192] *[#17029=-0.231922] *[#17035=-0.231927] *[#17038=-0.231928] *[#17042=-0.23193] *[#17045=-0.23193] *[#17049=-0.231931] *[#17050=-0.231933] *[#17057=-0.231936] *[#17058=-0.231936] *[#17059=-0.231939] *[#17060=-0.231942] *[#17061=-0.231944] *[#17062=-0.231945] *[#17071=-0.231945] *[#17075=-0.231947] *[#17084=-0.231948] *[#17089=-0.231949] *[#17094=-0.231951] *[#17105=-0.231952] *[#17106=-0.231952] *[#17111=-0.231952] *[#17120=-0.231953] *[#17122=-0.231953] *[#17128=-0.231954] *[#17141=-0.231954] *[#17147=-0.231954] *[#17148=-0.231954] *[#17157=-0.231955] *[#17164=-0.231955] *[#17175=-0.231955] *[#17176=-0.231955] *[#17177=-0.231955] *[#17192=-0.231956] *[#17194=-0.231956] *[#17221=-0.231956] *[#17225=-0.231956] *[#17228=-0.231956] *[#17240=-0.231956] *[#17245=-0.231956] *[#17261=-0.231956] 
 + - Final    cost = -0.231956 ; 1368 funcs
 + Final fine fit Parameters:
       x-shift= -3.2327   y-shift=  2.9407   z-shift= -0.1679  ...  enorm=  4.3734 mm
       z-angle= -1.4096   x-angle=  0.8635   y-angle=  0.7767  ...  total=  1.8219 deg
       x-scale=  1.0032   y-scale=  1.0554   z-scale=  0.9746  ...  vol3D=  1.0319 = base smaller than source
     y/x-shear= -0.0572 z/x-shear= -0.0250 z/y-shear=  0.0208
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -3.2327 2.9407 -0.1679 -1.4096 0.8635 0.7767 1.0032 1.0554 0.9746 -0.0572 -0.0250 0.0208
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S18_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S18_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 53.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S18_unflipped_ob_temp_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 11.697636 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 11.697636 degrees from plumb.
++ Source dataset: ./anatSS.sub-S18_unflipped_ob_temp_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1411304 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 40104 voxels [17.6%] in weight mask
++ Number of points for matching = 40104
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.282 35.751 22.057 (index)
 + source center of mass = 94.731 86.432 51.524 (index)
 + source-target CM = -0.114 3.823 -2.565 (xyz)
 + estimated center of mass shifts = -0.114 3.823 -2.565
++ shift param auto-range: -60.8..60.6 -66.5..74.1 -59.1..54.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.114029 .. 9.885971  center = -0.114029
 + Range param#2 [y-shift] = -6.177361 .. 13.822639  center = 3.822639
 + Range param#3 [z-shift] = -12.565460 .. 7.434540  center = -2.565460
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.114029 .. 39.885971  center = -0.114029
 + Range param#2 [y-shift] = -36.177361 .. 43.822639  center = 3.822639
 + Range param#3 [z-shift] = -42.565460 .. 37.434540  center = -2.565460
 + 12 free parameters
++ Normalized convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -40.114 ..   39.886
 +       y-shift =  -36.177 ..   43.823
 +       z-shift =  -42.565 ..   37.435
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1411304 [out of 4423680] voxels
 + base mask has 53464 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=70.0236 usiz=497.991
 + - copying weight image
 + - using 40104 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 281.179 .. 1089.53; base clip 233.921 .. 938.025
 +  - versus source range 5.05113e-05 .. 1046.39; base range 0 .. 1079.06
 + 35432 total points stored in 369 'RHDD(12.0364)' bloks
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S18_flip_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 11.697636 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 11.697636 degrees from plumb.
++ Source dataset: ./anatSS.sub-S18_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1381591 voxels in -source_automask+2
++ Zero-pad: ybot=6 ytop=4
++ Zero-pad: zbot=8 ztop=8
++ 40104 voxels [17.6%] in weight mask
++ Number of points for matching = 40104
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 31.282 35.751 22.057 (index)
 + source center of mass = 93.692 86.706 51.645 (index)
 + source-target CM = -1.153 3.548 -2.444 (xyz)
 + estimated center of mass shifts = -1.153 3.548 -2.444
++ shift param auto-range: -61.8..59.5 -66.8..73.8 -59.0..54.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.152649 .. 8.847351  center = -1.152649
 + Range param#2 [y-shift] = -6.451744 .. 13.548256  center = 3.548256
 + Range param#3 [z-shift] = -12.444283 .. 7.555717  center = -2.444283
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.152649 .. 38.847351  center = -1.152649
 + Range param#2 [y-shift] = -36.451744 .. 43.548256  center = 3.548256
 + Range param#3 [z-shift] = -42.444283 .. 37.555717  center = -2.444283
 + 12 free parameters
++ Normalized convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -41.153 ..   38.847
 +       y-shift =  -36.452 ..   43.548
 +       z-shift =  -42.444 ..   37.556
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1381591 [out of 4423680] voxels
 + base mask has 53464 [out of 227328] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=68.362 usiz=498.78
 + - copying weight image
 + - using 40104 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 279.196 .. 1086.95; base clip 233.921 .. 938.025
 +  - versus source range 4.66223e-05 .. 1043.12; base range 0 .. 1079.06
 + 35432 total points stored in 369 'RHDD(12.0364)' bloks
++ -allcostX1D finished
No flip cost is -0.801321 for lpc+ZZ cost function
Flip cost is -0.222648 for lpc+ZZ cost function
Data does not need flipping
#Script is running (command trimmed):
  cat_matvec -ONELINE ./anatSS.sub-S18_al_junk_e2a_only_mat.aff12.1D ./anatSS.sub-S18_unflipped_obla2e_mat.1D -I > ./anatSS.sub-S18_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./vr_base_ts_ns+orig -1Dmatrix_apply ./anatSS.sub-S18_al_junk_mat.aff12.1D -prefix ./anatSS.sub-S18_al_junk -input ./anatSS.sub-S18_unflipped+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 11.697636 degrees from plumb.
++ Source dataset: ./anatSS.sub-S18_unflipped+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 31.282 29.751 14.057 (index)
 + source center of mass = 126.367 99.718 114.679 (index)
 + source-target CM = 0.778 20.703 19.381 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =    0.778   20.703   19.381
 +  shift search range is +/- =   60.669   60.669   37.316
 +                                  1.3%    34.1%    51.9%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.9977 0.0661 -0.0900 30.7687 -0.0735 -0.1918 -0.9633 172.5030 -0.0864 1.0020 -0.1832 45.6873
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S18_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat anatSS.sub-S18+orig -suffix \
 _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask \
 -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./anatSS.sub-S18_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S18*

# Finished alignment successfully

if ( ! -f anatQQ.sub-S18+tlrc.HEAD ) then
foreach run ( 01 02 03 04 05 06 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.sub-S18.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.697636 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S18.r01.tshift+orig.BRIK is 11.697636 degrees from plumb.
++ Reading input dataset ./pb02.sub-S18.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 41441 voxels
 + 5879 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.159  pitch=-0.904  yaw=-0.117  dS=-0.659  dL=-0.110  dP=-0.879
++ Mean: roll=+0.283  pitch=-0.581  yaw=+0.057  dS=+1.026  dL=+0.394  dP=-0.585
++ Max : roll=+0.529  pitch=+0.559  yaw=+0.209  dS=+1.780  dL=+0.643  dP=+0.356
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 1.64(1.64) 1.48(0.16) 1.49(0.04) 1.53(0.04) 1.50(0.04) 1.57(0.07) 1.48(0.08) 1.55(0.09) 1.52(0.07) 1.50(0.04) 1.53(0.11) 1.53(0.09) 1.56(0.05) 1.50(0.08) 1.48(0.03) 1.54(0.07) 1.49(0.09) 1.49(0.03) 1.51(0.05) 1.47(0.05) 1.54(0.07) 1.53(0.04) 1.54(0.06) 1.53(0.07) 1.53(0.03) 1.54(0.01) 1.51(0.04) 1.57(0.07) 1.52(0.05) 1.58(0.07) 1.52(0.07) 1.59(0.07) 1.47(0.13) 1.48(0.04) 1.59(0.12) 1.55(0.09) 1.53(0.08) 1.48(0.07) 1.38(0.10) 1.18(0.20) 1.04(0.15) 0.79(0.25) 0.41(0.37) 0.91(1.31) 1.45(0.56) 1.78(0.37) 2.01(0.25) 2.20(0.20) 2.36(0.17) 2.38(0.04) 2.44(0.08) 2.47(0.13) 2.39(0.09) 2.46(0.08) 2.40(0.07) 2.49(0.09) 2.45(0.04) 2.50(0.05) 2.46(0.05) 2.52(0.06) 2.48(0.08) 2.50(0.07) 2.46(0.07) 2.49(0.08) 2.50(0.04) 2.44(0.07) 2.52(0.08) 2.43(0.09) 2.48(0.07) 2.42(0.06) 2.46(0.05) 2.50(0.05) 2.37(0.12) 2.45(0.08) 2.55(0.10) 2.44(0.11) 2.51(0.07) 2.44(0.07) 2.46(0.03) 2.44(0.05) 2.43(0.06) 2.48(0.08) 2.47(0.08) 2.44(0.04) 2.55(0.12) 2.46(0.10) 2.50(0.05) 2.49(0.04) 2.54(0.05) 2.45(0.09) 2.61(0.17) 2.81(0.21) 2.80(0.04) 2.76(0.04) 2.71(0.16) 2.87(0.18) 2.84(0.11) 2.83(0.06) 2.86(0.06) 2.58(0.30) 2.51(0.08) 2.72(0.22) 2.69(0.06) 2.67(0.04) 2.58(0.09) 2.70(0.12) 2.61(0.08) 2.67(0.06) 2.63(0.06) 2.65(0.04) 2.73(0.48) 3.28(1.16) 3.30(0.19) 3.13(0.23) 3.08(0.08) 3.07(0.03) 3.10(0.04) 3.06(0.05) 3.08(0.04) 3.13(0.06) 3.06(0.07) 3.12(0.07) 3.06(0.06) 3.14(0.10) 3.03(0.12) 3.09(0.06) 3.04(0.05) 3.09(0.05) 3.04(0.06) 3.11(0.08) 3.03(0.08) 3.09(0.07) 3.05(0.06) 3.07(0.08) 3.06(0.06) 3.05(0.04) 3.02(0.04) 3.02(0.07) 3.05(0.08) 3.07(0.04) 3.06(0.07) 2.86(0.21) 2.89(0.06) 3.03(0.15) 3.04(0.03) 2.97(0.07) 3.03(0.07) 2.96(0.10) 3.07(0.11) 2.97(0.10) 3.07(0.10) 3.00(0.08) 3.04(0.05) 2.99(0.06) 3.01(0.04) 2.96(0.05) 2.98(0.03) 2.97(0.04) 2.98(0.04) 2.99(0.03) 2.96(0.04) 3.00(0.05) 2.96(0.04) 3.04(0.07) 2.99(0.05) 3.09(0.10) 2.98(0.12) 3.08(0.10) 2.97(0.12) 3.01(0.05) 2.97(0.04) 3.04(0.07) 2.98(0.07) 3.04(0.07) 2.99(0.06) 3.07(0.09) 3.00(0.08) 3.04(0.06) 3.02(0.07) 3.04(0.05) 3.03(0.03) 3.06(0.06) 2.99(0.08) 3.01(0.05) 3.00(0.06) 3.04(0.06) 2.96(0.09) 3.04(0.09) 2.93(0.13) 3.02(0.10) 2.96(0.06) 3.00(0.05) 2.97(0.08) 3.00(0.05) 2.96(0.06) 2.97(0.04) 3.00(0.04) 3.00(0.03) 3.04(0.06) 2.97(0.08) 3.03(0.07) 3.01(0.06) 3.07(0.07) 3.00(0.08) 2.99(0.05) 3.00(0.04) 2.97(0.06) 3.00(0.05) 2.99(0.05) 3.02(0.04) 2.98(0.05) 3.00(0.03) 2.98(0.04) 3.00(0.03) 2.97(0.04) 2.99(0.04) 2.95(0.06) 2.99(0.05) 3.00(0.02) 2.99(0.03) 3.01(0.02) 2.97(0.08) 3.01(0.10) 2.97(0.05) 2.97(0.02) 2.99(0.03) 2.97(0.02) 3.01(0.05) 2.95(0.06) 3.00(0.05) 2.95(0.08) 2.99(0.07) 2.96(0.05) 2.96(0.04) 2.93(0.05) 2.94(0.05) 2.94(0.06) 2.94(0.07) 2.95(0.08) 2.93(0.06) 2.96(0.05) 3.00(0.06) 2.97(0.07) 2.99(0.05) 2.95(0.05) 2.97(0.05) 2.96(0.05) 2.95(0.06) 2.94(0.07) 2.94(0.07) 2.93(0.07) 2.92(0.04) 2.96(0.06) 2.94(0.05) 2.97(0.04) 2.91(0.07) 3.00(0.09) 2.92(0.08) 3.00(0.09) 2.95(0.07) 3.02(0.08) 2.93(0.10) 3.01(0.09) 2.94(0.08) 2.98(0.05) 2.89(0.10) 3.00(0.12) 2.90(0.11) 2.95(0.06) 2.92(0.07) 2.92(0.05) 2.88(0.05) 2.91(0.06) 2.90(0.06) 2.95(0.05) 2.86(0.09) 2.96(0.11) 2.95(0.06) 2.93(0.04) 2.94(0.08) 2.90(0.09) 2.92(0.10) 2.89(0.08) 2.89(0.05) 2.90(0.04) 2.87(0.03) 2.91(0.05) 2.86(0.05) 2.93(0.07) 2.87(0.07) 2.93(0.07) 2.87(0.07) 2.90(0.06) 2.89(0.04) 2.91(0.06) 2.87(0.06) 2.89(0.05) 2.85(0.08) 2.86(0.08) 2.85(0.06) 2.87(0.04) 2.92(0.05) 2.84(0.08) 2.91(0.06) 2.84(0.06) 2.94(0.10) 2.84(0.11) 2.93(0.11) 2.83(0.11) 2.90(0.07) 2.84(0.06) 2.87(0.03) 2.84(0.07) 2.88(0.09) 2.89(0.07) 2.86(0.05) 2.89(0.05) 2.83(0.07) 2.88(0.07) 2.84(0.05) 2.88(0.06) 2.83(0.06) 2.84(0.03) 2.84(0.04) 2.86(0.05) 2.85(0.04) 2.86(0.08) 2.83(0.08) 2.88(0.11) 2.79(0.09) 2.90(0.12) 2.78(0.12) 2.91(0.13) 2.74(0.17) 2.83(0.10) 2.81(0.05) 2.85(0.08) 2.98(0.16) 2.66(0.34) 2.74(0.10) 2.72(0.03) 2.77(0.06) 2.80(0.03) 2.73(0.07) 2.83(0.10) 2.82(0.06) 2.80(0.03) 2.89(0.11) 2.74(0.16) 2.85(0.12) 2.77(0.08) 2.80(0.07) 2.78(0.09) 2.76(0.07) 2.76(0.06) 2.78(0.05) 2.77(0.05) 2.79(0.05) 2.73(0.06) 2.79(0.06) 2.68(0.12) 2.74(0.06) 2.73(0.04) 2.77(0.05) 2.74(0.05) 2.81(0.08) 2.74(0.08) 2.80(0.07) 2.72(0.09) 2.75(0.04) 2.70(0.06) 2.84(0.15) 2.65(0.20) 2.59(0.12) 2.65(0.08) 2.63(0.05) 2.71(0.09) 2.56(0.16) 2.64(0.08) 2.60(0.04) 2.65(0.05) 2.59(0.06) 2.61(0.07) 2.59(0.06) 2.62(0.06) 2.56(0.06) 2.56(0.08) 2.44(0.19) 2.18(0.30) 2.28(0.18) 2.38(0.12) 2.39(0.07) 2.38(0.03) 2.32(0.07) 2.37(0.06) 2.39(0.03) 2.35(0.08) 2.39(0.05) 2.38(0.03) 2.36(0.05) 2.35(0.03) 2.43(0.13) 2.31(0.14) 2.41(0.11) 2.47(0.07) 2.25(0.23) 2.31(0.08) 2.42(0.12) 2.27(0.16) 2.38(0.11) 2.29(0.09)
++ Max displacement in automask = 3.30 (mm) at sub-brick 113
++ Max delta displ  in automask = 1.64 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.sub-S18.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S18.aff12.1D anatSS.sub-S18_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source pb02.sub-S18.r01.tshift+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S18.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S18.r01.tshift+orig.BRIK is 11.697636 degrees from plumb.
++ opened source dataset 'pb02.sub-S18.r01.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1225478144
in use bytes     = 1031935264
Total (incl. mmap):
system bytes     = 1225478144
in use bytes     = 1031935264
max mmap regions =          1
max mmap bytes   =   96714752
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 1504.5 sec
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.697636 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1225478144
in use bytes     = 1031935424
Total (incl. mmap):
system bytes     = 1225478144
in use bytes     = 1031935424
max mmap regions =          1
max mmap bytes   =   96714752
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.sub-S18.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.697636 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S18.r02.tshift+orig.BRIK is 11.697636 degrees from plumb.
++ Reading input dataset ./pb02.sub-S18.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 41647 voxels
 + 5946 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-2.044  pitch=+1.355  yaw=+0.328  dS=-0.718  dL=-1.141  dP=-0.927
++ Mean: roll=-1.979  pitch=+1.533  yaw=+0.423  dS=-0.375  dL=-1.102  dP=-0.757
++ Max : roll=-1.915  pitch=+1.728  yaw=+0.708  dS=-0.129  dL=-1.024  dP=-0.562
++ Max displacements (mm) for each sub-brick:
 5.38(0.00) 5.51(0.31) 5.45(0.10) 5.48(0.06) 5.46(0.06) 5.49(0.08) 5.49(0.05) 5.49(0.05) 5.49(0.06) 5.50(0.05) 5.48(0.06) 5.46(0.03) 5.47(0.04) 5.46(0.03) 5.49(0.06) 5.49(0.05) 5.49(0.06) 5.50(0.08) 5.49(0.06) 5.48(0.05) 5.50(0.06) 5.48(0.06) 5.48(0.06) 5.49(0.04) 5.50(0.05) 5.50(0.08) 5.49(0.04) 5.51(0.08) 5.50(0.06) 5.50(0.03) 5.47(0.05) 5.50(0.06) 5.48(0.05) 5.51(0.06) 5.48(0.06) 5.55(0.13) 5.51(0.07) 5.50(0.05) 5.51(0.03) 5.53(0.06) 5.54(0.02) 5.51(0.07) 5.53(0.06) 5.61(0.37) 5.43(0.38) 5.43(0.02) 5.44(0.04) 5.43(0.04) 5.42(0.03) 5.43(0.07) 5.42(0.08) 5.41(0.02) 5.42(0.03) 5.36(0.08) 5.39(0.06) 5.35(0.07) 5.40(0.09) 5.37(0.07) 5.41(0.08) 5.36(0.10) 5.40(0.09) 5.37(0.05) 5.39(0.03) 5.37(0.04) 5.40(0.05) 5.39(0.04) 5.41(0.03) 5.40(0.03) 5.35(0.07) 5.43(0.13) 5.29(0.34) 5.19(0.24) 5.29(0.16) 5.28(0.05) 5.25(0.04) 5.27(0.06) 5.24(0.09) 5.21(0.05) 5.25(0.11) 5.24(0.06) 5.25(0.06) 5.25(0.05) 5.24(0.08) 5.24(0.08) 5.25(0.03) 5.19(0.14) 5.26(0.20) 5.23(0.13) 5.24(0.07) 5.22(0.07) 5.25(0.07) 5.20(0.09) 5.25(0.14) 5.15(0.26) 5.06(0.09) 5.17(0.34) 5.22(0.11) 5.24(0.05) 5.23(0.07) 5.22(0.03) 5.22(0.03) 5.21(0.06) 5.23(0.07) 5.22(0.05) 5.23(0.04) 5.23(0.02) 5.23(0.02) 5.20(0.06) 5.24(0.05) 5.20(0.07) 5.23(0.07) 5.20(0.05) 5.24(0.07) 5.21(0.06) 5.24(0.07) 5.21(0.05) 5.24(0.07) 5.23(0.07) 5.24(0.08) 5.24(0.05) 5.28(0.12) 5.22(0.16) 5.18(0.07) 5.27(0.22) 5.23(0.12) 5.17(0.13) 5.25(0.21) 5.21(0.15) 5.21(0.07) 5.25(0.10) 5.19(0.15) 5.25(0.15) 5.20(0.11) 5.24(0.08) 5.20(0.09) 5.25(0.12) 5.22(0.10) 5.22(0.06) 5.22(0.09) 5.22(0.10) 5.23(0.09) 5.20(0.08) 5.23(0.10) 5.23(0.08) 5.24(0.05) 5.23(0.07) 5.23(0.08) 5.22(0.10) 5.24(0.10) 5.23(0.10) 5.23(0.09) 5.24(0.08) 5.22(0.03) 5.24(0.03) 5.21(0.05) 5.24(0.05) 5.22(0.07) 5.24(0.08) 5.23(0.03) 5.24(0.05) 5.23(0.06) 5.22(0.04) 5.25(0.07) 5.23(0.06) 5.24(0.08) 5.20(0.08) 5.25(0.11) 5.21(0.09) 5.24(0.08) 5.20(0.10) 5.26(0.14) 5.22(0.08) 5.26(0.09) 5.23(0.07) 5.28(0.07) 5.22(0.10) 5.20(0.05) 5.25(0.08) 5.27(0.13) 5.31(0.07) 5.29(0.03) 5.26(0.08) 5.27(0.05) 5.26(0.07) 5.27(0.07) 5.26(0.08) 5.30(0.08) 5.28(0.07) 5.26(0.07) 5.29(0.10) 5.24(0.13) 5.28(0.12) 5.25(0.08) 5.29(0.11) 5.26(0.07) 5.27(0.04) 5.23(0.09) 5.27(0.09) 5.24(0.08) 5.30(0.13) 5.24(0.15) 5.29(0.16) 5.27(0.07) 5.27(0.10) 5.29(0.08) 5.27(0.09) 5.25(0.03) 5.29(0.07) 5.27(0.04) 5.28(0.03) 5.28(0.04) 5.29(0.05) 5.29(0.06) 5.28(0.05) 5.28(0.04) 5.29(0.07) 5.28(0.09) 5.29(0.06) 5.29(0.06) 5.30(0.03) 5.26(0.06) 5.30(0.08) 5.27(0.07) 5.30(0.06) 5.30(0.02) 5.30(0.04) 5.28(0.05) 5.29(0.06) 5.27(0.10) 5.31(0.07) 5.28(0.08) 5.31(0.09) 5.30(0.04) 5.32(0.05) 5.30(0.04) 5.31(0.09) 5.30(0.10) 5.29(0.06) 5.30(0.03) 5.26(0.09) 5.35(0.18) 5.35(0.07) 5.32(0.03) 5.29(0.06) 5.31(0.04) 5.27(0.07) 5.31(0.10) 5.28(0.07) 5.30(0.05) 5.28(0.06) 5.31(0.08) 5.29(0.06) 5.30(0.07) 5.28(0.07) 5.31(0.09) 5.30(0.10) 5.31(0.08) 5.29(0.09) 5.31(0.10) 5.31(0.06) 5.31(0.07) 5.31(0.05) 5.31(0.05) 5.31(0.06) 5.31(0.07) 5.32(0.08) 5.31(0.08) 5.31(0.08) 5.31(0.08) 5.30(0.07) 5.32(0.05) 5.31(0.05) 5.32(0.08) 5.31(0.09) 5.31(0.03) 5.33(0.04) 5.30(0.04) 5.33(0.05) 5.30(0.07) 5.32(0.13) 5.31(0.07) 5.31(0.04) 5.32(0.05) 5.31(0.06) 5.32(0.06) 5.30(0.06) 5.29(0.09) 5.32(0.08) 5.29(0.09) 5.33(0.12) 5.24(0.21) 5.34(0.24) 5.32(0.07) 5.27(0.12) 5.34(0.17) 5.31(0.06) 5.33(0.05) 5.30(0.08) 5.33(0.07) 5.31(0.04) 5.33(0.06) 5.33(0.07) 5.30(0.07) 5.30(0.06) 5.33(0.07) 5.30(0.04) 5.33(0.08) 5.49(0.20) 5.71(0.33) 5.60(0.26) 5.64(0.14) 5.64(0.09) 5.65(0.03) 5.63(0.05) 5.53(0.16) 5.49(0.06) 5.55(0.10) 5.49(0.13) 5.56(0.17) 5.50(0.15) 5.51(0.06) 5.54(0.05) 5.53(0.10) 5.57(0.09) 5.55(0.07) 5.54(0.03) 5.53(0.05) 5.44(0.13) 5.56(0.19) 5.54(0.08) 5.53(0.03) 5.54(0.04) 5.51(0.05) 5.55(0.06) 5.53(0.07) 5.55(0.07) 5.54(0.05) 5.54(0.07) 5.54(0.09) 5.52(0.05) 5.54(0.04) 5.51(0.05) 5.54(0.10) 5.53(0.05) 5.54(0.04) 5.53(0.04) 5.54(0.05) 5.52(0.03) 5.53(0.04) 5.51(0.07) 5.52(0.06) 5.50(0.07) 5.52(0.06) 5.49(0.07) 5.51(0.06) 5.48(0.06) 5.51(0.08) 5.48(0.06) 5.52(0.08) 5.50(0.05) 5.52(0.06) 5.51(0.06) 5.53(0.10) 5.51(0.07) 5.53(0.07) 5.52(0.07) 5.53(0.08) 5.52(0.08) 5.50(0.03) 5.52(0.02) 5.48(0.08) 5.54(0.14) 5.48(0.13) 5.52(0.07) 5.50(0.04) 5.55(0.09) 5.53(0.04) 5.53(0.04) 5.51(0.04) 5.51(0.03) 5.51(0.05) 5.52(0.06) 5.53(0.06) 5.53(0.03) 5.54(0.05) 5.35(0.31) 5.14(0.34) 5.19(0.13) 5.21(0.06) 5.25(0.07) 5.23(0.04) 5.32(0.16) 5.30(0.07) 5.31(0.09) 5.37(0.19) 5.42(0.05) 5.42(0.07) 5.39(0.09) 5.39(0.07) 5.37(0.10) 5.40(0.09) 5.35(0.12) 5.38(0.07) 5.34(0.07) 5.39(0.07) 5.38(0.08) 5.40(0.11) 5.39(0.06) 5.38(0.06) 5.36(0.05) 5.38(0.06) 5.35(0.08)
++ Max displacement in automask = 5.71 (mm) at sub-brick 308
++ Max delta displ  in automask = 0.38 (mm) at sub-brick 44
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.sub-S18.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S18.aff12.1D anatSS.sub-S18_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source pb02.sub-S18.r02.tshift+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S18.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S18.r02.tshift+orig.BRIK is 11.697636 degrees from plumb.
++ opened source dataset 'pb02.sub-S18.r02.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1211506688
in use bytes     = 1017964576
Total (incl. mmap):
system bytes     = 1211506688
in use bytes     = 1017964576
max mmap regions =          1
max mmap bytes   =   96714752
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 1487.0 sec
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.697636 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1211506688
in use bytes     = 1017964736
Total (incl. mmap):
system bytes     = 1211506688
in use bytes     = 1017964736
max mmap regions =          1
max mmap bytes   =   96714752
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.sub-S18.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.697636 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S18.r03.tshift+orig.BRIK is 11.697636 degrees from plumb.
++ Reading input dataset ./pb02.sub-S18.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 41471 voxels
 + 5838 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.816  pitch=+0.038  yaw=+0.570  dS=-0.548  dL=-0.811  dP=+1.079
++ Mean: roll=-0.798  pitch=+0.159  yaw=+0.599  dS=-0.413  dL=-0.798  dP=+1.208
++ Max : roll=-0.767  pitch=+0.279  yaw=+0.634  dS=-0.123  dL=-0.769  dP=+1.324
++ Max displacements (mm) for each sub-brick:
 3.00(0.00) 2.96(0.10) 2.96(0.06) 2.98(0.07) 2.97(0.07) 2.95(0.06) 2.98(0.06) 2.94(0.05) 2.97(0.06) 2.95(0.05) 2.94(0.03) 2.92(0.07) 3.05(0.23) 2.96(0.16) 2.97(0.04) 3.01(0.08) 2.95(0.10) 2.99(0.08) 2.93(0.10) 2.99(0.12) 2.95(0.08) 2.99(0.06) 2.93(0.13) 3.02(0.17) 2.97(0.07) 2.92(0.11) 3.00(0.14) 2.97(0.06) 2.99(0.09) 2.98(0.08) 2.98(0.08) 2.97(0.08) 2.97(0.04) 2.95(0.04) 2.97(0.06) 2.94(0.06) 2.97(0.04) 2.98(0.04) 2.97(0.04) 2.99(0.06) 2.96(0.07) 2.99(0.05) 2.96(0.04) 2.99(0.04) 2.95(0.06) 2.96(0.06) 2.97(0.06) 2.99(0.06) 2.98(0.09) 2.94(0.10) 2.94(0.09) 2.98(0.08) 2.93(0.10) 3.00(0.14) 2.96(0.09) 2.98(0.04) 2.94(0.06) 2.97(0.06) 2.93(0.08) 2.98(0.11) 2.90(0.15) 3.01(0.20) 2.97(0.08) 2.99(0.06) 2.97(0.04) 2.97(0.05) 2.94(0.06) 2.98(0.07) 2.97(0.06) 3.00(0.09) 2.98(0.04) 2.99(0.04) 2.95(0.06) 2.98(0.04) 2.95(0.05) 2.96(0.04) 2.97(0.03) 2.98(0.06) 2.96(0.10) 2.97(0.08) 2.96(0.05) 2.94(0.04) 2.98(0.05) 2.95(0.04) 3.00(0.11) 2.98(0.05) 3.00(0.05) 2.94(0.13) 3.02(0.14) 2.95(0.10) 3.00(0.08) 2.95(0.08) 3.01(0.09) 3.00(0.05) 3.00(0.05) 2.98(0.07) 3.00(0.06) 2.99(0.05) 3.00(0.05) 2.99(0.04) 3.00(0.04) 3.03(0.08) 2.99(0.10) 3.01(0.06) 2.99(0.06) 3.00(0.07) 2.98(0.04) 3.00(0.05) 2.98(0.08) 3.00(0.08) 3.00(0.06) 2.99(0.07) 3.01(0.03) 2.99(0.04) 3.04(0.07) 2.97(0.10) 3.00(0.07) 3.00(0.07) 2.98(0.03) 2.95(0.05) 2.98(0.06) 2.95(0.07) 2.98(0.07) 2.96(0.04) 3.05(0.18) 2.97(0.24) 2.77(0.42) 2.83(0.28) 2.89(0.09) 2.89(0.04) 2.86(0.06) 2.90(0.07) 2.88(0.08) 2.89(0.03) 2.89(0.03) 2.86(0.08) 2.89(0.11) 2.88(0.05) 2.89(0.05) 2.86(0.10) 2.88(0.08) 2.90(0.06) 2.86(0.10) 2.86(0.05) 2.89(0.07) 2.85(0.09) 2.88(0.08) 2.88(0.05) 2.87(0.06) 2.86(0.06) 2.89(0.07) 2.88(0.09) 2.89(0.09) 2.88(0.08) 2.87(0.02) 2.88(0.04) 2.88(0.07) 2.88(0.06) 2.90(0.07) 2.89(0.08) 2.89(0.08) 2.86(0.10) 2.86(0.04) 2.89(0.05) 2.87(0.04) 2.87(0.02) 2.87(0.02) 2.87(0.05) 2.88(0.08) 2.90(0.05) 2.86(0.10) 2.90(0.07) 2.85(0.09) 2.91(0.15) 2.87(0.12) 2.90(0.09) 2.87(0.05) 2.88(0.03) 2.85(0.09) 2.89(0.12) 2.88(0.07) 2.88(0.05) 2.86(0.05) 2.88(0.02) 2.87(0.04) 2.89(0.08) 2.92(0.05) 2.89(0.05) 2.89(0.07) 2.90(0.05) 2.87(0.06) 2.86(0.06) 2.89(0.10) 2.84(0.11) 2.89(0.09) 2.88(0.05) 2.88(0.07) 2.87(0.10) 2.88(0.09) 2.87(0.05) 2.86(0.05) 2.89(0.05) 2.86(0.08) 2.88(0.04) 2.88(0.02) 2.87(0.06) 2.86(0.08) 2.90(0.06) 2.86(0.09) 2.86(0.03) 2.89(0.07) 2.87(0.12) 2.89(0.09) 2.90(0.03) 2.88(0.04) 2.90(0.07) 2.88(0.05) 2.91(0.07) 2.89(0.06) 2.90(0.06) 2.89(0.08) 2.89(0.07) 2.89(0.04) 2.87(0.05) 2.90(0.06) 2.88(0.04) 2.90(0.07) 2.90(0.06) 2.91(0.05) 2.87(0.06) 2.85(0.04) 2.90(0.07) 2.86(0.07) 2.88(0.05) 2.88(0.03) 2.87(0.08) 2.85(0.09) 2.88(0.09) 2.88(0.09) 2.87(0.05) 2.87(0.05) 2.86(0.05) 2.87(0.06) 2.87(0.05) 2.88(0.04) 2.85(0.06) 2.89(0.09) 2.84(0.11) 2.91(0.15) 2.87(0.13) 2.91(0.11) 2.87(0.07) 2.88(0.06) 2.90(0.10) 2.87(0.11) 2.88(0.04) 2.89(0.03) 2.89(0.04) 2.87(0.07) 2.89(0.10) 2.89(0.08) 2.88(0.04) 2.91(0.07) 2.78(0.25) 2.75(0.09) 2.94(0.35) 2.90(0.11) 2.90(0.04) 2.86(0.07) 2.89(0.03) 2.92(0.07) 2.85(0.14) 2.88(0.06) 2.86(0.05) 2.86(0.02) 2.85(0.04) 2.84(0.07) 2.87(0.06) 2.83(0.06) 2.87(0.08) 2.87(0.07) 2.87(0.04) 2.86(0.07) 2.86(0.03) 2.85(0.04) 2.82(0.06) 2.87(0.11) 2.84(0.08) 2.85(0.04) 2.90(0.08) 2.86(0.06) 2.86(0.05) 2.87(0.07) 2.86(0.05) 2.88(0.08)
++ Max displacement in automask = 3.05 (mm) at sub-brick 124
++ Max delta displ  in automask = 0.42 (mm) at sub-brick 126
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.sub-S18.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S18.aff12.1D anatSS.sub-S18_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source pb02.sub-S18.r03.tshift+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S18.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S18.r03.tshift+orig.BRIK is 11.697636 degrees from plumb.
++ opened source dataset 'pb02.sub-S18.r03.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1239535616
in use bytes     = 1045987824
Total (incl. mmap):
system bytes     = 1239535616
in use bytes     = 1045987824
max mmap regions =          1
max mmap bytes   =   96714752
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1108.3 sec
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.697636 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1239535616
in use bytes     = 1045987984
Total (incl. mmap):
system bytes     = 1239535616
in use bytes     = 1045987984
max mmap regions =          1
max mmap bytes   =   96714752
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -cubic -1Dmatrix_save mat.r04.vr.aff12.1D pb02.sub-S18.r04.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.697636 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S18.r04.tshift+orig.BRIK is 12.303345 degrees from plumb.
++ centers of base and input datasets are 1.04 mm apart
++ Reading input dataset ./pb02.sub-S18.r04.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 41626 voxels
 + 5908 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.543  pitch=+0.562  yaw=+0.564  dS=-1.843  dL=-0.445  dP=+0.153
++ Mean: roll=-0.499  pitch=+0.708  yaw=+0.685  dS=-1.547  dL=-0.377  dP=+0.352
++ Max : roll=-0.352  pitch=+0.943  yaw=+0.771  dS=-1.259  dL=-0.272  dP=+0.398
++ Max displacements (mm) for each sub-brick:
 2.89(0.00) 2.87(0.11) 2.93(0.11) 2.91(0.09) 2.89(0.02) 2.91(0.02) 2.87(0.04) 2.93(0.09) 2.91(0.06) 2.95(0.05) 2.90(0.07) 2.89(0.03) 2.94(0.09) 2.94(0.06) 2.94(0.05) 2.97(0.05) 2.95(0.04) 2.95(0.04) 2.91(0.05) 2.95(0.07) 2.95(0.06) 2.98(0.05) 2.95(0.06) 2.93(0.04) 2.97(0.07) 2.97(0.06) 2.95(0.05) 2.95(0.04) 2.93(0.03) 3.00(0.08) 3.00(0.05) 2.99(0.05) 2.98(0.07) 2.95(0.04) 2.99(0.05) 2.96(0.05) 3.00(0.07) 2.99(0.09) 2.95(0.06) 3.05(0.14) 3.03(0.10) 3.02(0.04) 3.03(0.04) 2.98(0.06) 3.03(0.07) 2.97(0.09) 3.00(0.04) 2.95(0.08) 3.02(0.11) 3.01(0.03) 3.04(0.07) 3.04(0.03) 3.00(0.04) 3.05(0.07) 3.01(0.05) 3.04(0.05) 3.05(0.05) 3.05(0.04) 3.08(0.05) 3.05(0.05) 3.04(0.02) 3.07(0.04) 3.07(0.03) 3.08(0.06) 3.06(0.08) 3.06(0.07) 3.06(0.06) 3.03(0.04) 3.05(0.03) 3.04(0.03) 3.06(0.09) 3.10(0.08) 3.07(0.07) 3.05(0.09) 3.07(0.04) 3.06(0.03) 3.05(0.04) 3.11(0.11) 3.09(0.10) 3.09(0.02) 3.11(0.04) 3.08(0.04) 3.12(0.09) 3.11(0.06) 3.12(0.04) 3.10(0.06) 3.02(0.11) 3.09(0.08) 3.09(0.04) 3.11(0.03) 3.11(0.04) 3.11(0.03) 3.14(0.05) 3.14(0.04) 3.15(0.05) 3.16(0.05) 3.12(0.05) 3.18(0.07) 3.11(0.09) 3.12(0.04) 3.10(0.06) 3.14(0.09) 3.14(0.07) 3.14(0.06) 3.15(0.05) 3.10(0.07) 3.20(0.12) 3.10(0.12) 3.13(0.08) 3.12(0.03) 3.17(0.05) 3.13(0.05) 3.19(0.11) 3.15(0.08) 3.19(0.09) 3.16(0.06) 3.12(0.04) 3.19(0.08) 3.15(0.05) 3.20(0.08) 3.18(0.06) 3.18(0.04) 3.18(0.02) 3.21(0.03) 3.17(0.06) 3.14(0.04) 3.21(0.08) 3.14(0.08) 3.25(0.14) 3.16(0.10) 3.24(0.09) 3.18(0.07) 3.21(0.05) 3.14(0.07) 3.25(0.15) 3.19(0.08) 3.24(0.12) 3.17(0.10) 3.18(0.05) 3.23(0.11) 3.24(0.07) 3.23(0.09) 3.24(0.05) 3.19(0.05) 3.25(0.07) 3.22(0.09) 3.24(0.08) 3.25(0.06) 3.28(0.05) 3.24(0.05) 3.25(0.03) 3.18(0.08) 3.24(0.07) 3.23(0.03) 3.26(0.09) 3.26(0.06) 3.25(0.03) 3.29(0.04) 3.25(0.05) 3.30(0.06) 3.24(0.08) 3.29(0.08) 3.21(0.11) 3.26(0.07) 3.18(0.08) 3.25(0.07) 3.22(0.04) 3.32(0.14) 3.21(0.13) 3.28(0.12) 3.24(0.08) 3.28(0.04) 3.23(0.05) 3.35(0.15) 3.26(0.10) 3.26(0.06) 3.23(0.04) 3.31(0.09) 3.28(0.06) 3.26(0.08) 3.27(0.05) 3.25(0.05) 3.28(0.06) 3.27(0.05) 3.31(0.07) 3.32(0.06) 3.30(0.04) 3.30(0.06) 3.25(0.07) 3.25(0.04) 3.26(0.05) 3.29(0.08) 3.29(0.10) 3.31(0.08) 3.32(0.12) 3.32(0.09) 3.30(0.09) 3.35(0.09) 3.30(0.08) 3.28(0.08) 3.31(0.07) 3.28(0.06) 3.30(0.02) 3.25(0.09) 3.32(0.10) 3.29(0.04) 3.32(0.04) 3.26(0.08) 3.28(0.07) 3.27(0.02) 3.25(0.04) 3.19(0.08) 3.27(0.11) 3.30(0.06) 3.35(0.11) 3.35(0.07) 3.34(0.09) 3.33(0.06) 3.29(0.04) 3.32(0.03) 3.31(0.02) 3.33(0.04) 3.32(0.04) 3.33(0.05) 3.34(0.05) 3.36(0.02) 3.31(0.05) 3.36(0.06) 3.33(0.07) 3.35(0.09) 3.35(0.12) 3.31(0.09) 3.34(0.10) 3.33(0.09) 3.39(0.08) 3.27(0.18) 3.22(0.12) 3.22(0.05) 3.29(0.14) 3.23(0.10) 3.26(0.06) 3.25(0.03) 3.21(0.06) 3.33(0.15) 3.27(0.11) 3.34(0.07) 3.27(0.07) 3.35(0.13) 3.25(0.13) 3.40(0.18) 3.31(0.11) 3.33(0.03) 3.33(0.03) 3.31(0.02) 3.36(0.05) 3.28(0.11) 3.37(0.11) 3.34(0.06) 3.40(0.06) 3.31(0.10) 3.36(0.05) 3.30(0.06) 3.36(0.07) 3.37(0.06) 3.36(0.02) 3.30(0.09) 3.39(0.12) 3.35(0.06) 3.29(0.09) 3.38(0.09) 3.33(0.05) 3.42(0.13) 3.30(0.14) 3.43(0.15) 3.34(0.11) 3.33(0.04) 3.41(0.09) 3.31(0.11) 3.36(0.06) 3.33(0.04) 3.39(0.08) 3.39(0.02) 3.40(0.07) 3.40(0.04) 3.36(0.04) 3.37(0.03) 3.37(0.04) 3.34(0.05) 3.35(0.03) 3.31(0.05) 3.36(0.06) 3.30(0.11) 3.38(0.10) 3.37(0.02) 3.40(0.09) 3.37(0.06) 3.38(0.05) 3.35(0.06) 3.40(0.05) 3.40(0.04) 3.43(0.06) 3.36(0.08) 3.43(0.07) 3.36(0.08) 3.47(0.14) 3.36(0.15) 3.32(0.05) 3.44(0.14) 3.35(0.10) 3.43(0.11) 3.37(0.07) 3.42(0.11) 3.42(0.10) 3.45(0.06) 3.42(0.10) 3.39(0.05) 3.43(0.04) 3.33(0.10) 3.47(0.15) 3.39(0.11) 3.44(0.06) 3.42(0.02) 3.47(0.06) 3.43(0.05) 3.47(0.07) 3.43(0.05) 3.45(0.03) 3.36(0.12) 3.53(0.21) 3.38(0.18) 3.41(0.07) 3.48(0.09) 3.43(0.09) 3.37(0.07) 3.47(0.12) 3.45(0.03) 3.50(0.09) 3.39(0.12) 3.50(0.14) 3.39(0.12) 3.48(0.11) 3.39(0.10) 3.48(0.09) 3.44(0.05) 3.49(0.06) 3.39(0.11) 3.54(0.16) 3.43(0.12) 3.53(0.11) 3.41(0.13) 3.46(0.06) 3.43(0.03) 3.51(0.08) 3.42(0.10) 3.45(0.08) 3.40(0.11) 3.45(0.06) 3.44(0.02) 3.47(0.04) 3.44(0.05) 3.47(0.08) 3.45(0.07) 3.44(0.05) 3.38(0.08) 3.49(0.13) 3.39(0.11) 3.48(0.10) 3.38(0.10) 3.53(0.16) 3.43(0.11) 3.50(0.09) 3.50(0.02) 3.40(0.11) 3.50(0.11) 3.43(0.07) 3.51(0.11) 3.46(0.06) 3.52(0.11) 3.54(0.07) 3.47(0.08) 3.55(0.09) 3.52(0.04) 3.54(0.07) 3.49(0.05) 3.45(0.07) 3.48(0.03) 3.48(0.05) 3.53(0.06) 3.47(0.07) 3.54(0.07) 3.48(0.06) 3.60(0.14) 3.50(0.10) 3.58(0.08) 3.58(0.20) 3.61(0.06) 3.51(0.14) 3.48(0.03) 3.55(0.11) 3.63(0.20) 3.61(0.13) 3.53(0.13) 3.52(0.25) 3.09(0.45) 3.24(0.19) 3.23(0.12) 3.39(0.22) 3.29(0.13) 3.49(0.25) 3.44(0.11) 3.39(0.12) 3.57(0.23)
++ Max displacement in automask = 3.63 (mm) at sub-brick 399
++ Max delta displ  in automask = 0.45 (mm) at sub-brick 403
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb02.sub-S18.r04.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S18.aff12.1D anatSS.sub-S18_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source pb02.sub-S18.r04.tshift+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r04.warp.aff12.1D -prefix rm.epi.nomask.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S18.r04.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S18.r04.tshift+orig.BRIK is 12.303345 degrees from plumb.
++ opened source dataset 'pb02.sub-S18.r04.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1211506688
in use bytes     = 1017964576
Total (incl. mmap):
system bytes     = 1211506688
in use bytes     = 1017964576
max mmap regions =          1
max mmap bytes   =   96714752
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r04+tlrc.BRIK
++ total Elapsed time = 1493.2 sec
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r04.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.303345 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1211506688
in use bytes     = 1017964736
Total (incl. mmap):
system bytes     = 1211506688
in use bytes     = 1017964736
max mmap regions =          1
max mmap bytes   =   96714752
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r05.1D -prefix rm.epi.volreg.r05 -cubic -1Dmatrix_save mat.r05.vr.aff12.1D pb02.sub-S18.r05.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.697636 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S18.r05.tshift+orig.BRIK is 12.303345 degrees from plumb.
++ centers of base and input datasets are 1.04 mm apart
++ Reading input dataset ./pb02.sub-S18.r05.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 41638 voxels
 + 5874 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.559  pitch=+0.502  yaw=+0.549  dS=-1.399  dL=-0.439  dP=+0.321
++ Mean: roll=-0.457  pitch=+0.604  yaw=+0.699  dS=-1.149  dL=-0.352  dP=+0.396
++ Max : roll=-0.370  pitch=+0.685  yaw=+0.923  dS=-0.904  dL=-0.273  dP=+0.482
++ Max displacements (mm) for each sub-brick:
 2.69(0.00) 2.78(0.14) 2.71(0.08) 2.71(0.10) 2.71(0.10) 2.75(0.08) 2.72(0.06) 2.72(0.09) 2.73(0.09) 2.77(0.10) 2.75(0.11) 2.81(0.08) 2.75(0.12) 2.77(0.09) 2.75(0.11) 2.79(0.10) 2.74(0.08) 2.77(0.06) 2.71(0.06) 2.77(0.11) 2.69(0.10) 2.79(0.12) 2.73(0.08) 2.80(0.08) 2.75(0.08) 2.82(0.08) 2.75(0.07) 2.78(0.05) 2.74(0.05) 2.81(0.08) 2.71(0.11) 2.77(0.07) 2.72(0.06) 2.77(0.04) 2.71(0.08) 2.82(0.13) 2.72(0.11) 2.87(0.18) 2.75(0.13) 2.75(0.08) 2.73(0.07) 2.79(0.11) 2.71(0.11) 2.77(0.07) 2.74(0.03) 2.75(0.06) 2.79(0.08) 2.75(0.05) 2.84(0.10) 2.78(0.07) 2.87(0.12) 2.77(0.11) 2.81(0.05) 2.74(0.08) 2.84(0.12) 2.78(0.08) 2.74(0.06) 2.82(0.18) 2.84(0.05) 2.76(0.14) 2.82(0.09) 2.74(0.11) 2.84(0.12) 2.77(0.08) 2.83(0.07) 2.79(0.05) 2.85(0.08) 2.81(0.08) 2.84(0.10) 2.83(0.05) 2.83(0.06) 2.82(0.09) 2.82(0.04) 2.80(0.04) 2.82(0.09) 2.86(0.14) 2.86(0.15) 2.87(0.14) 2.78(0.16) 2.80(0.12) 2.76(0.10) 2.80(0.08) 2.75(0.06) 2.82(0.10) 2.84(0.09) 2.81(0.08) 2.77(0.06) 2.81(0.10) 2.74(0.11) 2.81(0.08) 2.84(0.05) 2.84(0.07) 2.81(0.06) 2.82(0.05) 2.78(0.07) 2.80(0.05) 2.80(0.07) 2.80(0.02) 2.70(0.11) 2.81(0.17) 2.70(0.14) 2.86(0.18) 2.75(0.13) 2.84(0.14) 2.80(0.15) 2.77(0.11) 2.80(0.09) 2.77(0.10) 2.84(0.10) 2.78(0.10) 2.78(0.06) 2.88(0.11) 2.76(0.13) 2.78(0.04) 2.81(0.06) 2.56(0.25) 2.72(0.16) 2.72(0.04) 2.76(0.05) 2.69(0.13) 2.78(0.12) 2.62(0.20) 2.76(0.19) 2.67(0.13) 2.84(0.22) 2.68(0.21) 2.85(0.22) 2.73(0.16) 2.87(0.15) 2.80(0.09) 2.78(0.05) 2.84(0.07) 2.72(0.14) 2.82(0.12) 2.74(0.08) 2.78(0.04) 2.76(0.03) 2.74(0.09) 2.78(0.08) 2.78(0.04) 2.80(0.05) 2.78(0.10) 2.77(0.10) 2.79(0.10) 2.80(0.10) 2.80(0.12) 2.81(0.10) 2.78(0.10) 2.80(0.11) 2.75(0.09) 2.76(0.13) 2.68(0.11) 2.81(0.15) 2.66(0.19) 2.72(0.13) 2.71(0.13) 2.74(0.11) 2.74(0.24) 2.80(0.14) 2.75(0.11) 2.74(0.11) 2.81(0.12) 2.69(0.15) 2.76(0.12) 2.67(0.21) 2.77(0.17) 2.69(0.12) 2.83(0.16) 2.72(0.13) 2.80(0.09) 2.68(0.14) 2.77(0.10) 2.68(0.10) 2.80(0.14) 2.73(0.11) 2.82(0.15) 2.73(0.10) 2.68(0.10) 2.85(0.26) 2.68(0.26) 2.77(0.11) 2.72(0.12) 2.80(0.15) 2.72(0.14) 2.74(0.08) 2.73(0.04) 2.68(0.06) 2.79(0.15) 2.67(0.16) 2.80(0.19) 2.71(0.12) 2.70(0.07) 2.58(0.14) 2.79(0.31) 2.66(0.18) 2.79(0.14) 2.65(0.16) 2.80(0.16) 2.67(0.15) 2.78(0.15) 2.74(0.11) 2.80(0.12) 2.78(0.07) 2.76(0.07) 2.75(0.04) 2.79(0.06) 2.73(0.08) 2.84(0.12) 2.66(0.20) 2.84(0.22) 2.67(0.20) 2.66(0.06) 2.70(0.14) 2.73(0.14) 2.69(0.17) 2.69(0.10) 2.78(0.14) 2.69(0.12) 2.84(0.17) 2.71(0.16) 2.81(0.13) 2.70(0.12) 2.83(0.19) 2.71(0.20) 2.78(0.08) 2.71(0.11) 2.83(0.14) 2.75(0.10) 2.79(0.08) 2.76(0.05) 2.78(0.10) 2.88(0.19) 2.86(0.16) 2.72(0.16) 2.68(0.09) 2.79(0.13) 2.76(0.07) 2.74(0.10) 2.81(0.08) 2.70(0.12) 2.83(0.14) 2.69(0.16) 2.73(0.08) 2.73(0.07) 2.81(0.13) 2.80(0.04) 2.69(0.13) 2.87(0.20) 2.72(0.16) 2.87(0.17) 2.76(0.14) 2.79(0.09) 2.76(0.10) 2.87(0.11) 2.76(0.13) 2.69(0.08) 2.76(0.09) 2.77(0.07) 2.82(0.08) 2.79(0.10) 2.72(0.11) 2.89(0.21) 2.77(0.15) 2.76(0.06) 2.82(0.13) 2.78(0.08) 2.87(0.12) 2.79(0.15) 2.82(0.13) 2.80(0.04) 2.71(0.12) 2.75(0.10) 2.88(0.15) 2.75(0.15) 2.74(0.04) 2.74(0.02) 2.67(0.09) 2.74(0.09) 2.65(0.11) 2.84(0.22) 2.67(0.18) 2.77(0.12) 2.72(0.09) 2.80(0.15) 2.70(0.10) 2.88(0.20) 2.74(0.17) 2.81(0.10) 2.74(0.10) 2.75(0.08) 2.80(0.06) 2.69(0.13) 2.93(0.27) 2.78(0.17) 2.79(0.04) 2.71(0.09) 2.76(0.17) 2.76(0.14) 2.78(0.13) 2.74(0.10) 2.78(0.08) 2.75(0.11) 2.71(0.10) 2.78(0.09) 2.78(0.06) 2.76(0.03) 2.78(0.03) 2.88(0.12) 2.67(0.23) 2.90(0.25) 2.79(0.12) 2.85(0.13) 2.78(0.15) 2.86(0.10) 2.76(0.12) 2.84(0.10) 2.71(0.14) 2.86(0.16) 2.80(0.07) 2.77(0.08) 2.73(0.08) 2.78(0.09) 2.71(0.08) 2.80(0.10) 2.70(0.10) 2.82(0.14) 2.66(0.19) 2.90(0.27) 2.66(0.27) 2.87(0.23) 2.75(0.13) 2.72(0.04) 2.89(0.20) 2.70(0.21) 2.89(0.22) 2.81(0.09) 2.77(0.06) 2.91(0.15) 2.78(0.15) 3.02(0.26) 2.88(0.17) 2.76(0.12) 2.88(0.13) 2.78(0.10) 2.95(0.19) 2.80(0.20) 2.79(0.04) 2.84(0.09) 2.82(0.05) 2.83(0.07) 2.75(0.08) 2.89(0.15) 2.74(0.16) 2.87(0.13) 2.78(0.10) 2.87(0.10) 2.82(0.06) 2.97(0.17) 2.86(0.12) 2.81(0.06) 2.95(0.14) 2.79(0.19) 2.98(0.23) 2.87(0.13) 2.86(0.04) 2.86(0.07) 2.96(0.11) 2.86(0.14) 2.91(0.06) 2.90(0.04) 2.90(0.04) 2.85(0.05) 2.82(0.05) 2.93(0.13) 2.79(0.16) 2.95(0.17) 2.85(0.12) 2.94(0.11) 2.83(0.12) 2.92(0.09) 2.84(0.08) 2.94(0.11) 2.84(0.11) 2.93(0.09) 2.86(0.09) 2.94(0.13) 2.84(0.24) 2.94(0.22) 2.90(0.12) 2.97(0.10) 2.87(0.13) 2.96(0.10) 2.89(0.10) 2.93(0.05) 2.86(0.07) 2.98(0.14) 2.97(0.02) 2.96(0.03) 2.89(0.07) 3.00(0.12) 2.90(0.13) 3.04(0.15) 2.93(0.13) 2.96(0.10) 2.83(0.17) 2.95(0.15) 2.86(0.16) 2.96(0.12) 2.95(0.07) 2.92(0.05) 3.01(0.11) 2.87(0.17)
++ Max displacement in automask = 3.04 (mm) at sub-brick 401
++ Max delta displ  in automask = 0.31 (mm) at sub-brick 193
++ Wrote dataset to disk in ./rm.epi.volreg.r05+orig.BRIK
3dcalc -overwrite -a pb02.sub-S18.r05.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S18.aff12.1D anatSS.sub-S18_al_junk_mat.aff12.1D -I mat.r05.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source pb02.sub-S18.r05.tshift+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r05.warp.aff12.1D -prefix rm.epi.nomask.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S18.r05.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S18.r05.tshift+orig.BRIK is 12.303345 degrees from plumb.
++ opened source dataset 'pb02.sub-S18.r05.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1211506688
in use bytes     = 1017964576
Total (incl. mmap):
system bytes     = 1211506688
in use bytes     = 1017964576
max mmap regions =          1
max mmap bytes   =   96714752
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r05+tlrc.BRIK
++ total Elapsed time = 1517.0 sec
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r05.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.303345 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1211506688
in use bytes     = 1017964736
Total (incl. mmap):
system bytes     = 1211506688
in use bytes     = 1017964736
max mmap regions =          1
max mmap bytes   =   96714752
3dTstat -min -prefix rm.epi.min.r05 rm.epi.1.r05+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r05+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r06.1D -prefix rm.epi.volreg.r06 -cubic -1Dmatrix_save mat.r06.vr.aff12.1D pb02.sub-S18.r06.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.697636 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S18.r06.tshift+orig.BRIK is 12.303345 degrees from plumb.
++ centers of base and input datasets are 1.04 mm apart
++ Reading input dataset ./pb02.sub-S18.r06.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 41522 voxels
 + 5823 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.581  pitch=+0.277  yaw=+0.582  dS=-0.893  dL=-0.585  dP=+0.487
++ Mean: roll=-0.408  pitch=+0.490  yaw=+0.921  dS=-0.697  dL=-0.391  dP=+0.637
++ Max : roll=-0.249  pitch=+0.641  yaw=+1.176  dS=-0.506  dL=-0.201  dP=+0.803
++ Max displacements (mm) for each sub-brick:
 2.66(0.00) 2.74(0.26) 2.72(0.12) 2.72(0.06) 2.72(0.08) 2.72(0.07) 2.70(0.07) 2.68(0.05) 2.70(0.05) 2.69(0.10) 2.75(0.11) 2.73(0.05) 2.72(0.03) 2.75(0.09) 2.73(0.10) 2.73(0.07) 2.72(0.05) 2.71(0.04) 2.72(0.05) 2.66(0.09) 2.67(0.05) 2.68(0.07) 2.67(0.05) 2.69(0.07) 2.70(0.07) 2.70(0.10) 2.68(0.08) 2.69(0.06) 2.62(0.10) 2.64(0.11) 2.61(0.10) 2.66(0.08) 2.66(0.07) 2.70(0.08) 2.65(0.08) 2.66(0.06) 2.68(0.09) 2.68(0.09) 2.65(0.05) 2.66(0.03) 2.61(0.06) 2.60(0.04) 2.58(0.11) 2.67(0.13) 2.61(0.08) 2.70(0.14) 2.64(0.08) 2.68(0.08) 2.62(0.07) 2.60(0.07) 2.62(0.08) 2.65(0.06) 2.65(0.11) 2.67(0.10) 2.68(0.06) 2.64(0.06) 2.64(0.08) 2.64(0.16) 2.60(0.04) 2.57(0.11) 2.53(0.08) 2.59(0.06) 2.54(0.07) 2.64(0.14) 2.58(0.09) 2.70(0.22) 2.60(0.20) 2.57(0.03) 2.64(0.15) 2.52(0.16) 2.61(0.25) 2.52(0.20) 2.62(0.14) 2.58(0.11) 2.66(0.16) 2.59(0.10) 2.61(0.06) 2.61(0.05) 2.57(0.08) 2.58(0.09) 2.67(0.19) 2.55(0.19) 2.56(0.14) 2.55(0.11) 2.43(0.18) 2.27(0.18) 2.49(0.29) 2.41(0.16) 2.51(0.13) 2.46(0.14) 2.53(0.09) 2.54(0.08) 2.56(0.08) 2.50(0.08) 2.55(0.12) 2.51(0.17) 2.56(0.18) 2.51(0.09) 2.54(0.09) 2.47(0.08) 2.45(0.05) 2.47(0.05) 2.47(0.13) 2.48(0.11) 2.45(0.10) 2.42(0.06) 2.51(0.13) 2.42(0.14) 2.53(0.13) 2.39(0.16) 2.46(0.11) 2.45(0.16) 2.51(0.08) 2.46(0.09) 2.41(0.13) 2.30(0.16) 2.35(0.13) 2.29(0.07) 2.26(0.10) 2.32(0.11) 2.26(0.10) 2.30(0.08) 2.36(0.08) 2.33(0.04) 2.32(0.08) 2.32(0.04) 2.33(0.07) 2.33(0.05) 2.32(0.07) 2.34(0.07) 2.35(0.04) 2.25(0.13) 2.33(0.09) 2.26(0.07) 2.34(0.11) 2.26(0.11) 2.27(0.05) 2.28(0.04) 2.28(0.10) 2.19(0.38) 2.39(0.33) 2.40(0.07) 2.42(0.05) 2.49(0.13) 2.48(0.05) 2.46(0.04) 2.47(0.03) 2.44(0.05) 2.45(0.05) 2.45(0.03) 2.44(0.01) 2.49(0.07) 2.47(0.06) 2.50(0.06) 2.50(0.08) 2.48(0.04) 2.50(0.03) 2.47(0.04) 2.53(0.08) 2.46(0.08) 2.52(0.11) 2.48(0.08) 2.53(0.08) 2.51(0.05) 2.51(0.05) 2.50(0.05) 2.51(0.06) 2.52(0.07) 2.51(0.06) 2.53(0.06) 2.54(0.06) 2.53(0.06) 2.54(0.06) 2.53(0.03) 2.56(0.05) 2.51(0.06) 2.59(0.12) 2.60(0.12) 2.59(0.07) 2.60(0.06) 2.54(0.08) 2.59(0.10) 2.50(0.14) 2.58(0.09) 2.55(0.06) 2.60(0.08) 2.59(0.04) 2.59(0.07) 2.61(0.07) 2.62(0.07) 2.65(0.10) 2.62(0.12) 2.64(0.10) 2.60(0.09) 2.65(0.11) 2.62(0.09) 2.66(0.07) 2.64(0.06) 2.70(0.07) 2.64(0.06) 2.70(0.07) 2.62(0.10) 2.70(0.10) 2.63(0.09) 2.70(0.07) 2.68(0.03) 2.73(0.06) 2.66(0.09) 2.72(0.06) 2.67(0.05) 2.73(0.08) 2.76(0.06) 2.77(0.05) 2.79(0.07) 2.76(0.10) 2.76(0.17) 2.72(0.07) 2.76(0.10) 2.77(0.10) 2.77(0.11) 2.75(0.14) 2.78(0.06) 2.78(0.02) 2.76(0.04) 2.73(0.04) 2.73(0.07) 2.77(0.11) 2.75(0.12) 2.76(0.10) 2.74(0.08) 2.75(0.03) 2.81(0.07) 2.69(0.14) 2.79(0.12) 2.74(0.11) 2.79(0.08) 2.83(0.09) 2.77(0.11) 2.73(0.08) 2.77(0.12) 2.83(0.10) 2.81(0.12) 2.81(0.07) 2.80(0.12) 2.72(0.19) 2.72(0.08) 2.79(0.11) 2.71(0.21) 2.80(0.13) 2.76(0.08) 2.72(0.05) 2.76(0.06) 2.74(0.10) 2.76(0.12) 2.76(0.06) 2.75(0.09) 2.73(0.09) 2.75(0.12) 2.66(0.24) 2.67(0.24) 2.74(0.22) 2.69(0.33) 2.82(0.26) 2.75(0.15) 2.80(0.08) 2.76(0.06) 2.75(0.07) 2.76(0.13) 2.67(0.13) 2.80(0.17) 2.68(0.17) 2.80(0.20) 2.71(0.10) 2.70(0.05) 2.77(0.09) 2.72(0.08) 2.84(0.18) 2.74(0.11) 2.73(0.08) 2.73(0.06) 2.78(0.09) 2.72(0.12) 2.83(0.16) 2.69(0.17) 2.81(0.28) 2.67(0.16) 2.71(0.13) 2.83(0.16) 2.66(0.20) 2.81(0.20) 2.72(0.12) 2.83(0.13) 2.73(0.15) 2.78(0.22) 2.72(0.12)
++ Max displacement in automask = 2.84 (mm) at sub-brick 276
++ Max delta displ  in automask = 0.38 (mm) at sub-brick 139
++ Wrote dataset to disk in ./rm.epi.volreg.r06+orig.BRIK
3dcalc -overwrite -a pb02.sub-S18.r06.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S18.aff12.1D anatSS.sub-S18_al_junk_mat.aff12.1D -I mat.r06.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source pb02.sub-S18.r06.tshift+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r06.warp.aff12.1D -prefix rm.epi.nomask.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S18.r06.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S18.r06.tshift+orig.BRIK is 12.303345 degrees from plumb.
++ opened source dataset 'pb02.sub-S18.r06.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1225437184
in use bytes     = 1031889936
Total (incl. mmap):
system bytes     = 1225437184
in use bytes     = 1031889936
max mmap regions =          1
max mmap bytes   =   96714752
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r06+tlrc.BRIK
++ total Elapsed time = 1135.2 sec
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S18_WARP.nii mat.r06.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.303345 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1225437184
in use bytes     = 1031890096
Total (incl. mmap):
system bytes     = 1225437184
in use bytes     = 1031890096
max mmap regions =          1
max mmap bytes   =   96714752
3dTstat -min -prefix rm.epi.min.r06 rm.epi.1.r06+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r06+tlrc.BRIK
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D dfile.r04.1D dfile.r05.1D dfile.r06.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD rm.epi.min.r04+tlrc.HEAD rm.epi.min.r05+tlrc.HEAD rm.epi.min.r06+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask_epi_extents+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S18.r01.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S18.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S18.r02.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S18.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S18.r03.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S18.r03.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r04+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S18.r04.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S18.r04.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r05+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S18.r05.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S18.r05.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r06+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.sub-S18.r06.volreg
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.sub-S18.r06.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anatQQ.sub-S18.aff12.1D anatSS.sub-S18_al_junk_mat.aff12.1D -I
3dNwarpApply -master anatQQ.sub-S18+tlrc -dxyz 3 -source vr_base+orig -nwarp anatQQ.sub-S18_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S18+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.697636 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3924819968
in use bytes     = 1696971008
Total (incl. mmap):
system bytes     = 4264005632
in use bytes     = 2036156672
max mmap regions =          1
max mmap bytes   =  339185664
++ Warping:.Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 8.6 sec
3dcopy anatQQ.sub-S18+tlrc anat_final.sub-S18
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.sub-S18+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.sub-S18+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'RHDD(11.07)'
 +        -cmass x y z shifts =   -0.255    4.132   -2.722
 +  shift search range is +/- =   68.373   81.855   65.484
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.147114
   sp   = 0.302027
   mi   = 2.57495
   crM  = 0.0391963
   nmi  = 0.816386
   je   = 2.57495
   hel  = -0.118349
   crA  = 0.201725
   crU  = 0.163038
   lss  = 0.852886
   lpc  = 0.00737954
   lpa  = 0.99262
   lpc+ = 0.114742
   lpa+ = 1.09998
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.1
++ ###########################################################
3dTstat -mean -prefix rm.signal.vreg.r01 pb03.sub-S18.r01.volreg+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.vreg.r01+tlrc.BRIK
3dDetrend -polort 6 -prefix rm.noise.det -overwrite pb03.sub-S18.r01.volreg+tlrc
++ 3dDetrend: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTstat -stdev -prefix rm.noise.vreg.r01 rm.noise.det+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.vreg.r01+tlrc.BRIK
3dcalc -a rm.signal.vreg.r01+tlrc -b rm.noise.vreg.r01+tlrc -c mask_epi_extents+tlrc -expr c*a/b -prefix TSNR.vreg.r01.sub-S18
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.vreg.r01.sub-S18+tlrc.BRIK
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 5827 survived, 16771389 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 223662 survived, 16553554 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dNwarpApply -source copy_af_anat_w_skull+orig -master anat_final.sub-S18+tlrc -ainterp wsinc5 -nwarp anatQQ.sub-S18_WARP.nii anatQQ.sub-S18.aff12.1D -prefix follow_anat_anat_w_skull
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_anat_w_skull+orig'
++ -master dataset is 'anat_final.sub-S18+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3221078016
in use bytes     = 1371729360
Total (incl. mmap):
system bytes     = 3495366656
in use bytes     = 1646018000
max mmap regions =          1
max mmap bytes   =  274288640
++ Warping:.Z
++ Output dataset ./follow_anat_anat_w_skull+tlrc.BRIK
++ total Elapsed time = 9.0 sec
3dNwarpApply -source copy_af_aaseg+orig -master anat_final.sub-S18+tlrc -ainterp NN -nwarp anatQQ.sub-S18_WARP.nii anatQQ.sub-S18.aff12.1D -prefix follow_ROI_aaseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aaseg+orig'
++ -master dataset is 'anat_final.sub-S18+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3318083584
in use bytes     = 1646300592
Total (incl. mmap):
system bytes     = 3318337536
in use bytes     = 1646554544
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aaseg+tlrc.BRIK
++ total Elapsed time = 7.2 sec
3dNwarpApply -source copy_af_aeseg+orig -master pb03.sub-S18.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S18_WARP.nii anatQQ.sub-S18.aff12.1D -prefix follow_ROI_aeseg
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_aeseg+orig'
++ -master dataset is 'pb03.sub-S18.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3318206464
in use bytes     = 1646432720
Total (incl. mmap):
system bytes     = 3318460416
in use bytes     = 1646686672
max mmap regions =          1
max mmap bytes   =     253952
++ Warping:.Z
++ Output dataset ./follow_ROI_aeseg+tlrc.BRIK
++ total Elapsed time = 6.7 sec
3dNwarpApply -source copy_af_FSvent_erode+orig -master pb03.sub-S18.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S18_WARP.nii anatQQ.sub-S18.aff12.1D -prefix follow_ROI_FSvent
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSvent_erode+orig'
++ -master dataset is 'pb03.sub-S18.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3221204992
in use bytes     = 1371854848
Total (incl. mmap):
system bytes     = 3495493632
in use bytes     = 1646143488
max mmap regions =          1
max mmap bytes   =  274288640
++ Warping:.Z
++ Output dataset ./follow_ROI_FSvent+tlrc.BRIK
++ total Elapsed time = 6.7 sec
3dNwarpApply -source copy_af_FSWe_erode+orig -master pb03.sub-S18.r01.volreg+tlrc -ainterp NN -nwarp anatQQ.sub-S18_WARP.nii anatQQ.sub-S18.aff12.1D -prefix follow_ROI_FSWe
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'copy_af_FSWe_erode+orig'
++ -master dataset is 'pb03.sub-S18.r01.volreg+tlrc'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 3221204992
in use bytes     = 1371854976
Total (incl. mmap):
system bytes     = 3495493632
in use bytes     = 1646143616
max mmap regions =          1
max mmap bytes   =  274288640
++ Warping:.Z
++ Output dataset ./follow_ROI_FSWe+tlrc.BRIK
++ total Elapsed time = 7.0 sec
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb03.volreg pb03.sub-S18.r01.volreg+tlrc.HEAD pb03.sub-S18.r02.volreg+tlrc.HEAD pb03.sub-S18.r03.volreg+tlrc.HEAD pb03.sub-S18.r04.volreg+tlrc.HEAD pb03.sub-S18.r05.volreg+tlrc.HEAD pb03.sub-S18.r06.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.2 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.0 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 1.0 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S18.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S18.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S18.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S18.r04.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r04.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S18.r05.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r05.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark

-- running correlation on dataset pb03.sub-S18.r06.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Wrote dataset: ./radcor.20.r06.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

foreach run ( 01 02 03 04 05 06 )
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S18.r01.blur pb03.sub-S18.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S18.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S18.r02.blur pb03.sub-S18.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S18.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S18.r03.blur pb03.sub-S18.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S18.r03.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S18.r04.blur pb03.sub-S18.r04.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S18.r04.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S18.r05.blur pb03.sub-S18.r05.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (489.2 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S18.r05.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6.0 -doall -prefix pb04.sub-S18.r06.blur pb03.sub-S18.r06.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (350.3 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./pb04.sub-S18.r06.blur+tlrc.BRIK

end
foreach run ( 01 02 03 04 05 06 )
3dAutomask -prefix rm.mask_r01 pb04.sub-S18.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S18.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 332.348755
 + Used gradual clip level = 321.416656 .. 354.613953
 + Number voxels above clip level = 70701
 + Clustering voxels ...
 + Largest cluster has 70682 voxels
 + Clustering voxels ...
 + Largest cluster has 70621 voxels
 + Filled    78 voxels in small holes; now have 70699 voxels
 + Clustering voxels ...
 + Largest cluster has 70699 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240597 voxels
 + Mask now has 70699 voxels
++ 70699 voxels in the mask [out of 311296: 22.71%]
++ first   7 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb04.sub-S18.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S18.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 330.856903
 + Used gradual clip level = 318.940613 .. 351.706360
 + Number voxels above clip level = 71035
 + Clustering voxels ...
 + Largest cluster has 71027 voxels
 + Clustering voxels ...
 + Largest cluster has 70933 voxels
 + Filled    75 voxels in small holes; now have 71008 voxels
 + Clustering voxels ...
 + Largest cluster has 71008 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240288 voxels
 + Mask now has 71008 voxels
++ 71008 voxels in the mask [out of 311296: 22.81%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb04.sub-S18.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S18.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 328.658569
 + Used gradual clip level = 318.461334 .. 350.035583
 + Number voxels above clip level = 70844
 + Clustering voxels ...
 + Largest cluster has 70838 voxels
 + Clustering voxels ...
 + Largest cluster has 70760 voxels
 + Filled    72 voxels in small holes; now have 70832 voxels
 + Clustering voxels ...
 + Largest cluster has 70832 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240464 voxels
 + Mask now has 70832 voxels
++ 70832 voxels in the mask [out of 311296: 22.75%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r04 pb04.sub-S18.r04.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S18.r04.blur+tlrc
++ Forming automask
 + Fixed clip level = 331.172760
 + Used gradual clip level = 318.584930 .. 352.477875
 + Number voxels above clip level = 71015
 + Clustering voxels ...
 + Largest cluster has 71007 voxels
 + Clustering voxels ...
 + Largest cluster has 70939 voxels
 + Filled    64 voxels in small holes; now have 71003 voxels
 + Clustering voxels ...
 + Largest cluster has 71003 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240293 voxels
 + Mask now has 71003 voxels
++ 71003 voxels in the mask [out of 311296: 22.81%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r05 pb04.sub-S18.r05.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S18.r05.blur+tlrc
++ Forming automask
 + Fixed clip level = 332.052979
 + Used gradual clip level = 319.526215 .. 352.815613
 + Number voxels above clip level = 70970
 + Clustering voxels ...
 + Largest cluster has 70967 voxels
 + Clustering voxels ...
 + Largest cluster has 70909 voxels
 + Filled    58 voxels in small holes; now have 70967 voxels
 + Clustering voxels ...
 + Largest cluster has 70967 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240329 voxels
 + Mask now has 70967 voxels
++ 70967 voxels in the mask [out of 311296: 22.80%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r06 pb04.sub-S18.r06.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.sub-S18.r06.blur+tlrc
++ Forming automask
 + Fixed clip level = 331.591003
 + Used gradual clip level = 319.257141 .. 351.967194
 + Number voxels above clip level = 70948
 + Clustering voxels ...
 + Largest cluster has 70942 voxels
 + Clustering voxels ...
 + Largest cluster has 70890 voxels
 + Filled    70 voxels in small holes; now have 70960 voxels
 + Filled     1 voxels in large holes; now have 70961 voxels
 + Clustering voxels ...
 + Largest cluster has 70961 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240335 voxels
 + Mask now has 70961 voxels
++ 70961 voxels in the mask [out of 311296: 22.80%]
++ first   8 x-planes are zero [from L]
++ last    8 x-planes are zero [from R]
++ first   7 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD -union -prefix full_mask.sub-S18
++ processing 6 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 6 volumes gives min count 0
++ voxel limits: 0 clipped, 71550 survived, 239746 were zero
++ writing result full_mask.sub-S18...
++ Output dataset ./full_mask.sub-S18+tlrc.BRIK
3dresample -master full_mask.sub-S18+tlrc -input anatQQ.sub-S18+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.sub-S18
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 74316 survived, 236980 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-S18...
++ Output dataset ./mask_anat.sub-S18+tlrc.BRIK
3dmask_tool -input full_mask.sub-S18+tlrc mask_anat.sub-S18+tlrc -inter -prefix mask_epi_anat.sub-S18
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 7636 clipped, 69115 survived, 234545 were zero
++ writing result mask_epi_anat.sub-S18...
++ Output dataset ./mask_epi_anat.sub-S18+tlrc.BRIK
3dABoverlap -no_automask full_mask.sub-S18+tlrc mask_anat.sub-S18+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#A=./full_mask.sub-S18+tlrc.BRIK  B=./mask_anat.sub-S18+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
71550        74316        76751        69115        2435         5201          3.4032      6.9985     1.0337     0.9347     1.0662
3ddot -dodice full_mask.sub-S18+tlrc mask_anat.sub-S18+tlrc
tee out.mask_ae_dice.txt
0.947651	
3dresample -master full_mask.sub-S18+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_centos_7_64/MNI152_2009_template_SSW.nii.gz[0]
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71053 survived, 240243 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
++ Output dataset ./mask_group+tlrc.BRIK
3ddot -dodice mask_anat.sub-S18+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.975985	
foreach run ( 01 02 03 04 05 06 )
3dTstat -prefix rm.mean_r01 pb04.sub-S18.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.sub-S18.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S18.r01.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S18.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.sub-S18.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.sub-S18.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S18.r02.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S18.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.sub-S18.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.sub-S18.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S18.r03.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S18.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb04.sub-S18.r04.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb04.sub-S18.r04.blur+tlrc -b rm.mean_r04+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S18.r04.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S18.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb04.sub-S18.r05.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb04.sub-S18.r05.blur+tlrc -b rm.mean_r05+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S18.r05.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S18.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb04.sub-S18.r06.blur+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb04.sub-S18.r06.blur+tlrc -b rm.mean_r06+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.sub-S18.r06.scale
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.sub-S18.r06.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile motion_demean.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_demean
1d_tool.py -infile motion_deriv.1D -set_run_lengths 412 412 295 412 412 295 -split_into_pad_runs mot_deriv
1d_tool.py -infile dfile_rall.1D -set_run_lengths 412 412 295 412 412 295 -show_censor_count -censor_prev_TR -censor_motion 0.25 motion_sub-S18
total number of censored TRs (simple form) = 14
1deval -a motion_sub-S18_censor.1D -b outcount_sub-S18_censor.1D -expr a*b
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 6
set nt = 412
set run = 01
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r01.1D
end
set nt = 412
set run = 02
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r02.1D
end
set nt = 295
set run = 03
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 03 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r03.1D
end
set nt = 412
set run = 04
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 04 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r04.1D
end
set nt = 412
set run = 05
1dBport -nodata 412 2 -band 0.01 0.1 -invert -nozero
++ Block length: 412
 + Frequency indexes: blocklen=412 :: 1 2 3 4 5 6 7 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 05 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r05.1D
end
set nt = 295
set run = 06
1dBport -nodata 295 2 -band 0.01 0.1 -invert -nozero
++ Block length: 295
 + Frequency indexes: blocklen=295 :: 1 2 3 4 5 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 06 6 -set_run_lengths 412 412 295 412 412 295 -write bpass.r06.1D
end
1dcat bpass.r01.1D bpass.r02.1D bpass.r03.1D bpass.r04.1D bpass.r05.1D bpass.r06.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-S18_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 03 04 05 06 )
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 01 -infile censor_sub-S18_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 5 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb03.sub-S18.r01.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 53 ; remaining = 359
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 359 retained time points MINUS 6 regressors ==> 353 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 119364 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+tlrc.BRIK
++ ===== clock time = 6s 65ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r01 rm.det_pcin_r01+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r01.1D -infile rm.ROIPC.FSvent.r01_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 01 6 -infile - -write ROIPC.FSvent.r01.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 02 -infile censor_sub-S18_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 5 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb03.sub-S18.r02.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 4 ; remaining = 408
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 408 retained time points MINUS 6 regressors ==> 402 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 119591 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+tlrc.BRIK
++ ===== clock time = 6s 290ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r02 rm.det_pcin_r02+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r02.1D -infile rm.ROIPC.FSvent.r02_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 02 6 -infile - -write ROIPC.FSvent.r02.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 03 -infile censor_sub-S18_combined_2.1D -write rm.censor.r03.1D
3dTproject -polort 5 -prefix rm.det_pcin_r03 -censor rm.censor.r03.1D -cenmode KILL -input pb03.sub-S18.r03.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 295 ; censored = 3 ; remaining = 292
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 292 retained time points MINUS 6 regressors ==> 286 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 119659 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r03+tlrc.BRIK
++ ===== clock time = 4s 470ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r03 rm.det_pcin_r03+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r03.1D -infile rm.ROIPC.FSvent.r03_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 03 6 -infile - -write ROIPC.FSvent.r03.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 04 -infile censor_sub-S18_combined_2.1D -write rm.censor.r04.1D
3dTproject -polort 5 -prefix rm.det_pcin_r04 -censor rm.censor.r04.1D -cenmode KILL -input pb03.sub-S18.r04.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 412 ; censored = 2 ; remaining = 410
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 410 retained time points MINUS 6 regressors ==> 404 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 119353 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r04+tlrc.BRIK
++ ===== clock time = 6s 365ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r04 rm.det_pcin_r04+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r04.1D -infile rm.ROIPC.FSvent.r04_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 04 6 -infile - -write ROIPC.FSvent.r04.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 05 -infile censor_sub-S18_combined_2.1D -write rm.censor.r05.1D
3dTproject -polort 5 -prefix rm.det_pcin_r05 -censor rm.censor.r05.1D -cenmode KILL -input pb03.sub-S18.r05.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 412 retained time points MINUS 6 regressors ==> 406 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 119570 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r05+tlrc.BRIK
++ ===== clock time = 6s 124ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r05 rm.det_pcin_r05+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r05.1D -infile rm.ROIPC.FSvent.r05_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 05 6 -infile - -write ROIPC.FSvent.r05.1D
end
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -select_runs 06 -infile censor_sub-S18_combined_2.1D -write rm.censor.r06.1D
3dTproject -polort 5 -prefix rm.det_pcin_r06 -censor rm.censor.r06.1D -cenmode KILL -input pb03.sub-S18.r06.volreg+tlrc
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 295 ; censored = 1 ; remaining = 294
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 294 retained time points MINUS 6 regressors ==> 288 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 119547 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r06+tlrc.BRIK
++ ===== clock time = 4s 546ms
3dpc -mask follow_ROI_FSvent+tlrc -pcsave 3 -prefix rm.ROIPC.FSvent.r06 rm.det_pcin_r06+tlrc
++ 3dpc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
1d_tool.py -censor_fill_parent rm.censor.r06.1D -infile rm.ROIPC.FSvent.r06_vec.1D -write -
1d_tool.py -set_run_lengths 412 412 295 412 412 295 -pad_into_many_runs 06 6 -infile - -write ROIPC.FSvent.r06.1D
end
3dDeconvolve -input pb05.sub-S18.r01.scale+tlrc.HEAD pb05.sub-S18.r02.scale+tlrc.HEAD pb05.sub-S18.r03.scale+tlrc.HEAD pb05.sub-S18.r04.scale+tlrc.HEAD pb05.sub-S18.r05.scale+tlrc.HEAD pb05.sub-S18.r06.scale+tlrc.HEAD -censor censor_sub-S18_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.r01.1D ROIPC.FSvent.r01 -ortvec ROIPC.FSvent.r02.1D ROIPC.FSvent.r02 -ortvec ROIPC.FSvent.r03.1D ROIPC.FSvent.r03 -ortvec ROIPC.FSvent.r04.1D ROIPC.FSvent.r04 -ortvec ROIPC.FSvent.r05.1D ROIPC.FSvent.r05 -ortvec ROIPC.FSvent.r06.1D ROIPC.FSvent.r06 -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -ortvec mot_demean.r04.1D mot_demean_r04 -ortvec mot_demean.r05.1D mot_demean_r05 -ortvec mot_demean.r06.1D mot_demean_r06 -ortvec mot_deriv.r01.1D mot_deriv_r01 -ortvec mot_deriv.r02.1D mot_deriv_r02 -ortvec mot_deriv.r03.1D mot_deriv_r03 -ortvec mot_deriv.r04.1D mot_deriv_r04 -ortvec mot_deriv.r05.1D mot_deriv_r05 -ortvec mot_deriv.r06.1D mot_deriv_r06 -polort 5 -num_stimts 0 -jobs 32 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-S18 -errts errts.sub-S18 -x1D_stop -cbucket all_betas.sub-S18 -bucket stats.sub-S18
++ 3dDeconvolve extending num_stimts from 0 to 1506 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 412 824 1119 1531 1943
++ STAT automask has 191940 voxels (out of 311296 = 61.7%)
++ Skipping check for initial transients
[7m*+ WARNING:[0m Input polort=5; Longest run=824.0 s; Recommended minimum polort=6
++ Number of time points: 2238 (before censor) ; 2175 (after)
 + Number of parameters:  1542 [1542 baseline ; 0 signal]
++ total shared memory needed = 9,414,836,224 bytes (about 9.4 billion)
++ mmap() memory allocated: 9,414,836,224 bytes (about 9.4 billion)
++ Memory required for output bricks = 9,414,836,224 bytes (about 9.4 billion)
** WARNING: in memory plot exceeds 1163231 elements!
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.sub-S18.r01.scale+tlrc.HEAD pb05.sub-S18.r02.scale+tlrc.HEAD pb05.sub-S18.r03.scale+tlrc.HEAD pb05.sub-S18.r04.scale+tlrc.HEAD pb05.sub-S18.r05.scale+tlrc.HEAD pb05.sub-S18.r06.scale+tlrc.HEAD" \
 -Rbeta all_betas.sub-S18_REML -fout -tout \
 -Rbuck stats.sub-S18_REML -Rvar stats.sub-S18_REMLvar \
 -Rfitts fitts.sub-S18_REML -Rerrts errts.sub-S18_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (2175x1542):  2509.14  ++ OK ++
++ ----- Baseline-only matrix condition [X] (2175x1542):  2509.14  ++ OK ++
++ ----- stim_base-only matrix condition [X] (2175x1506):  750.669  ++ OK ++
++ ----- polort-only matrix condition [X] (2175x36):  1.30354  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb05.sub-S18.r01.scale+tlrc.HEAD pb05.sub-S18.r02.scale+tlrc.HEAD pb05.sub-S18.r03.scale+tlrc.HEAD pb05.sub-S18.r04.scale+tlrc.HEAD pb05.sub-S18.r05.scale+tlrc.HEAD pb05.sub-S18.r06.scale+tlrc.HEAD -censor censor_sub-S18_combined_2.1D -cenmode NTRP -ort X.nocensor.xmat.1D -prefix errts.sub-S18.tproject
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 6 input dataset names
++ Auto-catenated dataset has 6 runs
++ input time points = 2238 ; censored = 63 ; remaining = 2175
++ Setting up regressors
++ 6 Blocks * 1 polynomials -- 6 polort regressors
 + -- 1542 other fixed ort regressors
++ 2175 retained time points MINUS 1548 regressors ==> 627 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
++ THD_dset_to_vectim: allocated 2786721792 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 119353 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.sub-S18.tproject+tlrc.BRIK
++ ===== clock time = 5m 41s 177ms
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
-- no warnings for correlation matrix (cut = 0.400) --
tee out.df_info.txt
1d_tool.py -show_df_info -infile X.xmat.1D

initial DF                   : 2238 : 100.0%

DF used for regs of interest :    0 :   0.0%
DF used for censoring        :   63 :   2.8%
DF used for polort           :   36 :   1.6%
DF used for motion           :   72 :   3.2%
DF used for ROIPC            :   18 :   0.8%
DF used for bandpass         : 1416 :  63.3%
total DF used                : 1605 :  71.7%

final DF                     :  633 :  28.3%

3dTcat -prefix all_runs.sub-S18 pb05.sub-S18.r01.scale+tlrc.HEAD pb05.sub-S18.r02.scale+tlrc.HEAD pb05.sub-S18.r03.scale+tlrc.HEAD pb05.sub-S18.r04.scale+tlrc.HEAD pb05.sub-S18.r05.scale+tlrc.HEAD pb05.sub-S18.r06.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 6.8 s
3dTcat -prefix rm.all_runs.volreg pb03.sub-S18.r01.volreg+tlrc.HEAD pb03.sub-S18.r02.volreg+tlrc.HEAD pb03.sub-S18.r03.volreg+tlrc.HEAD pb03.sub-S18.r04.volreg+tlrc.HEAD pb03.sub-S18.r05.volreg+tlrc.HEAD pb03.sub-S18.r06.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 6.7 s
3dcalc -a rm.all_runs.volreg+tlrc -b follow_ROI_FSWe+tlrc -expr a*bool(b) -datum float -prefix rm.all_runs.volreg.mask
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.all_runs.volreg.mask+tlrc.BRIK
3dmerge -1blur_fwhm 60 -doall -prefix Local_FSWe_rall rm.all_runs.volreg.mask+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2657.6 MB)
..............................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./Local_FSWe_rall+tlrc.BRIK

3dcalc -a follow_ROI_FSWe+tlrc -expr a -datum float -prefix rm.mask.anaticor.float
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.mask.anaticor.float+tlrc.BRIK
3dmerge -1blur_fwhm 60 -doall -prefix fanaticor_mask_coverage rm.mask.anaticor.float+tlrc
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (1.2 MB)
.
-- Wrote edited dataset: ./fanaticor_mask_coverage+tlrc.BRIK

3dTproject -polort 0 -input pb05.sub-S18.r01.scale+tlrc.HEAD pb05.sub-S18.r02.scale+tlrc.HEAD pb05.sub-S18.r03.scale+tlrc.HEAD pb05.sub-S18.r04.scale+tlrc.HEAD pb05.sub-S18.r05.scale+tlrc.HEAD pb05.sub-S18.r06.scale+tlrc.HEAD -censor censor_sub-S18_combined_2.1D -cenmode NTRP -dsort Local_FSWe_rall+tlrc -ort X.nocensor.xmat.1D -prefix errts.sub-S18.fanaticor
++ 3dTproject: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 6 input dataset names
++ Auto-catenated dataset has 6 runs
++ input time points = 2238 ; censored = 63 ; remaining = 2175
++ Setting up regressors
++ 6 Blocks * 1 polynomials -- 6 polort regressors
 + -- 1542 other fixed ort regressors
 + -- 1 voxel-wise dsort regressors
++ 2175 retained time points MINUS 1549 regressors ==> 626 D.O.F. left
++ no -mask option ==> processing all 311296 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading datasets
++ THD_dset_to_vectim: allocated 2786721792 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 119353 vectors are constant
++ THD_dset_to_vectim: allocated 2786721792 bytes
[7m*+ WARNING:[0m 3dTproject dsort data :: 27 vectors are constant
++ Starting project-orization
