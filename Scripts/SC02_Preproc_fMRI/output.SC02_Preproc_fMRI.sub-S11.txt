echo auto-generated by afni_proc.py, Mon Nov 16 13:25:58 2020
auto-generated by afni_proc.py, Mon Nov 16 13:25:58 2020
echo (version 7.12, April 14, 2020)
(version 7.12, April 14, 2020)
echo execution started: `date`
date
execution started: Mon Nov 16 14:01:34 EST 2020
afni -ver
Precompiled binary linux_centos_7_64: Nov 12 2020 (Version AFNI_20.3.02 'Vespasian')
afni_history -check_date 27 Jun 2019
-- is current: afni_history as new as: 27 Jun 2019
               most recent entry is:   12 Nov 2020
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-S11
endif
set output_dir = /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI
if ( -d /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI
mkdir /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/stimuli
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D01_Anatomical/anatSS.sub-S11.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/anatSS.sub-S11
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D01_Anatomical/anatUAC.sub-S11.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/copy_af_anat_w_skull
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S11/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/copy_af_aaseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S11/SUMA/aparc.a2009s+aseg.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/copy_af_aeseg
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S11/SUMA/fs_ap_latvent.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/copy_af_FSvent
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/Freesurfer/sub-S11/SUMA/fs_ap_wm.nii.gz /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/copy_af_FSWe
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D01_Anatomical/anatQQ.sub-S11.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/anatQQ.sub-S11
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D01_Anatomical/anatQQ.sub-S11.aff12.1D /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/anatQQ.sub-S11.aff12.1D
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dcopy /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D01_Anatomical/anatQQ.sub-S11_WARP.nii /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/anatQQ.sub-S11_WARP.nii
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/pb00.sub-S11.r01.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D00_OriginalData/sub-S11_SleepAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.9 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/pb00.sub-S11.r02.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D00_OriginalData/sub-S11_SleepDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/pb00.sub-S11.r03.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D00_OriginalData/sub-S11_SleepRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/pb00.sub-S11.r04.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D00_OriginalData/sub-S11_WakeAscending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/pb00.sub-S11.r05.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D00_OriginalData/sub-S11_WakeDescending+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
3dTcat -prefix /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI/pb00.sub-S11.r06.tcat /data/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D00_OriginalData/sub-S11_WakeRSER+orig[5..$]
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
set tr_counts = ( 412 412 295 412 412 295 )
cd /data/SFIM_Vigilance/PRJ_Vigilance_Smk02//PrcsData/sub-S11/D02_Preproc_fMRI
@radial_correlate -nfirst 0 -do_clean yes -rdir radcor.pb00.tcat pb00.sub-S11.r01.tcat+orig.HEAD pb00.sub-S11.r02.tcat+orig.HEAD pb00.sub-S11.r03.tcat+orig.HEAD pb00.sub-S11.r04.tcat+orig.HEAD pb00.sub-S11.r05.tcat+orig.HEAD pb00.sub-S11.r06.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.5 s
++ 3dTcat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ elapsed time = 0.4 s
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.406977 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r01.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r01.automask+orig.BRIK is 12.406977 degrees from plumb.

-- running correlation on dataset pb00.sub-S11.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.406977 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r01+orig.BRIK is 12.406977 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r01+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r01+orig.BRIK is 12.406977 degrees from plumb.
++ Oblique dataset:./epi.r01+orig.BRIK is 12.406977 degrees from plumb.
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.406977 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r02.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r02.automask+orig.BRIK is 12.406977 degrees from plumb.

-- running correlation on dataset pb00.sub-S11.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.406977 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r02+orig.BRIK is 12.406977 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r02+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r02+orig.BRIK is 12.406977 degrees from plumb.
++ Oblique dataset:./epi.r02+orig.BRIK is 12.406977 degrees from plumb.
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.407040 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r03.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r03.automask+orig.BRIK is 12.407040 degrees from plumb.

-- running correlation on dataset pb00.sub-S11.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.407040 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r03+orig.BRIK is 12.407040 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r03+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r03+orig.BRIK is 12.407040 degrees from plumb.
++ Oblique dataset:./epi.r03+orig.BRIK is 12.407040 degrees from plumb.
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 18.695126 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r04.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r04.automask+orig.BRIK is 18.695126 degrees from plumb.

-- running correlation on dataset pb00.sub-S11.r04.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r04+orig.BRIK is 18.695126 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r04+orig.BRIK is 18.695126 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r04+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r04+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r04+orig.BRIK is 18.695126 degrees from plumb.
++ Oblique dataset:./epi.r04+orig.BRIK is 18.695126 degrees from plumb.
++ Wrote dataset: ./radcor.20.r04.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 18.695126 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r05.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r05.automask+orig.BRIK is 18.695126 degrees from plumb.

-- running correlation on dataset pb00.sub-S11.r05.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r05+orig.BRIK is 18.695126 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r05+orig.BRIK is 18.695126 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (103.0 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r05+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r05+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r05+orig.BRIK is 18.695126 degrees from plumb.
++ Oblique dataset:./epi.r05+orig.BRIK is 18.695126 degrees from plumb.
++ Wrote dataset: ./radcor.20.r05.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 18.695137 degrees from plumb.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./radcor.20.r06.automask+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./radcor.20.r06.automask+orig.BRIK is 18.695137 degrees from plumb.

-- running correlation on dataset pb00.sub-S11.r06.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./epi.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./epi.r06+orig.BRIK is 18.695137 degrees from plumb.
++ default -1dindex = 0
++ default -1tindex = 1
++ Oblique dataset:./epi.r06+orig.BRIK is 18.695137 degrees from plumb.
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (73.8 MB)
.......................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r06+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./sphere.mean.20.r06+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./sphere.mean.20.r06+orig.BRIK is 18.695137 degrees from plumb.
++ Oblique dataset:./epi.r06+orig.BRIK is 18.695137 degrees from plumb.
++ Wrote dataset: ./radcor.20.r06.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ have do_clean, cleaning up...

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S11.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r01.tcat+orig.BRIK is 12.406977 degrees from plumb.
++ 43247 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S11.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r02.tcat+orig.BRIK is 12.406977 degrees from plumb.
++ 43312 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S11.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r03.tcat+orig.BRIK is 12.407040 degrees from plumb.
++ 43330 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S11.r04.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r04.tcat+orig.BRIK is 18.695126 degrees from plumb.
++ 42827 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S11.r05.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r05.tcat+orig.BRIK is 18.695126 degrees from plumb.
++ 42665 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 6 -legendre pb00.sub-S11.r06.tcat+orig
++ 3dToutcount: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r06.tcat+orig.BRIK is 18.695137 degrees from plumb.
++ 42942 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dDespike -NEW -nomask -prefix pb01.sub-S11.r01.despike pb00.sub-S11.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r01.tcat+orig.BRIK is 12.406977 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S11.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #4
++ start OpenMP thread #2
++ start OpenMP thread #3
++ start OpenMP thread #12
++ start OpenMP thread #11
++ start OpenMP thread #10
++ start OpenMP thread #13
++ start OpenMP thread #5
++ start OpenMP thread #14
++ start OpenMP thread #9
++ start OpenMP thread #7
++ start OpenMP thread #6
++ start OpenMP thread #1
++ start OpenMP thread #8
........................................................
++ Elapsed despike time =  1s 465ms

++ FINAL: 53157888 data points, 2247380 edits [4.228%], 336626 big edits [0.633%]
++ Output dataset ./pb01.sub-S11.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S11.r02.despike pb00.sub-S11.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r02.tcat+orig.BRIK is 12.406977 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S11.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #12
++ start OpenMP thread #0
++ start OpenMP thread #11
++ start OpenMP thread #8
++ start OpenMP thread #14
++ start OpenMP thread #7
++ start OpenMP thread #5
++ start OpenMP thread #13
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #10
........................................................
++ Elapsed despike time =  1s 286ms

++ FINAL: 53157064 data points, 2223103 edits [4.182%], 284322 big edits [0.535%]
++ Output dataset ./pb01.sub-S11.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S11.r03.despike pb00.sub-S11.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r03.tcat+orig.BRIK is 12.407040 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S11.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #14
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #9
++ start OpenMP thread #13
++ start OpenMP thread #6
++ start OpenMP thread #11
++ start OpenMP thread #3
++ start OpenMP thread #8
++ start OpenMP thread #5
++ start OpenMP thread #7
++ start OpenMP thread #10
++ start OpenMP thread #12
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  905ms

++ FINAL: 38060310 data points, 1455130 edits [3.823%], 95195 big edits [0.250%]
++ Output dataset ./pb01.sub-S11.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S11.r04.despike pb00.sub-S11.r04.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r04.tcat+orig.BRIK is 18.695126 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S11.r04.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #13
++ start OpenMP thread #8
++ start OpenMP thread #5
++ start OpenMP thread #12
++ start OpenMP thread #4
++ start OpenMP thread #10
++ start OpenMP thread #6
++ start OpenMP thread #2
++ start OpenMP thread #14
++ start OpenMP thread #1
++ start OpenMP thread #9
++ start OpenMP thread #3
++ start OpenMP thread #11
++ start OpenMP thread #0
++ start OpenMP thread #7
........................................................
++ Elapsed despike time =  1s 432ms

++ FINAL: 53155416 data points, 2093965 edits [3.939%], 168745 big edits [0.317%]
++ Output dataset ./pb01.sub-S11.r04.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S11.r05.despike pb00.sub-S11.r05.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r05.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r05.tcat+orig.BRIK is 18.695126 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 412
++ using 412 time points => -corder 14
++ Loading dataset pb00.sub-S11.r05.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #12
++ start OpenMP thread #8
++ start OpenMP thread #13
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #11
++ start OpenMP thread #6
++ start OpenMP thread #4
++ start OpenMP thread #1
++ start OpenMP thread #9
++ start OpenMP thread #7
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #3
........................................................
++ Elapsed despike time =  1s 327ms

++ FINAL: 53157888 data points, 2110114 edits [3.970%], 201339 big edits [0.379%]
++ Output dataset ./pb01.sub-S11.r05.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-S11.r06.despike pb00.sub-S11.r06.tcat+orig
++ 3dDespike: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-S11.r06.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-S11.r06.tcat+orig.BRIK is 18.695137 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 295
++ using 295 time points => -corder 10
++ Loading dataset pb00.sub-S11.r06.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #12
++ start OpenMP thread #8
++ start OpenMP thread #14
++ start OpenMP thread #10
++ start OpenMP thread #4
++ start OpenMP thread #3
++ start OpenMP thread #9
++ start OpenMP thread #2
++ start OpenMP thread #7
++ start OpenMP thread #11
++ start OpenMP thread #0
++ start OpenMP thread #6
++ start OpenMP thread #13
++ start OpenMP thread #1
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  963ms

++ FINAL: 38060900 data points, 1434210 edits [3.768%], 88303 big edits [0.232%]
++ Output dataset ./pb01.sub-S11.r06.despike+orig.BRIK
end
foreach run ( 01 02 03 04 05 06 )
3dTshift -tzero 0 -quintic -prefix pb02.sub-S11.r01.tshift pb01.sub-S11.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S11.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S11.r01.despike+orig.BRIK is 12.406977 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S11.r02.tshift pb01.sub-S11.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S11.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S11.r02.despike+orig.BRIK is 12.406977 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S11.r03.tshift pb01.sub-S11.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S11.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S11.r03.despike+orig.BRIK is 12.407040 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S11.r04.tshift pb01.sub-S11.r04.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S11.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S11.r04.despike+orig.BRIK is 18.695126 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S11.r05.tshift pb01.sub-S11.r05.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S11.r05.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S11.r05.despike+orig.BRIK is 18.695126 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.sub-S11.r06.tshift pb01.sub-S11.r06.despike+orig
++ 3dTshift: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-S11.r06.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-S11.r06.despike+orig.BRIK is 18.695137 degrees from plumb.
end
3dbucket -prefix vr_base pb02.sub-S11.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
align_epi_anat.py -anat2epi -anat anatSS.sub-S11+orig -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.62
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S11+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S11*
#Script is running (command trimmed):
  3dcopy ./anatSS.sub-S11+orig ./anatSS.sub-S11_unflipped+orig
++ 3dcopy: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#Script is running (command trimmed):
  3dinfo ./anatSS.sub-S11_unflipped+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D02_Preproc_fMRI/anatSS.sub-S11_unflipped+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D02_Preproc_fMRI/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./anatSS.sub-S11_unflipped+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./anatSS.sub-S11_unflipped_ob -newgrid 1.000000 ./anatSS.sub-S11_unflipped+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./anatSS.sub-S11_unflipped_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./anatSS.sub-S11_unflipped_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.406977 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 286.477509
 + Used gradual clip level = 266.189880 .. 321.574646
 + Number voxels above clip level = 43591
 + Clustering voxels ...
 + Largest cluster has 43159 voxels
 + Clustering voxels ...
 + Largest cluster has 42823 voxels
 + Filled   444 voxels in small holes; now have 43267 voxels
 + Filled     2 voxels in large holes; now have 43269 voxels
 + Clustering voxels ...
 + Largest cluster has 43269 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 87802 voxels
 + Mask now has 43270 voxels
++ 43270 voxels in the mask [out of 131072: 33.01%]
++ first   9 x-planes are zero [from R]
++ last   10 x-planes are zero [from L]
++ first   0 y-planes are zero [from P]
++ last    3 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_ts_ns+orig
#++ Applying threshold of 728.149475 on /vf/users/SFIM_Vigilance/PRJ_Vigilance_Smk02/PrcsData/sub-S11/D02_Preproc_fMRI/vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_ts_ns_wt -a ./vr_base_ts_ns+orig -expr 'min(1,(a/728.149475))'
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./anatSS.sub-S11_unflipped_ob_al_junk_wtal -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S11_unflipped_ob+orig -prefix ./anatSS.sub-S11_unflipped_ob_temp_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S11_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.406977 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.406977 degrees from plumb.
++ Source dataset: ./anatSS.sub-S11_unflipped_ob+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1648303 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=5
++ Zero-pad: zbot=8 ztop=8
++ 43269 voxels [18.3%] in weight mask
++ Output dataset ./anatSS.sub-S11_unflipped_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 43269
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 30.972 38.768 24.793 (index)
 + source center of mass = 128.345 157.936 189.360 (index)
 + source-target CM = -1.604 7.371 -4.137 (xyz)
 + estimated center of mass shifts = -1.604 7.371 -4.137
++ shift param auto-range: -62.3..59.1 -65.8..80.6 -60.7..52.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.604271 .. 8.395729  center = -1.604271
 + Range param#2 [y-shift] = -2.629498 .. 17.370502  center = 7.370502
 + Range param#3 [z-shift] = -14.137352 .. 5.862648  center = -4.137352
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.604271 .. 38.395729  center = -1.604271
 + Range param#2 [y-shift] = -32.629498 .. 47.370502  center = 7.370502
 + Range param#3 [z-shift] = -44.137352 .. 35.862648  center = -4.137352
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -41.604 ..   38.396
 +       y-shift =  -32.629 ..   47.371
 +       z-shift =  -44.137 ..   35.863
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1648303 [out of 24584560] voxels
 + base mask has 57701 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - copying weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 276.127 .. 1035.48; base clip 195.977 .. 747.747
 +  - versus source range 0.631188 .. 947.388; base range 0 .. 906.013
 + 38172 total points stored in 346 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o+o-+o..-+o.o---ooo..--+.$.. + - best 45 costs found:
    0 v= 0.477242:  -1.60   7.37  -4.14   0.00   0.00   0.00  [grid]
    1 v= 0.710067: -28.27  -5.96 -17.47 -15.00  15.00 -15.00  [grid]
    2 v= 0.741183:  11.73  -5.96 -17.47 -15.00  15.00  30.00  [grid]
    3 v= 0.757018:  25.06  -5.96 -17.47  15.00  15.00  15.00  [grid]
    4 v= 0.757272: -34.09  -7.32   7.67 -11.16   9.40 -34.39  [rand]
    5 v= 0.769614: -35.93  -9.21   4.47 -16.34   8.64 -40.54  [rand]
    6 v= 0.779845: -14.94  -5.96 -17.47  15.00  15.00 -30.00  [grid]
    7 v= 0.784262:  32.72  -9.21   4.47  16.34   8.64  40.54  [rand]
    8 v= 0.788045: -10.25 -13.06 -21.61 -25.20  18.50  13.54  [rand]
    9 v= 0.812216:   7.04 -13.06 -21.61  25.20  18.50 -13.54  [rand]
   10 v= 0.830223: -17.59 -12.12   1.59 -20.53   3.14 -10.08  [rand]
   11 v= 0.849336: -17.59 -12.12  -9.86 -20.53   3.14  10.08  [rand]
   12 v= 0.856230:  30.88  -7.32   7.67  11.16   9.40  34.39  [rand]
   13 v= 0.900650: -17.59 -12.12   1.59 -20.53  -3.14 -10.08  [rand]
   14 v= 0.905768: -14.94 -19.30 -17.47 -30.00  15.00  15.00  [grid]
   15 v= 0.907471: -28.27  -5.96   9.20 -30.00 -15.00 -15.00  [grid]
   16 v= 0.914196: -28.27 -19.30 -17.47 -15.00  30.00 -15.00  [grid]
   17 v= 0.917570: -14.94  -5.96   9.20 -15.00 -15.00 -15.00  [grid]
   18 v= 0.934671:  14.38 -12.12   1.59  20.53   3.14  10.08  [rand]
   19 v= 0.936444:  11.73  -5.96 -17.47  30.00  15.00 -15.00  [grid]
   20 v= 0.944993:  14.38 -12.12  -9.86  20.53   3.14 -10.08  [rand]
   21 v= 0.946816:  11.73 -19.30 -17.47  30.00  15.00 -15.00  [grid]
   22 v= 0.951804: -17.75  -2.09  20.21 -20.99 -15.73 -16.09  [rand]
   23 v= 0.957969: -14.94  -5.96 -17.47 -30.00  15.00  15.00  [grid]
   24 v= 0.969518: -15.81  -2.08  -8.98  15.99  13.53 -29.93  [rand]
   25 v= 0.972921:  25.06 -19.30 -17.47  15.00  30.00  15.00  [grid]
   26 v= 0.978477:  11.73 -19.30 -17.47 -15.00  15.00  30.00  [grid]
   27 v= 0.979183: -28.27  -5.96  22.53 -30.00 -15.00 -30.00  [grid]
   28 v= 0.982064:  11.73  -5.96   9.20  15.00 -15.00  15.00  [grid]
   29 v= 0.982141:  14.38 -12.12   1.59  20.53  -3.14  10.08  [rand]
   30 v= 0.982483: -17.59 -12.12  -9.86 -20.53   3.14 -10.08  [rand]
   31 v= 1.000969:  12.60  -2.08  -8.98 -15.99  13.53  29.93  [rand]
   32 v= 1.005707: -28.27 -19.30 -17.47 -15.00  15.00 -15.00  [grid]
   33 v= 1.012012: -14.94 -19.30 -17.47  15.00  15.00 -30.00  [grid]
   34 v= 1.013364:  23.09   2.76  12.25   8.97 -18.72  30.56  [rand]
   35 v= 1.014650:  25.06  -5.96   9.20  30.00 -15.00  15.00  [grid]
   36 v= 1.025168:  25.06 -19.30 -17.47  15.00  15.00  15.00  [grid]
   37 v= 1.033845: -24.46 -16.20 -14.55   5.91  29.74 -29.45  [rand]
   38 v= 1.037286:  23.09  11.98  12.25   8.97 -18.72  30.56  [rand]
   39 v= 1.048412: -11.93 -21.44 -19.15 -30.67  17.79  20.52  [rand]
   40 v= 1.052796:  14.38 -12.12  -9.86  20.53   3.14  10.08  [rand]
   41 v= 1.059386:   8.72 -21.44 -19.15  30.67  17.79 -20.52  [rand]
   42 v= 1.066406: -19.94 -18.77 -10.18  -6.51  20.18  -7.56  [rand]
   43 v= 1.072322: -14.94  -5.96   9.20 -30.00 -15.00  15.00  [grid]
   44 v= 1.072659: -14.94  -5.96 -17.47 -15.00  15.00  15.00  [grid]
 + - A little optimization:*[#8004=0.44709] *[#8009=0.213116] *[#8010=0.20824] *[#8021=0.0722626] *[#8022=0.0639566] *[#8023=0.0612858] *[#8024=0.0256418] *[#8025=0.00237153] *[#8028=-0.14829] *[#8029=-0.241373] *[#8034=-0.264454] *[#8035=-0.268387] *[#8040=-0.284958] .............................................
 + - costs of the above after a little optimization:
  * 0 v=-0.284958:  -2.80  -0.57  -4.31  -2.12   1.88   1.39  [grid]
    1 v= 0.081436:  -7.78  -3.73  -6.75  -3.41   3.65  -1.47  [grid]
    2 v= 0.692753:  12.49  -5.68 -16.93 -11.93  13.29  28.55  [grid]
    3 v= 0.576825:  19.11  -0.06  -5.82   5.07   3.27  20.85  [grid]
    4 v= 0.652826: -31.40  -2.20   4.63 -11.72   3.27 -32.19  [rand]
    5 v= 0.700567: -36.25  -8.06   5.05 -15.05   8.81 -36.04  [rand]
    6 v= 0.187540:  -9.98  -3.22  -6.97  -4.19   3.52  -2.75  [grid]
    7 v= 0.697820:  32.76  -2.97   3.26  12.37   6.61  37.82  [rand]
    8 v= 0.208250:  -4.46  -6.29 -12.14  -2.38   6.98   0.13  [rand]
    9 v= 0.747594:   5.20 -12.77 -19.30  21.65  15.79 -12.27  [rand]
   10 v= 0.638446: -21.51  -4.84  -3.27 -21.21   1.57  -1.90  [rand]
   11 v= 0.144715:  -3.79  -5.63 -10.59  -3.58   5.86   1.91  [rand]
   12 v= 0.686567:  32.16  -1.59  -0.26   9.29   6.85  36.60  [rand]
   13 v= 0.322118: -12.51  -3.78  -6.99  -4.16   4.70  -5.38  [rand]
   14 v= 0.033338:  -7.30  -1.90  -5.76  -4.07   2.65   0.20  [grid]
   15 v= 0.612211: -28.30   0.25   1.75 -14.65  -0.78 -19.85  [grid]
   16 v= 0.523016: -16.88  -2.23  -6.84  -9.43   3.54  -6.03  [grid]
   17 v= 0.187003:  -8.68   0.87  -0.25  -3.31   0.04  -3.60  [grid]
   18 v=-0.004337:  -0.22  -3.02  -6.91  -0.34   3.76   0.83  [rand]
   19 v= 0.433574:  -5.56   0.39  -4.59   3.22  -0.25  -5.86  [grid]
   20 v=-0.129360:  -0.51  -1.43  -5.33  -1.53   2.77   2.49  [rand]
   21 v= 0.044187:  -1.05  -3.86  -8.71  -0.86   4.48   1.33  [grid]
   22 v= 0.214105:  -8.09   3.12  -0.19  -1.67  -1.27  -3.89  [rand]
   23 v= 0.069853:  -5.70  -4.85  -7.12  -3.39   4.59  -0.20  [grid]
   24 v= 0.222609:   1.69  -6.05 -11.31   0.39   6.16   1.78  [rand]
   25 v= 0.777809:  25.07 -13.99 -18.00  13.36  22.01  16.32  [grid]
   26 v= 0.565715:   1.59  -3.07  -5.90  -3.11   4.67  14.59  [grid]
   27 v= 0.705899: -31.57  -0.58  14.36 -20.15  -7.46 -33.56  [grid]
   28 v= 0.597212:  18.32   3.51   3.12  10.97  -3.51  11.69  [grid]
   29 v=-0.271335:  -3.09   0.88  -2.83  -1.95   0.63   0.85  [rand]
   30 v= 0.230584:  -9.58  -5.21  -9.52  -4.28   5.05  -1.59  [rand]
   31 v=-0.136367:  -1.19  -2.21  -5.54  -2.13   2.99   2.24  [rand]
   32 v= 0.731682: -27.43 -14.55 -15.61 -14.82  20.29 -15.74  [grid]
   33 v= 0.564182: -16.15  -5.68 -15.96  -8.73  12.52  -6.75  [grid]
   34 v= 0.643659:  20.31   3.60   7.46   8.03  -6.44  29.93  [rand]
   35 v= 0.567248:  16.29  -0.55  -9.97   4.57   4.18  16.80  [grid]
   36 v= 0.553818:  14.25  -3.71 -13.03   3.58   8.56  13.56  [grid]
   37 v= 0.582585: -20.81  -3.81 -14.31 -11.47  11.11  -9.61  [rand]
   38 v= 0.627450:  14.33   2.53   4.80   2.53  -7.81  29.17  [rand]
   39 v= 0.750801:  -9.24 -13.46 -20.34 -24.12  16.92  13.18  [rand]
   40 v= 0.577972:  12.39   0.64  -5.09  12.24   2.93   3.64  [rand]
   41 v= 0.814751:   9.81 -14.85 -19.68  26.99  16.94 -12.12  [rand]
   42 v= 0.600674: -19.92  -6.61 -15.85 -11.61  13.13  -7.96  [rand]
   43 v= 0.245989:  -7.10   5.51   3.23  -3.55  -3.49  -0.88  [grid]
   44 v=-0.073119:  -4.59  -3.37  -7.10  -3.13   3.75   0.74  [grid]
 + - save # 0 for possible use in twobest
 + - skip #29 for twobest: too close to set # 0
 + - skip #31 for twobest: too close to set # 0
 + - skip #20 for twobest: too close to set # 0
 + - skip #44 for twobest: too close to set # 0
 + - skip #18 for twobest: too close to set # 0
 + - skip #14 for twobest: too close to set #44
 + - skip #21 for twobest: too close to set #31
 + - skip #23 for twobest: too close to set #44
 + - skip # 1 for twobest: too close to set #44
 + - skip #11 for twobest: too close to set #44
 + - save #17 for possible use in twobest
 + - skip # 6 for twobest: too close to set #14
 + - skip # 8 for twobest: too close to set #21
 + - skip #22 for twobest: too close to set #17
 + - skip #24 for twobest: too close to set #21
 + - skip #30 for twobest: too close to set #14
 + - skip #43 for twobest: too close to set #22
 + - skip #13 for twobest: too close to set # 6
 + - save #19 for possible use in twobest
 + - save #16 for possible use in twobest
 + - save #36 for possible use in twobest
 + - save #33 for possible use in twobest
 + - save #26 for possible use in twobest
 + - skip #35 for twobest: too close to set #36
 + - save # 3 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save #37 for possible use in twobest
 + - save #28 for possible use in twobest
 + - skip #42 for twobest: too close to set #33
 + - save #15 for possible use in twobest
 + - save #38 for possible use in twobest
 + - save #10 for possible use in twobest
 + - save #34 for possible use in twobest
 + - save # 4 for possible use in twobest
 + - save #12 for possible use in twobest
 + - save # 2 for possible use in twobest
 + - skip # 7 for twobest: too close to set #12
 + - save # 5 for possible use in twobest
 + - save #27 for possible use in twobest
 + - save #32 for possible use in twobest
 + - save # 9 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 278.683 .. 1046.23; base clip 196.638 .. 763.097
 +  - versus source range 0.071742 .. 947.041; base range 0 .. 908.693
 + 37788 total points stored in 364 'RHDD(12.342)' bloks
*[#11034=-0.287127] *[#11037=-0.305404] *[#11038=-0.311616] *[#11041=-0.315035] *[#11042=-0.315968] *[#11044=-0.319095] *[#11056=-0.31957] *[#11059=-0.319702] 
 + - param set #1 has cost=-0.319702
 + -- Parameters = -2.8173 -0.4976 -4.2041 -1.8488 1.9039 0.8142 1.0050 1.0009 0.9983 0.0012 -0.0011 0.0015
 + - param set #2 has cost=-0.300159
 + -- Parameters = -4.2416 -0.7042 -4.0985 -2.2714 1.9829 -0.1173 1.0019 0.9981 1.0020 0.0008 0.0161 0.0068
 + - param set #3 has cost=-0.265245
 + -- Parameters = -4.4878 1.2509 -2.4290 -2.3158 0.7471 -0.3289 1.0062 1.0097 0.9880 0.0012 0.0029 -0.0030
 + - param set #4 has cost=0.188114
 + -- Parameters = -8.5773 -4.1532 -6.8661 -4.6367 4.3891 -0.4606 1.0086 0.9977 0.9827 -0.0012 -0.0056 0.0024
 + - param set #5 has cost=0.203872
 + -- Parameters = 5.9435 -3.9241 -5.0791 1.6472 4.6858 3.9883 0.9993 0.9999 0.9781 0.0292 -0.0169 0.0171
 + - param set #6 has cost=0.267552
 + -- Parameters = -8.5993 -8.8060 -11.1538 -3.9324 7.5871 -1.8180 0.9854 0.9726 1.0138 -0.0070 -0.0006 0.0246
 + - param set #7 has cost=-0.174690
 + -- Parameters = -0.9502 -1.5025 -4.6888 -1.5641 2.2404 2.1141 0.9923 0.9949 0.9974 0.0024 -0.0085 0.0002
 + - param set #8 has cost=0.239459
 + -- Parameters = 10.2763 -3.4452 -5.5556 3.5296 3.4312 6.7731 0.9830 0.9707 1.0000 0.0774 -0.1110 0.0184
 + - param set #9 has cost=0.183207
 + -- Parameters = -1.3590 2.0976 1.1167 -0.3627 0.4163 -0.1345 1.0073 1.0111 0.9874 -0.0251 0.0106 0.0419
 + - param set #10 has cost=0.498634
 + -- Parameters = -17.7948 -5.3789 -12.3563 -6.4443 6.9181 -7.6861 0.9783 0.9592 0.9893 0.0002 0.0003 0.0242
 + - param set #11 has cost=0.409028
 + -- Parameters = 9.2865 2.6974 1.6059 5.5557 -1.2738 2.5489 0.9614 1.0285 0.9447 0.0120 -0.0415 -0.0061
 + - param set #12 has cost=-0.317278
 + -- Parameters = -3.0743 0.6379 -3.1852 -2.0261 1.5962 0.6999 1.0047 1.0140 0.9826 0.0090 0.0085 -0.0019
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0428 
 + --- dist(#3,#1) = 0.0773 
 + --- dist(#4,#1) = 0.0279 
 + --- dist(#5,#1) = 0.0346 
 + --- dist(#6,#1) = 0.182 
 + --- dist(#7,#1) = 0.072 
 + --- dist(#8,#1) = 0.126 
 + --- dist(#9,#1) = 0.495 
 + --- dist(#10,#1) = 0.104 
 + --- dist(#11,#1) = 0.182 
 + --- dist(#12,#1) = 0.187 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 280.654 .. 1058.66; base clip 197.353 .. 779.589
 +  - versus source range 0.00102157 .. 947.042; base range 0 .. 911.284
 + 38287 total points stored in 382 'RHDD(12.2051)' bloks
 + - param set #1 has cost=-0.289390
 + -- Parameters = -2.8599 -0.4217 -4.1413 -1.8816 1.8314 0.7625 1.0056 1.0015 0.9990 0.0084 -0.0009 0.0020
 + - param set #2 has cost=-0.289166
 + -- Parameters = -3.2329 0.8343 -3.0906 -1.7965 1.2978 0.3461 1.0044 1.0124 0.9850 0.0096 0.0086 -0.0023
 + - param set #3 has cost=-0.277152
 + -- Parameters = -3.9818 -0.7096 -3.9514 -2.0764 2.0309 -0.0537 1.0031 1.0001 1.0003 0.0012 0.0165 0.0104
 + - param set #4 has cost=-0.287252
 + -- Parameters = -3.6547 0.9279 -3.0912 -2.0007 1.1084 0.1144 1.0082 1.0093 0.9901 0.0020 0.0154 -0.0024
 + - param set #5 has cost=-0.268890
 + -- Parameters = -2.1662 -0.7462 -4.3261 -1.4488 2.1131 0.9849 1.0054 0.9999 1.0021 0.0149 -0.0078 0.0077
 + - param set #6 has cost=-0.116891
 + -- Parameters = -2.4469 0.6875 -0.5765 -1.5170 1.3563 0.6958 1.0103 1.0029 0.9794 0.0141 0.0170 0.0308
 + - param set #7 has cost=-0.034116
 + -- Parameters = -6.0411 -2.4832 -5.5471 -2.8382 3.4258 -0.9294 0.9920 1.0014 0.9937 -0.0174 0.0034 0.0087
 + - param set #8 has cost=-0.150509
 + -- Parameters = -0.6845 -2.2760 -2.6502 -1.1808 2.5806 2.0114 1.0069 0.9827 0.9847 0.0227 -0.0199 0.0268
 + - param set #9 has cost=0.161495
 + -- Parameters = 6.4835 -3.2959 -5.0924 1.4654 3.6036 6.4004 0.9900 0.9779 1.0064 0.0936 -0.1110 0.0294
 + - param set #10 has cost=0.119777
 + -- Parameters = -5.9903 -8.0475 -9.4395 -3.2652 5.8917 -0.6395 0.9633 0.9620 1.0409 -0.0366 0.0167 0.0419
 + - param set #11 has cost=0.050518
 + -- Parameters = 1.1312 3.8639 -0.5608 -1.1007 -0.6394 3.2535 0.9760 1.0214 0.9620 0.0093 -0.0404 -0.0229
 + - param set #12 has cost=0.292597
 + -- Parameters = -8.7234 -4.9479 -1.9627 -3.4073 3.3672 -2.9690 0.9454 0.9539 0.9865 0.0005 0.0077 0.0571
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0427 
 + --- dist(#3,#1) = 0.0736 
 + --- dist(#4,#1) = 0.0784 
 + --- dist(#5,#1) = 0.0309 
 + --- dist(#6,#1) = 0.112 
 + --- dist(#7,#1) = 0.13 
 + --- dist(#8,#1) = 0.116 
 + --- dist(#9,#1) = 0.178 
 + --- dist(#10,#1) = 0.202 
 + --- dist(#11,#1) = 0.495 
 + --- dist(#12,#1) = 0.248 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 282.044 .. 1068.87; base clip 197.907 .. 793.948
 +  - versus source range 0 .. 947.042; base range 0 .. 913.412
 + 38773 total points stored in 398 'RHDD(12.1215)' bloks
 + - param set #1 has cost=-0.235669
 + -- Parameters = -2.8754 -0.3439 -4.0400 -1.8692 1.8144 0.7439 1.0064 1.0017 0.9982 0.0074 -0.0009 0.0024
 + - param set #2 has cost=-0.234538
 + -- Parameters = -3.2857 0.8888 -2.9964 -1.8537 1.2405 0.3380 1.0043 1.0110 0.9869 0.0086 0.0089 -0.0017
 + - param set #3 has cost=-0.230667
 + -- Parameters = -3.6560 0.8676 -3.1477 -2.0226 1.2101 0.1454 1.0085 1.0099 0.9893 0.0025 0.0155 -0.0025
 + - param set #4 has cost=-0.226606
 + -- Parameters = -3.9382 -0.6757 -3.9520 -2.1045 2.1374 0.0126 1.0033 1.0023 0.9990 0.0008 0.0158 0.0103
 + - param set #5 has cost=-0.217612
 + -- Parameters = -2.2194 -0.7543 -4.2405 -1.5667 2.1010 1.0894 1.0050 1.0005 1.0021 0.0151 -0.0076 0.0077
 + - param set #6 has cost=-0.169425
 + -- Parameters = -1.6086 -1.8268 -3.1836 -1.5425 2.9726 1.6080 1.0112 1.0002 0.9864 0.0229 -0.0220 0.0262
 + - param set #7 has cost=-0.163534
 + -- Parameters = -2.7963 0.7370 -1.1474 -1.7423 1.6688 0.6224 1.0088 1.0147 0.9810 0.0079 0.0027 0.0263
 + - param set #8 has cost=-0.172347
 + -- Parameters = -3.9450 -1.4723 -4.7804 -2.4348 2.4648 0.2894 1.0059 0.9939 1.0122 -0.0162 0.0071 0.0130
 + - param set #9 has cost=-0.137574
 + -- Parameters = -2.1148 1.8037 -2.8999 -1.8711 1.0160 1.5682 1.0012 1.0214 0.9794 0.0115 -0.0397 -0.0123
 + - param set #10 has cost=0.080628
 + -- Parameters = -5.3772 -6.8028 -8.6124 -2.7154 5.4827 -0.8102 0.9920 0.9682 1.0455 -0.0307 0.0220 0.0466
 + - param set #11 has cost=0.140289
 + -- Parameters = 5.3255 -3.2796 -5.4983 1.1882 3.7154 4.8386 0.9921 0.9834 1.0077 0.0765 -0.0851 0.0288
 + - param set #12 has cost=-0.077241
 + -- Parameters = -2.5303 -4.1691 -2.5053 -1.8999 4.4782 1.0526 0.9863 0.9895 0.9732 0.0004 0.0101 0.0551
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0442 
 + --- dist(#3,#1) = 0.0737 
 + --- dist(#4,#1) = 0.0749 
 + --- dist(#5,#1) = 0.0348 
 + --- dist(#6,#1) = 0.106 
 + --- dist(#7,#1) = 0.107 
 + --- dist(#8,#1) = 0.108 
 + --- dist(#9,#1) = 0.175 
 + --- dist(#10,#1) = 0.237 
 + --- dist(#11,#1) = 0.199 
 + --- dist(#12,#1) = 0.379 
 + - Total coarse refinement net CPU time = 0.0 s; 3280 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 284.013 .. 1085.72; base clip 197.907 .. 793.948
 +  - versus source range 0 .. 947.402; base range 0 .. 914.65
 + 38703 total points stored in 405 'RHDD(12.0364)' bloks
 + - cost(#1)=-0.197608 *
 + -- Parameters = -2.8754 -0.3439 -4.0400 -1.8692 1.8144 0.7439 1.0064 1.0017 0.9982 0.0074 -0.0009 0.0024
 + - cost(#2)=-0.193741  
 + -- Parameters = -3.2857 0.8888 -2.9964 -1.8537 1.2405 0.3380 1.0043 1.0110 0.9869 0.0086 0.0089 -0.0017
 + - cost(#3)=-0.189516  
 + -- Parameters = -3.6560 0.8676 -3.1477 -2.0226 1.2101 0.1454 1.0085 1.0099 0.9893 0.0025 0.0155 -0.0025
 + - cost(#4)=-0.188416  
 + -- Parameters = -3.9382 -0.6757 -3.9520 -2.1045 2.1374 0.0126 1.0033 1.0023 0.9990 0.0008 0.0158 0.0103
 + - cost(#5)=-0.179406  
 + -- Parameters = -2.2194 -0.7543 -4.2405 -1.5667 2.1010 1.0894 1.0050 1.0005 1.0021 0.0151 -0.0076 0.0077
 + - cost(#6)=-0.137816  
 + -- Parameters = -3.9450 -1.4723 -4.7804 -2.4348 2.4648 0.2894 1.0059 0.9939 1.0122 -0.0162 0.0071 0.0130
 + - cost(#7)=-0.137670  
 + -- Parameters = -1.6086 -1.8268 -3.1836 -1.5425 2.9726 1.6080 1.0112 1.0002 0.9864 0.0229 -0.0220 0.0262
 + - cost(#8)=-0.119320  
 + -- Parameters = -2.7963 0.7370 -1.1474 -1.7423 1.6688 0.6224 1.0088 1.0147 0.9810 0.0079 0.0027 0.0263
 + - cost(#9)=-0.102361  
 + -- Parameters = -2.1148 1.8037 -2.8999 -1.8711 1.0160 1.5682 1.0012 1.0214 0.9794 0.0115 -0.0397 -0.0123
 + - cost(#10)=-0.052069  
 + -- Parameters = -2.5303 -4.1691 -2.5053 -1.8999 4.4782 1.0526 0.9863 0.9895 0.9732 0.0004 0.0101 0.0551
 + - cost(#11)=0.099138  
 + -- Parameters = -5.3772 -6.8028 -8.6124 -2.7154 5.4827 -0.8102 0.9920 0.9682 1.0455 -0.0307 0.0220 0.0466
 + - cost(#12)=0.157160  
 + -- Parameters = 5.3255 -3.2796 -5.4983 1.1882 3.7154 4.8386 0.9921 0.9834 1.0077 0.0765 -0.0851 0.0288
 + - cost(#13)=0.538232  
 + -- Parameters = -1.6043 7.3705 -4.1374 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.203642 *
 + -- Parameters = -2.9098 -0.2461 -3.8466 -1.8892 1.7670 0.7483 1.0046 1.0029 0.9973 0.0038 -0.0003 0.0031
 + - cost(#2)=-0.198601  
 + -- Parameters = -3.2986 0.8014 -3.0715 -1.9446 1.2818 0.4594 1.0051 1.0101 0.9882 0.0058 0.0087 -0.0012
 + - cost(#3)=-0.198303  
 + -- Parameters = -3.5149 0.7234 -3.2760 -2.0162 1.2901 0.2889 1.0050 1.0099 0.9902 0.0015 0.0116 -0.0023
 + - cost(#4)=-0.194608  
 + -- Parameters = -3.6949 -0.7146 -3.8656 -2.0938 2.1464 0.2020 1.0062 1.0026 0.9977 -0.0004 0.0130 0.0108
 + - cost(#5)=-0.195586  
 + -- Parameters = -2.5200 -0.6011 -4.1076 -1.8719 2.0992 1.0799 1.0059 1.0024 1.0006 0.0081 -0.0091 0.0090
 + - cost(#6)=-0.172835  
 + -- Parameters = -3.8358 -1.2467 -4.5646 -2.2054 2.5257 0.2091 1.0046 1.0005 1.0098 -0.0091 0.0100 0.0165
 + - cost(#7)=-0.164370  
 + -- Parameters = -1.9625 -1.9039 -3.0233 -1.7972 2.9920 1.5364 1.0083 0.9995 0.9862 0.0111 -0.0204 0.0285
 + - cost(#8)=-0.176527  
 + -- Parameters = -2.5534 0.0843 -2.1602 -1.8669 1.9500 1.0615 1.0082 1.0111 0.9780 0.0090 -0.0013 0.0153
 + - cost(#9)=-0.162327  
 + -- Parameters = -2.1468 1.7829 -2.7483 -1.8859 0.6394 1.5461 1.0047 1.0146 0.9857 0.0043 -0.0254 -0.0100
 + - cost(#10)=-0.120355  
 + -- Parameters = -2.5915 -3.9084 -2.4641 -1.9622 4.3292 1.0118 1.0035 0.9948 0.9779 -0.0019 -0.0058 0.0549
 + - cost(#11)=0.026337  
 + -- Parameters = -4.8789 -5.5849 -7.4080 -2.4884 4.9934 -0.3901 0.9949 0.9768 1.0337 -0.0253 0.0178 0.0446
 + - cost(#12)=0.087102  
 + -- Parameters = 2.3608 -2.0056 -4.2148 -0.1601 2.9683 3.7984 0.9959 0.9968 1.0019 0.0608 -0.0821 0.0234
 + - cost(#13)=-0.195437  
 + -- Parameters = -3.2743 0.9644 -3.0278 -2.0940 1.1692 0.6200 1.0019 1.0109 0.9883 -0.0037 0.0006 -0.0027
 + - case #1 is now the best
 + - Initial  cost = -0.203642
 + - Initial fine Parameters = -2.9098 -0.2461 -3.8466 -1.8892 1.7670 0.7483 1.0046 1.0029 0.9973 0.0038 -0.0003 0.0031
 + - Finalish cost = -0.207838 ; 197 funcs
 + - ini Finalish Parameters = -2.9756 -0.1097 -3.7540 -1.9440 1.8311 0.7462 1.0039 1.0058 0.9971 0.0026 -0.0013 0.0058
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 283.782 .. 1085.49; base clip 197.907 .. 793.948
 +  - versus source range 0 .. 947.402; base range 0 .. 914.65
*[#15926=-0.744488] *[#15982=-0.744628] *[#15984=-0.744781] *[#15992=-0.745048] *[#16013=-0.745181] *[#16016=-0.745195] *[#16017=-0.745252] *[#16023=-0.745276] *[#16024=-0.745278] *[#16028=-0.74538] *[#16031=-0.745433] *[#16032=-0.745504] *[#16033=-0.745549] *[#16034=-0.74564] *[#16035=-0.745742] *[#16036=-0.745749] *[#16037=-0.745759] *[#16039=-0.745995] *[#16040=-0.746053] *[#16041=-0.746139] *[#16042=-0.746171] *[#16043=-0.746221] *[#16044=-0.746269] *[#16045=-0.746318] *[#16046=-0.746396] *[#16048=-0.746401] *[#16049=-0.746556] *[#16050=-0.746652] *[#16051=-0.746709] *[#16052=-0.746785] *[#16053=-0.746876] *[#16054=-0.747042] *[#16055=-0.747329] *[#16056=-0.747685] *[#16057=-0.747711] *[#16059=-0.7479] *[#16062=-0.748129] *[#16063=-0.748215] *[#16064=-0.748262] *[#16067=-0.748311] *[#16068=-0.748342] *[#16069=-0.748411] *[#16070=-0.748484] *[#16071=-0.748496] *[#16072=-0.748638] *[#16075=-0.74868] *[#16076=-0.748722] *[#16077=-0.748739] *[#16078=-0.748777] *[#16079=-0.748832] *[#16080=-0.748848] *[#16081=-0.74889] *[#16082=-0.748987] *[#16083=-0.749014] *[#16088=-0.749029] *[#16090=-0.749045] *[#16091=-0.74909] *[#16098=-0.74913] *[#16103=-0.749144] *[#16110=-0.749148] *[#16115=-0.749162] *[#16124=-0.749165] *[#16125=-0.749169] *[#16128=-0.749169] *[#16133=-0.749177] *[#16138=-0.74919] *[#16139=-0.749196] *[#16140=-0.7492] *[#16145=-0.749202] *[#16146=-0.749203] *[#16149=-0.749203] *[#16151=-0.749211] *[#16160=-0.749225] *[#16167=-0.749225] *[#16175=-0.749231] *[#16182=-0.749238] *[#16191=-0.749243] *[#16194=-0.749244] *[#16195=-0.749246] *[#16196=-0.749248] *[#16197=-0.749248] *[#16198=-0.749256] *[#16199=-0.749261] *[#16200=-0.749268] *[#16205=-0.749274] *[#16206=-0.749275] *[#16208=-0.74928] *[#16209=-0.749284] *[#16210=-0.749285] *[#16211=-0.749288] *[#16212=-0.74929] *[#16213=-0.74929] *[#16214=-0.749291] *[#16215=-0.749294] *[#16216=-0.749297] *[#16217=-0.749301] *[#16218=-0.749308] *[#16219=-0.749308] *[#16223=-0.749313] *[#16224=-0.749316] *[#16226=-0.74932] *[#16227=-0.749323] *[#16228=-0.749323] *[#16229=-0.749326] *[#16232=-0.74933] *[#16233=-0.749332] *[#16234=-0.749336] *[#16235=-0.749343] *[#16236=-0.749355] *[#16237=-0.749366] *[#16238=-0.749379] *[#16241=-0.749382] *[#16244=-0.749384] *[#16247=-0.74939] *[#16248=-0.74939] *[#16249=-0.749392] *[#16250=-0.749395] *[#16255=-0.749399] *[#16256=-0.749405] *[#16257=-0.749406] *[#16258=-0.749406] *[#16261=-0.749415] *[#16262=-0.749422] *[#16263=-0.749428] *[#16266=-0.749439] *[#16267=-0.749444] *[#16270=-0.749454] *[#16274=-0.749456] *[#16275=-0.74946] *[#16276=-0.749462] *[#16279=-0.749466] *[#16280=-0.749469] *[#16281=-0.749472] *[#16282=-0.749476] *[#16283=-0.749485] *[#16294=-0.749486] *[#16297=-0.749489] *[#16300=-0.74949] *[#16303=-0.749492] *[#16304=-0.749494] *[#16305=-0.749495] *[#16309=-0.749496] *[#16312=-0.749496] *[#16314=-0.749497] *[#16315=-0.749498] *[#16316=-0.749499] *[#16317=-0.7495] *[#16321=-0.7495] *[#16327=-0.749502] *[#16328=-0.749505] *[#16329=-0.749505] *[#16332=-0.749505] *[#16335=-0.749507] *[#16336=-0.749508] *[#16337=-0.749509] *[#16338=-0.749511] *[#16341=-0.749512] *[#16342=-0.749512] *[#16344=-0.749514] *[#16347=-0.749519] *[#16348=-0.749521] *[#16350=-0.749523] *[#16353=-0.749524] *[#16356=-0.749525] *[#16359=-0.749525] *[#16360=-0.749526] *[#16361=-0.749527] *[#16362=-0.749528] *[#16367=-0.749528] *[#16371=-0.749529] *[#16378=-0.749531] *[#16379=-0.749532] *[#16380=-0.749532] *[#16383=-0.749533] *[#16392=-0.749534] *[#16395=-0.749534] *[#16396=-0.749536] *[#16397=-0.749537] *[#16398=-0.749537] *[#16399=-0.749539] *[#16404=-0.749539] *[#16405=-0.74954] *[#16408=-0.74954] *[#16410=-0.74954] *[#16414=-0.749541] *[#16417=-0.749542] *[#16418=-0.749543] *[#16419=-0.749544] *[#16422=-0.749545] *[#16423=-0.749545] *[#16426=-0.749548] *[#16435=-0.749549] *[#16438=-0.749549] *[#16439=-0.74955] *[#16444=-0.749551] *[#16448=-0.749551] *[#16449=-0.749553] *[#16450=-0.749554] *[#16451=-0.749556] *[#16454=-0.749556] *[#16455=-0.749558] *[#16456=-0.749559] *[#16457=-0.749559] *[#16461=-0.749561] *[#16462=-0.749561] *[#16463=-0.749562] *[#16464=-0.749562] *[#16465=-0.749563] *[#16466=-0.749563] *[#16469=-0.749563] *[#16470=-0.749564] *[#16471=-0.749564] *[#16472=-0.749565] *[#16473=-0.749567] *[#16474=-0.749567] *[#16476=-0.74957] *[#16477=-0.74957] *[#16479=-0.74957] *[#16482=-0.74957] *[#16483=-0.749571] *[#16485=-0.749571] *[#16494=-0.749572] *[#16495=-0.749572] *[#16496=-0.749572] *[#16501=-0.749573] *[#16514=-0.749574] *[#16519=-0.749574] *[#16522=-0.749575] *[#16525=-0.749577] *[#16528=-0.749578] *[#16529=-0.749578] *[#16530=-0.749578] *[#16532=-0.749579] *[#16537=-0.749579] *[#16538=-0.74958] *[#16541=-0.749582] *[#16542=-0.749582] *[#16545=-0.749583] *[#16546=-0.749583] *[#16549=-0.749584] *[#16550=-0.749585] *[#16553=-0.749585] *[#16554=-0.749586] *[#16555=-0.749586] *[#16558=-0.749587] *[#16559=-0.749588] *[#16564=-0.749589] *[#16565=-0.749589] *[#16566=-0.74959] *[#16567=-0.749592] *[#16568=-0.749592] *[#16570=-0.749593] *[#16571=-0.749595] *[#16572=-0.749596] *[#16573=-0.749598] *[#16574=-0.749599] *[#16577=-0.749599] *[#16581=-0.749599] *[#16582=-0.749601] *[#16585=-0.749601] *[#16586=-0.749601] *[#16587=-0.749602] *[#16592=-0.749602] *[#16596=-0.749602] *[#16599=-0.749603] *[#16600=-0.749603] *[#16601=-0.749603] *[#16609=-0.749604] *[#16612=-0.749604] *[#16614=-0.749605] *[#16617=-0.749605] *[#16619=-0.749606] *[#16622=-0.749608] *[#16623=-0.749609] *[#16624=-0.749609] *[#16625=-0.74961] *[#16628=-0.749611] *[#16629=-0.749612] *[#16632=-0.749612] *[#16634=-0.749612] *[#16637=-0.749613] *[#16638=-0.749615] *[#16641=-0.749616] *[#16642=-0.749617] *[#16643=-0.749619] *[#16645=-0.749622] *[#16650=-0.749624] *[#16651=-0.749624] *[#16652=-0.749626] *[#16661=-0.749626] *[#16662=-0.749627] *[#16663=-0.749628] *[#16666=-0.749629] *[#16667=-0.749629] *[#16668=-0.74963] *[#16669=-0.749631] *[#16670=-0.749632] *[#16671=-0.749633] *[#16672=-0.749635] *[#16673=-0.749636] *[#16674=-0.74964] *[#16675=-0.749648] *[#16676=-0.749654] *[#16681=-0.749655] *[#16682=-0.749656] *[#16683=-0.749658] *[#16685=-0.74966] *[#16688=-0.749661] *[#16694=-0.749662] *[#16696=-0.749662] *[#16705=-0.749662] *[#16724=-0.749663] *[#16737=-0.749663] *[#16744=-0.749663] *[#16747=-0.749663] *[#16750=-0.749664] *[#16751=-0.749664] *[#16752=-0.749664] *[#16753=-0.749665] *[#16756=-0.749665] *[#16765=-0.749665] *[#16766=-0.749665] *[#16781=-0.749666] *[#16831=-0.749667] 
 + - Final    cost = -0.749667 ; 919 funcs
 + Final fine fit Parameters:
       x-shift= -2.9345   y-shift=  0.0349   z-shift= -3.9760  ...  enorm=  4.9418 mm
       z-angle= -1.9397   x-angle=  1.8589   y-angle=  0.7779  ...  total=  2.7881 deg
       x-scale=  1.0092   y-scale=  1.0094   z-scale=  1.0023  ...  vol3D=  1.0210 = base smaller than source
     y/x-shear=  0.0022 z/x-shear= -0.0017 z/y-shear=  0.0070
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -2.9345 0.0349 -3.9760 -1.9397 1.8589 0.7779 1.0092 1.0094 1.0023 0.0022 -0.0017 0.0070
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S11_unflipped_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S11_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 62.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_anatSS.sub-S11_lr_al_junk -overwrite ./anatSS.sub-S11_unflipped_ob+orig
++ processing ./anatSS.sub-S11_unflipped_ob+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_ts_ns_wt+orig -source ./__tt_anatSS.sub-S11_lr_al_junk+orig -prefix ./anatSS.sub-S11_flip_al_junk -base ./vr_base_ts_ns+orig -cmass -1Dmatrix_save ./anatSS.sub-S11_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.406977 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.406977 degrees from plumb.
++ Source dataset: ./__tt_anatSS.sub-S11_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1648303 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=5
++ Zero-pad: zbot=8 ztop=8
++ 43269 voxels [18.3%] in weight mask
++ Number of points for matching = 43269
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'RHDD(11.9925)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 30.972 38.768 24.793 (index)
 + source center of mass = 130.655 157.936 189.360 (index)
 + source-target CM = 0.706 7.371 -4.137 (xyz)
 + estimated center of mass shifts = 0.706 7.371 -4.137
++ shift param auto-range: -60.0..61.4 -65.8..80.6 -60.7..52.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.294029 .. 10.705971  center = 0.705971
 + Range param#2 [y-shift] = -2.629498 .. 17.370502  center = 7.370502
 + Range param#3 [z-shift] = -14.137352 .. 5.862648  center = -4.137352
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.294029 .. 40.705971  center = 0.705971
 + Range param#2 [y-shift] = -32.629498 .. 47.370502  center = 7.370502
 + Range param#3 [z-shift] = -44.137352 .. 35.862648  center = -4.137352
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -39.294 ..   40.706
 +       y-shift =  -32.629 ..   47.371
 +       z-shift =  -44.137 ..   35.863
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1648303 [out of 24584560] voxels
 + base mask has 57701 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.75
 + - Smoothing source; radius=3.75
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - copying weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 275.547 .. 1035.6; base clip 195.977 .. 747.747
 +  - versus source range 0.631188 .. 947.388; base range 0 .. 906.013
 + 38172 total points stored in 346 'RHDD(12.5651)' bloks
 + - number of free params = 6
 + - Test (64+61)*64 params [top5=*o+-.]:#o+o-+o..-+o.o.+-oo+.....-+.$+ + - best 45 costs found:
    0 v= 0.484948:   0.71   7.37  -4.14   0.00   0.00   0.00  [grid]
    1 v= 0.709394:  27.37  -5.96 -17.47  15.00  15.00  15.00  [grid]
    2 v= 0.743759:  35.03  -9.21   4.47  16.34   8.64  40.54  [rand]
    3 v= 0.748829:  14.04  -5.96 -17.47 -15.00  15.00  30.00  [grid]
    4 v= 0.786931: -25.96  -5.96 -17.47 -15.00  15.00 -15.00  [grid]
    5 v= 0.792792: -31.78  -7.32   7.67 -11.16   9.40 -34.39  [rand]
    6 v= 0.795055: -12.63  -5.96 -17.47  15.00  15.00 -30.00  [grid]
    7 v= 0.810028:   9.35 -13.06 -21.61  25.20  18.50 -13.54  [rand]
    8 v= 0.814938: -33.62  -9.21   4.47 -16.34   8.64 -40.54  [rand]
    9 v= 0.815975:  -7.93 -13.06 -21.61 -25.20  18.50  13.54  [rand]
   10 v= 0.817014:  33.19  -7.32   7.67  11.16   9.40  34.39  [rand]
   11 v= 0.880842: -15.28 -12.12   1.59 -20.53   3.14 -10.08  [rand]
   12 v= 0.890246:  16.69 -12.12   1.59  20.53   3.14  10.08  [rand]
   13 v= 0.900243:  16.69 -12.12  -9.86  20.53   3.14 -10.08  [rand]
   14 v= 0.908919: -15.28 -12.12  -9.86 -20.53   3.14  10.08  [rand]
   15 v= 0.917731:  27.37 -19.30 -17.47  15.00  30.00  15.00  [grid]
   16 v= 0.923814: -15.28 -12.12   1.59 -20.53  -3.14 -10.08  [rand]
   17 v= 0.927208: -12.63  -5.96   9.20 -15.00 -15.00 -15.00  [grid]
   18 v= 0.930153:  14.04 -19.30 -17.47  30.00  15.00 -15.00  [grid]
   19 v= 0.940576: -12.63 -19.30 -17.47 -30.00  15.00  15.00  [grid]
   20 v= 0.941401:  14.04  -5.96 -17.47  30.00  15.00 -15.00  [grid]
   21 v= 0.964176: -12.63  -5.96 -17.47 -30.00  15.00  15.00  [grid]
   22 v= 0.969988: -13.50  -2.08  -8.98  15.99  13.53 -29.93  [rand]
   23 v= 0.970500:  14.04 -19.30 -17.47 -15.00  15.00  30.00  [grid]
   24 v= 0.972732:  27.37  -5.96   9.20  30.00 -15.00  15.00  [grid]
   25 v= 0.973960: -25.96 -19.30 -17.47 -15.00  30.00 -15.00  [grid]
   26 v= 0.975336: -25.96  -5.96   9.20 -30.00 -15.00 -15.00  [grid]
   27 v= 0.981104:  16.69 -12.12   1.59  20.53  -3.14  10.08  [rand]
   28 v= 0.993717:  27.37 -19.30 -17.47  15.00  15.00  15.00  [grid]
   29 v= 1.003453: -15.44  -2.09  20.21 -20.99 -15.73 -16.09  [rand]
   30 v= 1.003994:  14.04  -5.96   9.20  15.00 -15.00  15.00  [grid]
   31 v= 1.005043:  14.91  -2.08  -8.98 -15.99  13.53  29.93  [rand]
   32 v= 1.008589:  25.40   2.76  12.25   8.97 -18.72  30.56  [rand]
   33 v= 1.009126:  25.40  11.98  12.25   8.97 -18.72  30.56  [rand]
   34 v= 1.017737: -15.28 -12.12  -9.86 -20.53   3.14 -10.08  [rand]
   35 v= 1.018449: -25.96  -5.96  22.53 -30.00 -15.00 -30.00  [grid]
   36 v= 1.025810: -12.63 -19.30 -17.47  15.00  15.00 -30.00  [grid]
   37 v= 1.038402:  16.69 -12.12  -9.86  20.53   3.14  10.08  [rand]
   38 v= 1.044550:  14.04  -5.96 -17.47  15.00  15.00 -15.00  [grid]
   39 v= 1.051846:  11.03 -21.44 -19.15  30.67  17.79 -20.52  [rand]
   40 v= 1.062779:  16.85  -2.09  20.21  20.99 -15.73  16.09  [rand]
   41 v= 1.064544: -25.96 -19.30 -17.47 -15.00  15.00 -15.00  [grid]
   42 v= 1.065922:  27.01 -18.58 -21.93 -15.82  17.65  37.25  [rand]
   43 v= 1.070051:  35.57 -23.18 -19.91 -11.68  29.04  39.38  [rand]
   44 v= 1.070675: -22.15 -16.20 -14.55   5.91  29.74 -29.45  [rand]
 + - A little optimization:*[#8004=0.456094] *[#8009=0.363185] *[#8012=0.343581] *[#8013=0.319383] *[#8016=0.316869] *[#8017=0.314432] *[#8020=0.31209] *[#8021=0.310005] *[#8023=0.308062] *[#8024=0.305966] *[#8027=0.303545] *[#8028=0.302634] *[#8031=0.300097] *[#8032=0.299939] *[#8033=0.298048] .............................................
 + - costs of the above after a little optimization:
  * 0 v= 0.298048:   0.61   2.87  -1.55  -0.17  -0.73  -0.44  [grid]
    1 v= 0.647003:  27.82  -5.53 -13.47  14.02  14.44  14.67  [grid]
    2 v= 0.678496:  36.60  -6.90   3.84  14.96   8.98  37.46  [rand]
    3 v= 0.449352:  12.01  -3.88  -8.12   4.09   6.16   6.25  [grid]
    4 v= 0.690114: -25.32  -5.61 -12.98 -14.24  14.01 -14.27  [grid]
    5 v= 0.677331: -31.15  -0.24   6.48 -12.54   1.32 -33.98  [rand]
    6 v= 0.518326:   8.26   0.71 -12.57   4.07   9.36   1.91  [grid]
    7 v= 0.772586:   9.02 -13.21 -21.66  23.21  16.72 -13.99  [rand]
    8 v= 0.724100: -33.83  -7.01   5.55 -16.14   7.71 -35.44  [rand]
    9 v= 0.762239:  -5.96 -12.13 -21.53 -21.47  17.75  12.85  [rand]
   10 v= 0.657726:  34.36  -1.36   2.88  15.00   4.19  32.64  [rand]
   11 v= 0.302734:   0.06   2.44  -2.32  -0.76  -0.07   0.34  [rand]
   12 v= 0.610620:  18.51  -3.33  -4.42  15.14   3.29  10.14  [rand]
   13 v= 0.407384:   7.52  -6.22 -11.38   3.05   7.88   2.71  [rand]
   14 v= 0.298296:   2.58  -1.90  -5.60   0.75   3.60   0.83  [rand]
   15 v= 0.743808:  27.87 -16.15 -17.28  16.19  22.33  14.21  [grid]
   16 v= 0.612940: -16.35  -4.37  -6.80 -14.69   5.17  -4.78  [rand]
   17 v= 0.333925:  -0.64   3.40   1.56  -0.49  -3.32  -2.14  [grid]
   18 v= 0.434334:   0.01  -2.07  -6.84   1.17   2.96  -6.29  [grid]
   19 v= 0.534084:  -9.12   3.71   0.66 -12.64  -4.45   2.15  [grid]
   20 v= 0.724831:  14.86  -8.93 -15.39  24.82   9.33  -9.94  [grid]
   21 v= 0.354076:  -3.03  -2.11  -6.97  -1.69   4.30  -1.57  [grid]
   22 v= 0.346191:  -0.36  -1.93  -7.61  -0.45   5.15  -1.19  [rand]
   23 v= 0.653742:  19.25  -6.97  -9.25  -4.11  11.36  29.02  [grid]
   24 v= 0.635888:  30.21   0.48   0.08  11.95   2.64  26.39  [grid]
   25 v= 0.650969: -25.67  -1.45  -7.61  -9.25   8.06 -22.54  [grid]
   26 v= 0.573441: -18.19   2.48  -2.15  -7.90  -0.43 -16.15  [grid]
   27 v= 0.318024:   3.47  -0.66  -3.79   0.07   2.18   2.77  [rand]
   28 v= 0.551367:  17.16  -5.78 -13.85   4.36  11.48  11.29  [grid]
   29 v= 0.594044: -19.91   5.54   6.64 -10.65  -5.98 -18.47  [rand]
   30 v= 0.343195:   2.20   4.19   1.55   1.30  -3.67  -0.26  [grid]
   31 v= 0.342358:   6.24  -0.60  -2.02   2.91  -0.17   2.32  [rand]
   32 v= 0.660996:  22.96   4.16   8.93   9.73  -9.13  31.32  [rand]
   33 v= 0.600140:  20.31   5.51   1.07   9.03  -1.43  18.13  [rand]
   34 v= 0.432024:  -6.84   0.77  -6.42  -4.90   3.77  -2.72  [rand]
   35 v= 0.700228: -25.35   2.48  14.73 -17.07 -11.26 -26.59  [grid]
   36 v= 0.738189: -11.98  -5.31 -17.18  11.15  14.91 -29.19  [grid]
   37 v= 0.305947:   2.49   0.42  -3.93  -0.09   2.26   1.48  [rand]
   38 v= 0.451541:   9.54  -6.55 -12.62   6.19  10.16   0.32  [grid]
   39 v= 0.732503:   5.11  -8.56 -20.37  19.56  12.68 -15.62  [rand]
   40 v= 0.634253:  21.82   5.83   6.76  13.38  -6.44  11.21  [rand]
   41 v= 0.618548: -19.78  -1.17 -12.68  -6.55  11.04 -15.85  [grid]
   42 v= 0.837876:  24.48 -14.90 -18.48 -13.08  21.99  35.98  [rand]
   43 v= 0.760059:  37.71 -13.95  -7.02   8.20  20.96  37.39  [rand]
   44 v= 0.627636: -21.71   0.42  -8.77  -5.36   7.79 -22.37  [rand]
 + - save # 0 for possible use in twobest
 + - save #14 for possible use in twobest
 + - skip #11 for twobest: too close to set # 0
 + - skip #37 for twobest: too close to set # 0
 + - skip #27 for twobest: too close to set # 0
 + - skip #17 for twobest: too close to set # 0
 + - skip #31 for twobest: too close to set #14
 + - skip #30 for twobest: too close to set # 0
 + - skip #22 for twobest: too close to set #14
 + - skip #21 for twobest: too close to set #22
 + - save #13 for possible use in twobest
 + - skip #34 for twobest: too close to set #21
 + - save #18 for possible use in twobest
 + - save # 3 for possible use in twobest
 + - skip #38 for twobest: too close to set #13
 + - save # 6 for possible use in twobest
 + - save #19 for possible use in twobest
 + - save #28 for possible use in twobest
 + - save #26 for possible use in twobest
 + - save #29 for possible use in twobest
 + - save #33 for possible use in twobest
 + - save #12 for possible use in twobest
 + - save #16 for possible use in twobest
 + - save #41 for possible use in twobest
 + - save #44 for possible use in twobest
 + - save #40 for possible use in twobest
 + - save #24 for possible use in twobest
 + - save # 1 for possible use in twobest
 + - skip #25 for twobest: too close to set #44
 + - save #23 for possible use in twobest
 + - save #10 for possible use in twobest
 + - save #32 for possible use in twobest
 + - save # 5 for possible use in twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.92
 + - Smoothing source; radius=2.92
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 278.563 .. 1046.1; base clip 196.638 .. 763.097
 +  - versus source range 0.071742 .. 947.041; base range 0 .. 908.693
 + 37788 total points stored in 364 'RHDD(12.342)' bloks
 + - param set #1 has cost=0.299718
 + -- Parameters = 0.5462 2.2099 -1.9907 0.0591 -0.5165 -0.6289 0.9981 1.0078 1.0004 0.0042 0.0077 -0.0081
 + - param set #2 has cost=0.299374
 + -- Parameters = 1.4756 -0.5906 -3.9784 0.8490 1.9852 -0.6343 0.9997 0.9988 0.9978 0.0121 0.0024 0.0011
 + - param set #3 has cost=0.343231
 + -- Parameters = 4.8411 -4.0288 -5.7587 2.2053 3.9579 1.3436 0.9970 0.9850 0.9964 0.0024 0.0018 0.0039
 + - param set #4 has cost=0.310534
 + -- Parameters = 2.1891 -1.9808 -4.9578 1.1066 2.9594 -0.1458 0.9843 0.9985 0.9956 -0.0055 -0.0022 0.0021
 + - param set #5 has cost=0.358081
 + -- Parameters = 6.6828 -3.7895 -8.5450 2.5888 4.6671 2.9802 0.9850 0.9921 1.0078 0.0215 -0.0209 -0.0134
 + - param set #6 has cost=0.369946
 + -- Parameters = 3.8952 -5.9931 -9.8871 1.8161 6.3670 0.4960 0.9921 0.9866 1.0026 0.0031 0.0112 -0.0023
 + - param set #7 has cost=0.418641
 + -- Parameters = -1.6976 2.1482 0.8250 -3.4391 -4.5777 1.7981 0.9785 1.0015 1.0016 0.0230 0.0176 -0.0059
 + - param set #8 has cost=0.435157
 + -- Parameters = 9.6508 -8.5837 -10.8949 4.8114 10.9950 2.6024 0.9832 0.9804 0.9822 0.0026 -0.0138 0.0179
 + - param set #9 has cost=0.504169
 + -- Parameters = -15.3103 0.1211 -1.6124 -8.2697 1.3966 -7.5425 0.9795 0.9966 0.9932 0.0223 0.0211 0.0171
 + - param set #10 has cost=0.527100
 + -- Parameters = -17.8404 1.5073 3.3811 -11.2803 -0.9494 -6.0697 0.9733 0.9905 0.9785 0.0128 0.0114 0.0264
 + - param set #11 has cost=0.360252
 + -- Parameters = 6.1266 -0.3255 -4.0810 3.3884 2.3301 2.2062 0.9147 1.0056 0.9545 0.0705 -0.0184 -0.0217
*[#11913=0.297719] *[#11914=0.297066] *[#11918=0.296268] *[#11920=0.295322] *[#11925=0.294865] *[#11927=0.293547] *[#11928=0.292888] *[#11929=0.291912] *[#11930=0.291185] *[#11939=0.291145] *[#11941=0.290276] *[#11942=0.290004] *[#11946=0.289658] *[#11947=0.289276] *[#11950=0.288859] *[#11951=0.28867] *[#11952=0.288153] 
 + - param set #12 has cost=0.288153
 + -- Parameters = 0.7894 1.3635 -2.6284 0.0134 1.0451 -0.4964 0.9858 1.0174 0.9953 -0.0001 0.0012 0.0056
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0548 
 + --- dist(#3,#1) = 0.0616 
 + --- dist(#4,#1) = 0.0513 
 + --- dist(#5,#1) = 0.0881 
 + --- dist(#6,#1) = 0.0995 
 + --- dist(#7,#1) = 0.318 
 + --- dist(#8,#1) = 0.092 
 + --- dist(#9,#1) = 0.104 
 + --- dist(#10,#1) = 0.124 
 + --- dist(#11,#1) = 0.201 
 + --- dist(#12,#1) = 0.233 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.27
 + - Smoothing source; radius=2.27
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 281.233 .. 1057.99; base clip 197.353 .. 779.589
 +  - versus source range 0.00102157 .. 947.042; base range 0 .. 911.284
 + 38287 total points stored in 382 'RHDD(12.2051)' bloks
 + - param set #1 has cost=0.317588
 + -- Parameters = 0.9661 1.6820 -2.4007 0.1198 1.4048 -0.1234 0.9855 1.0294 0.9855 0.0085 0.0059 0.0085
 + - param set #2 has cost=0.327333
 + -- Parameters = 1.6470 0.0318 -3.0997 0.7266 1.9747 -0.2241 0.9915 1.0097 0.9896 0.0187 0.0027 0.0085
 + - param set #3 has cost=0.320466
 + -- Parameters = 0.5284 2.3921 -2.4619 0.0788 0.3959 -0.6093 0.9942 1.0230 0.9849 0.0096 0.0094 -0.0108
 + - param set #4 has cost=0.332109
 + -- Parameters = 1.4918 -0.2358 -3.9356 0.8208 1.9664 -0.4200 0.9891 1.0077 1.0007 0.0157 0.0019 0.0036
 + - param set #5 has cost=0.345027
 + -- Parameters = 3.5451 -2.8100 -4.2565 1.6928 3.5728 0.6919 0.9887 0.9877 0.9947 0.0261 -0.0038 0.0193
 + - param set #6 has cost=0.350446
 + -- Parameters = 4.4599 -1.7086 -5.5890 2.2243 2.4126 1.2789 0.9831 0.9824 1.0133 0.0405 -0.0235 -0.0124
 + - param set #7 has cost=0.344295
 + -- Parameters = 4.9054 -0.2448 -3.2761 2.6613 1.5261 1.5691 0.9664 0.9963 0.9831 0.0706 -0.0360 -0.0089
 + - param set #8 has cost=0.350104
 + -- Parameters = 2.0964 -1.9866 -5.5735 0.5190 3.0590 0.4513 0.9899 0.9863 1.0092 0.0161 0.0062 0.0006
 + - param set #9 has cost=0.351845
 + -- Parameters = -0.8432 2.5134 -0.9465 -0.5844 -0.1730 -1.1309 0.9662 1.0016 0.9664 0.0075 0.0041 -0.0177
 + - param set #10 has cost=0.386230
 + -- Parameters = 6.0477 -6.6127 -7.0446 2.8727 5.5462 1.7313 0.9868 0.9712 1.0144 0.0281 -0.0091 0.0336
 + - param set #11 has cost=0.474677
 + -- Parameters = -10.1963 -1.1542 -4.7510 -4.2180 3.9024 -7.5572 0.9753 1.0031 0.9882 0.0187 0.0377 0.0201
 + - param set #12 has cost=0.505120
 + -- Parameters = -13.2830 0.3089 4.5002 -7.8346 -2.3587 -5.6227 0.9757 0.9833 0.9768 0.0088 0.0108 0.0312
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0868 
 + --- dist(#3,#1) = 0.0535 
 + --- dist(#4,#1) = 0.059 
 + --- dist(#5,#1) = 0.279 
 + --- dist(#6,#1) = 0.113 
 + --- dist(#7,#1) = 0.117 
 + --- dist(#8,#1) = 0.144 
 + --- dist(#9,#1) = 0.118 
 + --- dist(#10,#1) = 0.158 
 + --- dist(#11,#1) = 0.143 
 + --- dist(#12,#1) = 0.178 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.76
 + - Smoothing source; radius=1.76
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + - using 43269 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 282.971 .. 1069.45; base clip 197.907 .. 793.948
 +  - versus source range 0 .. 947.042; base range 0 .. 913.412
 + 38773 total points stored in 398 'RHDD(12.1215)' bloks
 + - param set #1 has cost=0.340882
 + -- Parameters = 0.9091 1.7434 -2.3659 0.1685 1.3284 -0.3267 0.9835 1.0304 0.9844 0.0139 0.0061 0.0085
 + - param set #2 has cost=0.337768
 + -- Parameters = 0.3389 2.6970 -2.3902 0.1289 0.3083 -0.8998 0.9839 1.0289 0.9792 0.0208 0.0057 -0.0133
 + - param set #3 has cost=0.348984
 + -- Parameters = 1.4374 0.3034 -2.9245 0.5836 1.8130 -0.2364 0.9925 1.0147 0.9901 0.0244 0.0038 0.0089
 + - param set #4 has cost=0.348049
 + -- Parameters = 1.2983 0.7556 -3.4386 0.5799 1.6726 -0.4306 0.9835 1.0163 0.9957 0.0205 0.0069 0.0018
 + - param set #5 has cost=0.363514
 + -- Parameters = 4.3946 0.2215 -3.2939 2.1650 1.3602 1.3641 0.9782 1.0038 0.9863 0.0705 -0.0360 -0.0062
 + - param set #6 has cost=0.360467
 + -- Parameters = 2.8867 -1.7098 -3.4902 1.2918 2.8292 0.6089 0.9881 0.9982 0.9950 0.0342 -0.0151 0.0235
 + - param set #7 has cost=0.367654
 + -- Parameters = 2.1133 -1.5698 -5.1296 0.8519 2.5551 0.0957 0.9927 0.9974 1.0094 0.0139 0.0056 0.0021
 + - param set #8 has cost=0.369393
 + -- Parameters = 3.6097 -1.3753 -5.4627 1.6780 2.1285 0.9169 0.9843 0.9867 1.0173 0.0390 -0.0263 -0.0078
 + - param set #9 has cost=0.341452
 + -- Parameters = -0.0405 3.8022 -1.2065 -0.0031 -0.5284 -1.4680 0.9797 1.0446 0.9643 0.0175 0.0085 -0.0133
 + - param set #10 has cost=0.385720
 + -- Parameters = 3.4643 -4.3384 -6.4417 1.3295 4.7805 1.0918 0.9942 0.9813 1.0229 0.0359 -0.0099 0.0336
 + - param set #11 has cost=0.382208
 + -- Parameters = -2.2973 -1.4089 -4.0281 -0.3832 3.4638 -3.5231 0.9653 1.0126 0.9766 0.0033 0.0647 0.0156
 + - param set #12 has cost=0.427672
 + -- Parameters = -3.9264 0.5963 -1.5521 -1.9034 4.2132 -4.2039 1.0046 1.0272 0.9467 -0.0284 0.0301 0.0614
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0981 
 + --- dist(#3,#1) = 0.0428 
 + --- dist(#4,#1) = 0.0679 
 + --- dist(#5,#1) = 0.1 
 + --- dist(#6,#1) = 0.166 
 + --- dist(#7,#1) = 0.224 
 + --- dist(#8,#1) = 0.0857 
 + --- dist(#9,#1) = 0.144 
 + --- dist(#10,#1) = 0.265 
 + --- dist(#11,#1) = 0.211 
 + --- dist(#12,#1) = 0.336 
 + - Total coarse refinement net CPU time = 0.0 s; 3460 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=39.5651 usiz=509.473
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 285.403 .. 1085.24; base clip 197.907 .. 793.948
 +  - versus source range 0 .. 947.402; base range 0 .. 914.65
 + 38703 total points stored in 405 'RHDD(12.0364)' bloks
 + - cost(#1)=0.362232 *
 + -- Parameters = 0.3389 2.6970 -2.3902 0.1289 0.3083 -0.8998 0.9839 1.0289 0.9792 0.0208 0.0057 -0.0133
 + - cost(#2)=0.364730  
 + -- Parameters = 0.9091 1.7434 -2.3659 0.1685 1.3284 -0.3267 0.9835 1.0304 0.9844 0.0139 0.0061 0.0085
 + - cost(#3)=0.365676  
 + -- Parameters = -0.0405 3.8022 -1.2065 -0.0031 -0.5284 -1.4680 0.9797 1.0446 0.9643 0.0175 0.0085 -0.0133
 + - cost(#4)=0.371329  
 + -- Parameters = 1.2983 0.7556 -3.4386 0.5799 1.6726 -0.4306 0.9835 1.0163 0.9957 0.0205 0.0069 0.0018
 + - cost(#5)=0.372591  
 + -- Parameters = 1.4374 0.3034 -2.9245 0.5836 1.8130 -0.2364 0.9925 1.0147 0.9901 0.0244 0.0038 0.0089
 + - cost(#6)=0.381059  
 + -- Parameters = 2.8867 -1.7098 -3.4902 1.2918 2.8292 0.6089 0.9881 0.9982 0.9950 0.0342 -0.0151 0.0235
 + - cost(#7)=0.384046  
 + -- Parameters = 4.3946 0.2215 -3.2939 2.1650 1.3602 1.3641 0.9782 1.0038 0.9863 0.0705 -0.0360 -0.0062
 + - cost(#8)=0.388609  
 + -- Parameters = 2.1133 -1.5698 -5.1296 0.8519 2.5551 0.0957 0.9927 0.9974 1.0094 0.0139 0.0056 0.0021
 + - cost(#9)=0.389770  
 + -- Parameters = 3.6097 -1.3753 -5.4627 1.6780 2.1285 0.9169 0.9843 0.9867 1.0173 0.0390 -0.0263 -0.0078
 + - cost(#10)=0.399607  
 + -- Parameters = -2.2973 -1.4089 -4.0281 -0.3832 3.4638 -3.5231 0.9653 1.0126 0.9766 0.0033 0.0647 0.0156
 + - cost(#11)=0.403657  
 + -- Parameters = 3.4643 -4.3384 -6.4417 1.3295 4.7805 1.0918 0.9942 0.9813 1.0229 0.0359 -0.0099 0.0336
 + - cost(#12)=0.439628  
 + -- Parameters = -3.9264 0.5963 -1.5521 -1.9034 4.2132 -4.2039 1.0046 1.0272 0.9467 -0.0284 0.0301 0.0614
 + - cost(#13)=0.543062  
 + -- Parameters = 0.7060 7.3705 -4.1374 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.359311 *
 + -- Parameters = 0.3953 2.8721 -2.4309 0.1974 0.3284 -1.1846 0.9793 1.0339 0.9775 0.0209 0.0140 -0.0129
 + - cost(#2)=0.363523  
 + -- Parameters = 0.8576 1.8029 -2.3797 0.2240 1.2660 -0.5242 0.9769 1.0309 0.9840 0.0142 0.0059 0.0083
 + - cost(#3)=0.359432  
 + -- Parameters = 0.1027 3.6863 -1.8167 -0.0703 -0.3478 -1.4688 0.9783 1.0429 0.9731 0.0036 0.0170 -0.0143
 + - cost(#4)=0.367483  
 + -- Parameters = 1.1460 1.1962 -3.0086 0.4891 1.2783 -0.6861 0.9856 1.0204 0.9896 0.0204 0.0083 0.0019
 + - cost(#5)=0.368372  
 + -- Parameters = 1.4697 0.6390 -2.9420 0.7282 1.8035 -0.4655 0.9852 1.0207 0.9880 0.0254 0.0051 0.0102
 + - cost(#6)=0.377768  
 + -- Parameters = 2.9496 -1.3759 -3.4901 1.4457 2.8898 0.3555 0.9814 1.0037 0.9931 0.0347 -0.0140 0.0235
 + - cost(#7)=0.378191  
 + -- Parameters = 4.0116 0.6663 -3.2615 2.0183 1.2300 0.9110 0.9757 1.0117 0.9844 0.0625 -0.0275 -0.0063
 + - cost(#8)=0.378019  
 + -- Parameters = 1.9989 -0.3399 -4.2221 0.8675 2.1885 0.0288 0.9692 1.0140 1.0109 0.0319 0.0031 0.0137
 + - cost(#9)=0.384752  
 + -- Parameters = 3.3901 -0.8553 -5.1251 1.2374 1.9602 1.0437 0.9865 0.9961 1.0126 0.0355 -0.0250 -0.0057
 + - cost(#10)=0.383448  
 + -- Parameters = -1.4206 0.0856 -3.1791 -0.2200 2.6784 -3.1942 0.9742 1.0202 0.9919 0.0013 0.0659 0.0277
 + - cost(#11)=0.395090  
 + -- Parameters = 2.9478 -3.9789 -5.5882 1.4675 3.8612 0.3044 0.9878 0.9817 1.0188 0.0366 -0.0096 0.0290
 + - cost(#12)=0.391931  
 + -- Parameters = -0.8412 0.0350 0.5285 0.1666 3.3271 -2.9786 0.9952 1.0310 0.9497 -0.0296 0.0284 0.0649
 + - cost(#13)=0.373775  
 + -- Parameters = 0.5110 1.1300 -2.7634 -0.5313 0.9470 -0.1888 0.9931 1.0076 0.9918 0.0025 -0.0013 -0.0032
 + - case #1 is now the best
 + - Initial  cost = 0.359311
 + - Initial fine Parameters = 0.3953 2.8721 -2.4309 0.1974 0.3284 -1.1846 0.9793 1.0339 0.9775 0.0209 0.0140 -0.0129
 + - Finalish cost = 0.358142 ; 174 funcs
 + - ini Finalish Parameters = 0.3605 3.0282 -2.4648 0.0942 0.3293 -1.1529 0.9795 1.0353 0.9786 0.0247 0.0132 -0.0124
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 284.94 .. 1085.87; base clip 197.907 .. 793.948
 +  - versus source range 0 .. 947.402; base range 0 .. 914.65
*[#15824=-0.21226] *[#15835=-0.212506] *[#15846=-0.212526] *[#15858=-0.2126] *[#15883=-0.212667] *[#15884=-0.21278] *[#15885=-0.212827] *[#15899=-0.212917] *[#15905=-0.212965] *[#15914=-0.212985] *[#15916=-0.213089] *[#15919=-0.213116] *[#15922=-0.213166] *[#15923=-0.213218] *[#15924=-0.213227] *[#15932=-0.213276] *[#15937=-0.213375] *[#15940=-0.213404] *[#15941=-0.213462] *[#15948=-0.213493] *[#15956=-0.213558] *[#15957=-0.213659] *[#15964=-0.213764] *[#15969=-0.213801] *[#15970=-0.213815] *[#15978=-0.213934] *[#15979=-0.213956] *[#15980=-0.214098] *[#15985=-0.2142] *[#15988=-0.214257] *[#15991=-0.214414] *[#15994=-0.214421] *[#16000=-0.214505] *[#16003=-0.214519] *[#16005=-0.214552] *[#16010=-0.214639] *[#16011=-0.214652] *[#16013=-0.21472] *[#16016=-0.21479] *[#16017=-0.2148] *[#16018=-0.214858] *[#16019=-0.214941] *[#16022=-0.215058] *[#16023=-0.215069] *[#16029=-0.215139] *[#16032=-0.215163] *[#16035=-0.215197] *[#16038=-0.215249] *[#16039=-0.215274] *[#16043=-0.215354] *[#16058=-0.215383] *[#16063=-0.215419] *[#16064=-0.215444] *[#16065=-0.215453] *[#16070=-0.215459] *[#16071=-0.215579] *[#16074=-0.215583] *[#16078=-0.215668] *[#16083=-0.215745] *[#16086=-0.215804] *[#16092=-0.215815] *[#16096=-0.215849] *[#16101=-0.21591] *[#16102=-0.215935] *[#16116=-0.215957] *[#16117=-0.215985] *[#16119=-0.216028] *[#16120=-0.216029] *[#16123=-0.216038] *[#16128=-0.216177] *[#16129=-0.216179] *[#16135=-0.216205] *[#16140=-0.216243] *[#16147=-0.216301] *[#16150=-0.216427] *[#16151=-0.216446] *[#16158=-0.216451] *[#16168=-0.216478] *[#16173=-0.216537] *[#16174=-0.216562] *[#16177=-0.216583] *[#16183=-0.216603] *[#16184=-0.216652] *[#16187=-0.216699] *[#16190=-0.216701] *[#16200=-0.216715] *[#16205=-0.216752] *[#16206=-0.216775] *[#16220=-0.216791] *[#16222=-0.216818] *[#16223=-0.216846] *[#16224=-0.21686] *[#16229=-0.216898] *[#16232=-0.216958] *[#16233=-0.216966] *[#16236=-0.21706] *[#16245=-0.217128] *[#16248=-0.217153] *[#16251=-0.217188] *[#16252=-0.217234] *[#16253=-0.217257] *[#16258=-0.217337] *[#16261=-0.217407] *[#16262=-0.21741] *[#16264=-0.217417] *[#16266=-0.217425] *[#16268=-0.217476] *[#16269=-0.217494] *[#16273=-0.217722] *[#16280=-0.217727] *[#16282=-0.21779] *[#16283=-0.217816] *[#16284=-0.217864] *[#16289=-0.217955] *[#16290=-0.21798] *[#16301=-0.218076] *[#16302=-0.218136] *[#16309=-0.218148] *[#16310=-0.218195] *[#16311=-0.218253] *[#16338=-0.218273] *[#16342=-0.218277] *[#16353=-0.21833] *[#16366=-0.218342] *[#16370=-0.218343] *[#16372=-0.218352] *[#16373=-0.21836] *[#16374=-0.218372] *[#16375=-0.218374] *[#16378=-0.218383] *[#16379=-0.218386] *[#16380=-0.218388] *[#16381=-0.218389] *[#16384=-0.218391] *[#16385=-0.218397] *[#16386=-0.218399] *[#16387=-0.218402] *[#16388=-0.218402] *[#16390=-0.218405] *[#16391=-0.218406] *[#16394=-0.218409] *[#16395=-0.218414] *[#16410=-0.218417] *[#16411=-0.218418] *[#16422=-0.21842] *[#16429=-0.218421] *[#16430=-0.218422] *[#16431=-0.218424] *[#16434=-0.218426] *[#16435=-0.218427] *[#16437=-0.218432] *[#16438=-0.218436] *[#16441=-0.218441] *[#16442=-0.218442] *[#16443=-0.218444] *[#16448=-0.218448] *[#16451=-0.218451] *[#16452=-0.218453] *[#16453=-0.218454] *[#16454=-0.218455] *[#16457=-0.218462] *[#16460=-0.218462] *[#16461=-0.218465] *[#16462=-0.21847] *[#16463=-0.218473] *[#16464=-0.218476] *[#16465=-0.218478] *[#16466=-0.21848] *[#16467=-0.218485] *[#16468=-0.218493] *[#16469=-0.218498] *[#16474=-0.218505] *[#16475=-0.218511] *[#16476=-0.218519] *[#16477=-0.218529] *[#16478=-0.218536] *[#16483=-0.218537] *[#16484=-0.218539] *[#16487=-0.218542] *[#16488=-0.218543] *[#16489=-0.218545] *[#16490=-0.218548] *[#16491=-0.218548] *[#16495=-0.218552] *[#16496=-0.218553] *[#16497=-0.218555] *[#16498=-0.218558] *[#16499=-0.218559] *[#16502=-0.218562] *[#16503=-0.218567] *[#16504=-0.218572] *[#16505=-0.218574] *[#16506=-0.218584] *[#16507=-0.218591] *[#16508=-0.218609] *[#16509=-0.21864] *[#16510=-0.218686] *[#16527=-0.218694] *[#16528=-0.218699] *[#16531=-0.218702] *[#16532=-0.218705] *[#16533=-0.218707] *[#16538=-0.218708] *[#16539=-0.21871] *[#16542=-0.218714] *[#16545=-0.218719] *[#16550=-0.218719] *[#16552=-0.218721] *[#16553=-0.218722] *[#16554=-0.218722] *[#16555=-0.218724] *[#16558=-0.218726] *[#16563=-0.218727] *[#16567=-0.218727] *[#16568=-0.218728] *[#16569=-0.218732] *[#16570=-0.218732] *[#16572=-0.218733] *[#16577=-0.218736] *[#16580=-0.218737] *[#16582=-0.218741] *[#16583=-0.218744] *[#16584=-0.218745] *[#16588=-0.218745] *[#16596=-0.218748] *[#16599=-0.218749] *[#16600=-0.21875] *[#16602=-0.21875] *[#16605=-0.218751] *[#16612=-0.218753] *[#16621=-0.218754] *[#16633=-0.218754] *[#16643=-0.218755] *[#16646=-0.218756] *[#16647=-0.218756] *[#16662=-0.218757] *[#16663=-0.218757] *[#16666=-0.218758] *[#16669=-0.218759] *[#16670=-0.218759] *[#16674=-0.21876] *[#16675=-0.218762] *[#16684=-0.218763] *[#16687=-0.218763] *[#16689=-0.218764] *[#16690=-0.218765] *[#16695=-0.218766] *[#16703=-0.218767] *[#16708=-0.218768] *[#16709=-0.218769] *[#16713=-0.218769] *[#16716=-0.218771] *[#16717=-0.218772] *[#16718=-0.218773] *[#16720=-0.218774] *[#16721=-0.218776] *[#16726=-0.218776] *[#16727=-0.218777] *[#16750=-0.218778] *[#16753=-0.218778] *[#16754=-0.218778] *[#16759=-0.218779] *[#16760=-0.21878] *[#16765=-0.21878] *[#16767=-0.21878] *[#16771=-0.218781] *[#16772=-0.218782] *[#16777=-0.218782] *[#16786=-0.218783] *[#16797=-0.218783] *[#16800=-0.218783] *[#16806=-0.218783] *[#16808=-0.218784] *[#16821=-0.218784] *[#16832=-0.218784] *[#16834=-0.218784] *[#16839=-0.218784] *[#16841=-0.218785] *[#16844=-0.218785] *[#16847=-0.218786] *[#16864=-0.218786] *[#16867=-0.218786] *[#16872=-0.218786] *[#16881=-0.218787] *[#16915=-0.218787] *[#16970=-0.218787] 
 + - Final    cost = -0.218787 ; 1164 funcs
 + Final fine fit Parameters:
       x-shift= -0.0739   y-shift=  4.1514   z-shift= -2.2430  ...  enorm=  4.7191 mm
       z-angle=  0.0063   x-angle=  0.3644   y-angle= -1.6553  ...  total=  1.6949 deg
       x-scale=  0.9946   y-scale=  1.0596   z-scale=  0.9923  ...  vol3D=  1.0458 = base smaller than source
     y/x-shear=  0.0090 z/x-shear=  0.0285 z/y-shear=  0.0051
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.0739 4.1514 -2.2430 0.0063 0.3644 -1.6553 0.9946 1.0596 0.9923 0.0090 0.0285 0.0051
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S11_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./anatSS.sub-S11_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 51.8
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S11_unflipped_ob_temp_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.406977 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.406977 degrees from plumb.
++ Source dataset: ./anatSS.sub-S11_unflipped_ob_temp_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1575245 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=5
++ Zero-pad: zbot=8 ztop=8
++ 43269 voxels [18.3%] in weight mask
++ Number of points for matching = 43269
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 30.972 38.768 24.793 (index)
 + source center of mass = 94.164 86.967 62.267 (index)
 + source-target CM = 0.249 6.337 -2.080 (xyz)
 + estimated center of mass shifts = 0.249 6.337 -2.080
++ shift param auto-range: -60.4..60.9 -66.9..79.5 -58.7..54.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -9.751389 .. 10.248611  center = 0.248611
 + Range param#2 [y-shift] = -3.662560 .. 16.337440  center = 6.337440
 + Range param#3 [z-shift] = -12.080215 .. 7.919785  center = -2.080215
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -39.751389 .. 40.248611  center = 0.248611
 + Range param#2 [y-shift] = -33.662560 .. 46.337440  center = 6.337440
 + Range param#3 [z-shift] = -42.080215 .. 37.919785  center = -2.080215
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -39.751 ..   40.249
 +       y-shift =  -33.663 ..   46.337
 +       z-shift =  -42.080 ..   37.920
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1575245 [out of 4423680] voxels
 + base mask has 57701 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=104.139 usiz=476.652
 + - copying weight image
 + - using 43269 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 283.666 .. 1088.61; base clip 198.017 .. 803.855
 +  - versus source range 3.90753e-06 .. 1067; base range 0 .. 914.65
 + 38703 total points stored in 405 'RHDD(12.0364)' bloks
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_ts_ns_wt+orig -source ./anatSS.sub-S11_flip_al_junk+orig -base ./vr_base_ts_ns+orig -cmass -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns_wt+orig.BRIK is 12.406977 degrees from plumb.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.406977 degrees from plumb.
++ Source dataset: ./anatSS.sub-S11_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1537112 voxels in -source_automask+2
++ Zero-pad: ybot=8 ytop=5
++ Zero-pad: zbot=8 ztop=8
++ 43269 voxels [18.3%] in weight mask
++ Number of points for matching = 43269
++ Local correlation: blok type = 'RHDD(11.9925)'
++ base center of mass = 30.972 38.768 24.793 (index)
 + source center of mass = 93.658 87.621 62.041 (index)
 + source-target CM = -0.258 5.684 -2.306 (xyz)
 + estimated center of mass shifts = -0.258 5.684 -2.306
++ shift param auto-range: -60.9..60.4 -67.5..78.9 -58.9..54.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.257515 .. 9.742485  center = -0.257515
 + Range param#2 [y-shift] = -4.315926 .. 15.684074  center = 5.684074
 + Range param#3 [z-shift] = -12.306145 .. 7.693855  center = -2.306145
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.257515 .. 39.742485  center = -0.257515
 + Range param#2 [y-shift] = -34.315926 .. 45.684074  center = 5.684074
 + Range param#3 [z-shift] = -42.306145 .. 37.693855  center = -2.306145
 + 12 free parameters
++ Normalized convergence radius = 0.0000091
++ Final parameter search ranges:
 +       x-shift =  -40.258 ..   39.742
 +       y-shift =  -34.316 ..   45.684
 +       z-shift =  -42.306 ..   37.694
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 1 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 1537112 [out of 4423680] voxels
 + base mask has 57701 [out of 236544] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=101.528 usiz=478.029
 + - copying weight image
 + - using 43269 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 281.349 .. 1086.45; base clip 198.017 .. 803.855
 +  - versus source range 1.47675e-05 .. 1063.4; base range 0 .. 914.65
 + 38703 total points stored in 405 'RHDD(12.0364)' bloks
++ -allcostX1D finished
No flip cost is -0.730701 for lpc+ZZ cost function
Flip cost is -0.211287 for lpc+ZZ cost function
Data does not need flipping
#Script is running (command trimmed):
  cat_matvec -ONELINE ./anatSS.sub-S11_al_junk_e2a_only_mat.aff12.1D ./anatSS.sub-S11_unflipped_obla2e_mat.1D -I > ./anatSS.sub-S11_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./vr_base_ts_ns+orig -1Dmatrix_apply ./anatSS.sub-S11_al_junk_mat.aff12.1D -prefix ./anatSS.sub-S11_al_junk -input ./anatSS.sub-S11_unflipped+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_ts_ns+orig.BRIK is 12.406977 degrees from plumb.
++ Source dataset: ./anatSS.sub-S11_unflipped+orig.HEAD
++ Base dataset:   ./vr_base_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 30.972 30.768 16.793 (index)
 + source center of mass = 126.076 92.943 115.382 (index)
 + source-target CM = -1.034 23.074 13.042 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -1.034   23.074   13.042
 +  shift search range is +/- =   60.669   60.669   37.316
 +                                  1.7%    38.0%    34.9%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.833 ..    1.200
 +       y-scale =    0.833 ..    1.200
 +       z-scale =    0.833 ..    1.200
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0080 0.0446 -0.0201 28.5520 -0.0066 -0.2417 -0.9715 175.6560 -0.0500 0.9787 -0.2467 50.5752
++ Unloading unneeded data
++ Output dataset ./anatSS.sub-S11_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat anatSS.sub-S11+orig -suffix \
 _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask \
 -anat_has_skull no -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./anatSS.sub-S11_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_anatSS.sub-S11*

# Finished alignment successfully

if ( ! -f anatQQ.sub-S11+tlrc.HEAD ) then
foreach run ( 01 02 03 04 05 06 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.sub-S11.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.406977 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S11.r01.tshift+orig.BRIK is 12.406977 degrees from plumb.
++ Reading input dataset ./pb02.sub-S11.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 45063 voxels
 + 6245 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.180  pitch=-0.593  yaw=-0.496  dS=-0.568  dL=-0.172  dP=-0.195
++ Mean: roll=-0.082  pitch=+0.001  yaw=-0.175  dS=-0.224  dL=+0.023  dP=+0.075
++ Max : roll=+0.004  pitch=+0.329  yaw=+0.085  dS=+0.069  dL=+0.254  dP=+0.223
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.12(0.12) 0.13(0.06) 0.08(0.10) 0.08(0.06) 0.09(0.03) 0.13(0.04) 0.11(0.03) 0.09(0.05) 0.10(0.06) 0.14(0.08) 0.12(0.12) 0.14(0.13) 0.12(0.03) 0.12(0.03) 0.10(0.03) 0.10(0.03) 0.12(0.04) 0.12(0.03) 0.11(0.07) 0.11(0.04) 0.10(0.03) 0.11(0.04) 0.13(0.05) 0.12(0.07) 0.13(0.06) 0.14(0.06) 0.13(0.05) 0.12(0.05) 0.15(0.07) 0.16(0.03) 0.15(0.05) 0.14(0.05) 0.16(0.19) 0.25(0.19) 0.17(0.19) 0.17(0.06) 0.18(0.11) 0.16(0.05) 0.18(0.07) 0.18(0.04) 0.18(0.03) 0.18(0.05) 0.17(0.06) 0.22(0.12) 0.23(0.01) 0.24(0.13) 0.19(0.10) 0.17(0.05) 0.18(0.01) 0.17(0.06) 0.18(0.06) 0.17(0.06) 0.19(0.07) 0.18(0.03) 0.17(0.02) 0.17(0.02) 0.17(0.05) 0.21(0.12) 0.17(0.08) 0.16(0.03) 0.19(0.05) 0.18(0.04) 0.18(0.04) 0.16(0.04) 0.19(0.05) 0.20(0.06) 0.18(0.02) 0.19(0.05) 0.17(0.06) 0.17(0.03) 0.16(0.04) 0.21(0.07) 0.20(0.04) 0.18(0.05) 0.18(0.03) 0.14(0.08) 0.18(0.09) 0.14(0.03) 0.18(0.05) 0.19(0.09) 0.18(0.04) 0.18(0.04) 0.15(0.08) 0.16(0.07) 0.16(0.05) 0.17(0.09) 0.16(0.09) 0.17(0.04) 0.13(0.08) 0.13(0.03) 0.14(0.02) 0.14(0.04) 0.16(0.07) 0.14(0.03) 0.13(0.04) 0.15(0.04) 0.14(0.07) 0.14(0.06) 0.16(0.03) 0.16(0.02) 0.14(0.03) 0.12(0.06) 0.16(0.07) 0.16(0.08) 0.15(0.05) 0.14(0.08) 0.16(0.13) 0.15(0.04) 0.15(0.05) 0.14(0.04) 0.14(0.07) 0.17(0.08) 0.38(0.29) 0.32(0.21) 0.29(0.10) 0.35(0.10) 0.31(0.09) 0.30(0.09) 0.36(0.16) 0.36(0.10) 0.36(0.05) 0.37(0.05) 0.31(0.10) 0.37(0.11) 0.32(0.09) 0.32(0.05) 0.28(0.09) 0.31(0.14) 0.31(0.03) 0.29(0.05) 0.25(0.09) 0.28(0.12) 0.26(0.11) 0.29(0.10) 0.29(0.07) 0.26(0.06) 0.25(0.04) 0.26(0.07) 0.28(0.12) 0.36(0.15) 0.47(0.19) 0.38(0.13) 0.38(0.06) 0.29(0.12) 0.30(0.06) 0.28(0.02) 0.30(0.04) 0.28(0.07) 0.29(0.03) 0.26(0.03) 0.29(0.03) 0.26(0.04) 0.29(0.03) 0.27(0.03) 0.33(0.07) 0.34(0.05) 0.30(0.09) 0.30(0.08) 0.29(0.02) 0.32(0.03) 0.32(0.05) 0.31(0.02) 0.30(0.02) 0.31(0.03) 0.27(0.07) 0.30(0.09) 0.26(0.08) 0.24(0.09) 0.26(0.06) 0.27(0.05) 0.36(0.12) 0.27(0.10) 0.27(0.02) 0.33(0.06) 0.28(0.07) 0.29(0.05) 0.25(0.06) 0.30(0.06) 0.29(0.07) 0.34(0.11) 0.35(0.02) 0.27(0.11) 0.24(0.06) 0.32(0.16) 0.30(0.03) 0.25(0.06) 0.32(0.10) 0.27(0.07) 0.28(0.04) 0.26(0.04) 0.25(0.03) 0.28(0.05) 0.28(0.05) 0.29(0.03) 0.31(0.05) 0.28(0.03) 0.31(0.08) 0.27(0.13) 0.33(0.07) 0.35(0.04) 0.45(0.12) 0.31(0.35) 0.41(0.15) 0.45(0.24) 0.41(0.08) 0.39(0.07) 0.38(0.07) 0.39(0.11) 0.44(0.13) 0.35(0.50) 0.53(0.44) 0.53(0.28) 0.67(0.33) 0.56(0.32) 0.54(0.24) 0.54(0.11) 0.65(0.15) 0.61(0.21) 0.55(0.11) 0.54(0.13) 0.60(0.13) 0.60(0.13) 0.55(0.11) 0.56(0.09) 0.60(0.08) 0.67(0.12) 0.61(0.14) 0.63(0.10) 0.59(0.08) 0.62(0.05) 0.60(0.19) 0.73(0.23) 0.69(0.16) 0.63(0.10) 0.67(0.08) 0.60(0.15) 0.63(0.10) 0.61(0.10) 0.64(0.09) 0.62(0.06) 0.58(0.06) 0.59(0.04) 0.59(0.05) 0.65(0.08) 0.57(0.12) 0.62(0.12) 0.56(0.14) 0.60(0.10) 0.60(0.06) 0.65(0.10) 0.74(0.13) 0.70(0.16) 0.62(0.11) 0.60(0.12) 0.65(0.07) 0.61(0.11) 0.66(0.12) 0.66(0.09) 0.66(0.02) 0.70(0.09) 0.93(0.46) 1.38(0.53) 1.43(0.16) 1.53(0.20) 1.66(0.16) 1.45(0.49) 1.07(0.85) 1.06(0.14) 1.11(0.12) 1.17(0.21) 1.16(0.11) 1.12(0.09) 1.26(0.16) 1.21(0.23) 1.22(0.19) 1.21(0.09) 1.19(0.04) 1.18(0.03) 1.16(0.14) 1.18(0.20) 1.14(0.13) 1.13(0.07) 1.11(0.04) 1.07(0.13) 1.05(0.15) 1.02(0.17) 0.94(0.11) 0.96(0.07) 0.93(0.10) 0.92(0.13) 0.94(0.09) 0.94(0.16) 0.93(0.09) 0.89(0.12) 0.87(0.14) 0.89(0.03) 0.90(0.10) 0.88(0.09) 0.88(0.08) 0.90(0.13) 0.90(0.05) 0.89(0.04) 0.90(0.15) 0.90(0.07) 0.89(0.02) 0.88(0.07) 0.88(0.05) 0.88(0.03) 0.87(0.07) 0.87(0.09) 0.88(0.03) 0.88(0.04) 0.87(0.03) 0.86(0.05) 0.85(0.08) 0.86(0.03) 0.86(0.02) 0.86(0.03) 0.86(0.02) 0.88(0.03) 0.89(0.04) 0.87(0.02) 0.84(0.08) 0.85(0.05) 0.89(0.09) 0.85(0.06) 0.85(0.14) 0.85(0.11) 0.84(0.03) 0.85(0.03) 0.87(0.06) 0.86(0.04) 0.86(0.10) 0.83(0.16) 0.84(0.10) 0.86(0.05) 0.88(0.07) 0.86(0.15) 0.85(0.07) 0.87(0.08) 0.87(0.04) 0.87(0.02) 0.86(0.02) 0.87(0.03) 0.86(0.08) 0.85(0.12) 0.85(0.08) 0.85(0.03) 0.85(0.04) 0.85(0.06) 0.87(0.06) 0.88(0.11) 0.87(0.18) 0.86(0.07) 0.86(0.03) 0.87(0.02) 0.85(0.05) 0.83(0.05) 0.84(0.03) 0.86(0.05) 0.85(0.03) 0.85(0.02) 0.85(0.05) 0.83(0.07) 0.82(0.02) 0.83(0.03) 0.83(0.03) 0.83(0.04) 0.82(0.04) 0.83(0.04) 0.80(0.04) 0.81(0.05) 0.82(0.04) 0.85(0.04) 0.84(0.03) 0.83(0.03) 0.83(0.06) 0.83(0.08) 0.82(0.05) 0.82(0.04) 0.79(0.05) 0.81(0.04) 0.83(0.05) 0.80(0.04) 0.80(0.06) 0.81(0.05) 0.77(0.09) 0.80(0.05) 0.82(0.05) 0.80(0.02) 0.83(0.06) 0.82(0.06) 0.79(0.04) 0.80(0.03) 0.80(0.04) 0.80(0.07) 0.80(0.05) 0.80(0.03) 0.82(0.08) 0.80(0.06) 0.80(0.10) 0.81(0.10) 0.82(0.06) 0.82(0.10) 0.81(0.08) 0.81(0.04) 0.81(0.05) 0.82(0.07) 0.82(0.06) 0.81(0.08) 0.81(0.09)
++ Max displacement in automask = 1.66 (mm) at sub-brick 265
++ Max delta displ  in automask = 0.85 (mm) at sub-brick 267
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.sub-S11.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S11.aff12.1D anatSS.sub-S11_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source pb02.sub-S11.r01.tshift+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S11.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S11.r01.tshift+orig.BRIK is 12.406977 degrees from plumb.
++ opened source dataset 'pb02.sub-S11.r01.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1243623424
in use bytes     = 1046033136
Total (incl. mmap):
system bytes     = 1243623424
in use bytes     = 1046033136
max mmap regions =          1
max mmap bytes   =   98738176
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 1598.5 sec
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.406977 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1243623424
in use bytes     = 1046033296
Total (incl. mmap):
system bytes     = 1243623424
in use bytes     = 1046033296
max mmap regions =          1
max mmap bytes   =   98738176
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.sub-S11.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.406977 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S11.r02.tshift+orig.BRIK is 12.406977 degrees from plumb.
++ Reading input dataset ./pb02.sub-S11.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 45184 voxels
 + 6255 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.234  pitch=-0.632  yaw=-0.373  dS=-0.194  dL=-0.265  dP=-0.035
++ Mean: roll=-0.057  pitch=-0.115  yaw=-0.100  dS=+0.092  dL=-0.012  dP=+0.158
++ Max : roll=+0.039  pitch=+0.168  yaw=+0.026  dS=+0.316  dL=+0.206  dP=+0.383
++ Max displacements (mm) for each sub-brick:
 0.43(0.00) 0.49(0.13) 0.49(0.06) 0.48(0.05) 0.53(0.08) 0.50(0.04) 0.52(0.06) 0.53(0.06) 0.56(0.05) 0.57(0.03) 0.52(0.07) 0.53(0.04) 0.48(0.07) 0.51(0.05) 0.47(0.06) 0.48(0.03) 0.45(0.11) 0.44(0.02) 0.46(0.07) 0.45(0.07) 0.42(0.08) 0.44(0.13) 0.44(0.06) 0.47(0.08) 0.44(0.06) 0.46(0.03) 0.40(0.08) 0.41(0.04) 0.40(0.04) 0.41(0.07) 0.39(0.07) 0.34(0.06) 0.37(0.09) 0.40(0.09) 0.42(0.07) 0.39(0.05) 0.41(0.02) 0.36(0.06) 0.38(0.07) 0.40(0.02) 0.37(0.06) 0.40(0.06) 0.38(0.06) 0.41(0.10) 0.38(0.05) 0.40(0.06) 0.37(0.08) 0.37(0.09) 0.36(0.04) 0.41(0.07) 0.39(0.07) 0.42(0.07) 0.38(0.06) 0.38(0.08) 0.37(0.05) 0.38(0.06) 0.39(0.05) 0.36(0.05) 0.39(0.06) 0.36(0.06) 0.37(0.04) 0.38(0.04) 0.35(0.04) 0.38(0.04) 0.37(0.04) 0.40(0.04) 0.37(0.04) 0.39(0.05) 0.35(0.05) 0.39(0.05) 0.35(0.07) 0.38(0.04) 0.35(0.04) 0.39(0.06) 0.37(0.04) 0.40(0.08) 0.37(0.15) 0.36(0.07) 0.40(0.24) 0.44(0.26) 0.36(0.19) 0.43(0.24) 0.41(0.09) 0.46(0.06) 0.36(0.12) 0.46(0.12) 0.40(0.07) 0.38(0.05) 0.42(0.05) 0.37(0.05) 0.43(0.06) 0.41(0.03) 0.39(0.07) 0.38(0.06) 0.45(0.08) 0.35(0.11) 0.41(0.08) 0.33(0.10) 0.38(0.06) 0.34(0.04) 0.34(0.03) 0.36(0.03) 0.36(0.03) 0.31(0.07) 0.31(0.08) 0.36(0.08) 0.31(0.09) 0.38(0.08) 0.31(0.09) 0.34(0.04) 0.31(0.06) 0.41(0.11) 0.36(0.06) 0.35(0.02) 0.30(0.06) 0.27(0.06) 0.34(0.08) 0.31(0.04) 0.29(0.06) 0.30(0.05) 0.25(0.09) 0.26(0.05) 0.26(0.07) 0.30(0.08) 0.33(0.06) 0.32(0.21) 0.40(0.12) 0.41(0.07) 0.41(0.04) 0.45(0.08) 0.42(0.04) 0.44(0.07) 0.44(0.05) 0.39(0.07) 0.39(0.05) 0.36(0.05) 0.37(0.04) 0.34(0.05) 0.37(0.05) 0.34(0.05) 0.37(0.06) 0.38(0.02) 0.35(0.07) 0.39(0.11) 0.37(0.05) 0.37(0.03) 0.38(0.04) 0.37(0.04) 0.47(0.16) 0.54(0.11) 0.45(0.11) 0.52(0.07) 0.50(0.04) 0.47(0.05) 0.51(0.06) 0.43(0.12) 0.45(0.09) 0.42(0.08) 0.45(0.04) 0.45(0.04) 0.39(0.09) 0.38(0.10) 0.38(0.04) 0.37(0.04) 0.35(0.04) 0.38(0.04) 0.37(0.04) 0.35(0.05) 0.40(0.07) 0.40(0.06) 0.39(0.05) 0.38(0.03) 0.41(0.11) 0.42(0.04) 0.46(0.05) 0.47(0.08) 0.56(0.41) 0.64(0.27) 0.46(0.45) 0.87(0.66) 1.23(0.58) 1.10(0.24) 0.63(0.60) 0.58(0.13) 0.51(0.17) 0.52(0.04) 0.52(0.11) 0.51(0.16) 0.52(0.17) 0.50(0.05) 0.51(0.03) 0.50(0.07) 0.49(0.13) 0.51(0.10) 0.52(0.08) 0.52(0.10) 0.50(0.07) 0.51(0.05) 0.52(0.04) 0.49(0.05) 0.52(0.05) 0.44(0.15) 0.51(0.18) 0.53(0.06) 0.55(0.20) 0.58(0.09) 0.52(0.11) 0.55(0.06) 0.53(0.10) 0.54(0.10) 0.55(0.02) 0.54(0.08) 0.55(0.07) 0.49(0.13) 0.54(0.16) 0.57(0.05) 0.52(0.06) 0.50(0.05) 0.49(0.14) 0.54(0.12) 0.54(0.13) 0.79(0.62) 1.34(0.69) 1.17(0.40) 1.16(0.23) 1.08(0.33) 1.22(0.25) 1.11(0.25) 0.93(0.20) 0.92(0.10) 0.85(0.08) 0.89(0.04) 0.82(0.09) 0.79(0.03) 0.57(0.23) 0.55(0.04) 0.54(0.09) 0.56(0.09) 0.54(0.04) 0.58(0.10) 0.56(0.11) 0.58(0.10) 0.55(0.14) 0.55(0.10) 0.55(0.11) 0.58(0.15) 0.58(0.08) 0.56(0.05) 0.52(0.07) 0.57(0.07) 0.52(0.21) 0.48(0.10) 0.61(0.17) 0.57(0.25) 0.58(0.21) 0.54(0.09) 0.49(0.09) 0.54(0.15) 0.50(0.18) 0.45(0.06) 0.49(0.09) 0.47(0.06) 0.50(0.07) 0.48(0.15) 0.49(0.13) 0.50(0.09) 0.47(0.03) 0.48(0.06) 0.47(0.03) 0.46(0.05) 0.45(0.02) 0.44(0.04) 0.46(0.02) 0.47(0.02) 0.44(0.05) 0.46(0.07) 0.50(0.09) 0.50(0.09) 0.51(0.03) 0.46(0.07) 0.46(0.08) 0.48(0.03) 0.47(0.05) 0.53(0.07) 0.50(0.06) 0.52(0.06) 0.48(0.08) 0.49(0.07) 0.46(0.05) 0.49(0.04) 0.48(0.02) 0.46(0.14) 0.41(0.05) 0.48(0.12) 0.45(0.05) 0.43(0.05) 0.49(0.08) 0.43(0.08) 0.45(0.04) 0.44(0.03) 0.44(0.02) 0.44(0.02) 0.43(0.02) 0.47(0.05) 0.42(0.06) 0.44(0.06) 0.45(0.04) 0.47(0.04) 0.49(0.05) 0.43(0.07) 0.47(0.05) 0.45(0.06) 0.49(0.07) 0.45(0.09) 0.50(0.12) 0.44(0.15) 0.43(0.04) 0.43(0.02) 0.41(0.03) 0.43(0.03) 0.46(0.04) 0.52(0.09) 0.48(0.11) 0.51(0.07) 0.48(0.05) 0.47(0.05) 0.48(0.04) 0.43(0.07) 0.43(0.09) 0.46(0.06) 0.46(0.06) 0.53(0.08) 0.47(0.08) 0.50(0.05) 0.49(0.04) 0.48(0.03) 0.44(0.07) 0.42(0.03) 0.44(0.07) 0.42(0.05) 0.45(0.07) 0.43(0.03) 0.44(0.04) 0.40(0.04) 0.46(0.08) 0.42(0.07) 0.42(0.04) 0.43(0.02) 0.42(0.05) 0.47(0.06) 0.29(0.26) 0.28(0.26) 0.42(0.32) 0.57(0.22) 0.38(0.21) 0.37(0.04) 0.32(0.07) 0.29(0.05) 0.28(0.11) 0.30(0.09) 0.31(0.05) 0.28(0.04) 0.31(0.05) 0.29(0.05) 0.29(0.02) 0.26(0.05) 0.27(0.03) 0.26(0.02) 0.27(0.04) 0.29(0.03) 0.29(0.03) 0.34(0.08) 0.29(0.09) 0.35(0.13) 0.34(0.07) 0.33(0.07) 0.36(0.06) 0.29(0.10) 0.32(0.09) 0.27(0.09) 0.27(0.03) 0.30(0.04) 0.28(0.03) 0.34(0.08) 0.30(0.10) 0.28(0.04) 0.30(0.06) 0.26(0.06) 0.34(0.15) 0.36(0.02) 0.36(0.04) 0.40(0.06) 0.36(0.08) 0.38(0.07) 0.35(0.03) 0.34(0.02) 0.35(0.01) 0.31(0.05) 0.31(0.04) 0.30(0.02) 0.39(0.13) 0.38(0.05) 0.38(0.02) 0.33(0.09) 0.35(0.07) 0.36(0.05) 0.34(0.11) 0.36(0.08) 0.32(0.07) 0.36(0.08) 0.36(0.04) 0.24(0.21)
++ Max displacement in automask = 1.34 (mm) at sub-brick 222
++ Max delta displ  in automask = 0.69 (mm) at sub-brick 222
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.sub-S11.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S11.aff12.1D anatSS.sub-S11_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source pb02.sub-S11.r02.tshift+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S11.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S11.r02.tshift+orig.BRIK is 12.406977 degrees from plumb.
++ opened source dataset 'pb02.sub-S11.r02.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1243623424
in use bytes     = 1046033136
Total (incl. mmap):
system bytes     = 1243623424
in use bytes     = 1046033136
max mmap regions =          1
max mmap bytes   =   98738176
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 1648.0 sec
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.406977 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1243623424
in use bytes     = 1046033296
Total (incl. mmap):
system bytes     = 1243623424
in use bytes     = 1046033296
max mmap regions =          1
max mmap bytes   =   98738176
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.sub-S11.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.406977 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S11.r03.tshift+orig.BRIK is 12.407040 degrees from plumb.
++ Reading input dataset ./pb02.sub-S11.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 45262 voxels
 + 6242 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.287  pitch=-0.166  yaw=-0.203  dS=-0.068  dL=-0.261  dP=+0.356
++ Mean: roll=-0.214  pitch=-0.030  yaw=-0.128  dS=+0.187  dL=-0.143  dP=+0.521
++ Max : roll=-0.074  pitch=+0.068  yaw=-0.044  dS=+0.347  dL=-0.011  dP=+0.697
++ Max displacements (mm) for each sub-brick:
 1.11(0.00) 1.15(0.22) 1.13(0.08) 1.10(0.05) 1.10(0.02) 1.11(0.10) 1.10(0.11) 1.09(0.05) 1.03(0.24) 1.07(0.19) 1.09(0.10) 1.08(0.03) 1.07(0.07) 1.04(0.05) 1.06(0.05) 1.08(0.02) 1.05(0.07) 1.07(0.04) 1.05(0.04) 1.05(0.05) 1.11(0.14) 1.11(0.08) 1.11(0.05) 1.07(0.06) 1.06(0.06) 1.03(0.04) 1.00(0.06) 1.02(0.06) 1.01(0.03) 1.04(0.08) 1.04(0.12) 0.97(0.08) 1.02(0.36) 0.98(0.09) 1.03(0.07) 1.07(0.10) 0.94(0.20) 0.97(0.07) 1.02(0.07) 0.94(0.17) 1.01(0.13) 1.02(0.05) 0.96(0.12) 1.01(0.10) 0.99(0.03) 1.00(0.02) 0.98(0.09) 1.00(0.08) 0.98(0.09) 1.00(0.07) 0.98(0.06) 1.00(0.07) 0.98(0.08) 0.96(0.06) 0.97(0.02) 0.97(0.04) 0.97(0.06) 0.99(0.09) 1.01(0.08) 1.01(0.08) 0.99(0.05) 0.95(0.07) 0.99(0.06) 0.98(0.03) 0.98(0.06) 0.96(0.04) 0.95(0.06) 0.95(0.08) 0.94(0.04) 0.93(0.12) 0.98(0.12) 0.94(0.05) 0.94(0.06) 0.96(0.08) 0.93(0.07) 0.95(0.09) 0.93(0.06) 0.93(0.05) 0.94(0.09) 0.99(0.12) 0.96(0.06) 0.97(0.05) 0.95(0.04) 0.95(0.02) 0.96(0.04) 0.94(0.05) 0.93(0.07) 0.93(0.06) 0.93(0.05) 0.93(0.04) 0.95(0.06) 0.90(0.08) 0.96(0.10) 0.97(0.08) 0.99(0.10) 0.97(0.07) 0.94(0.04) 0.93(0.03) 0.95(0.10) 0.93(0.08) 0.94(0.04) 0.93(0.03) 0.92(0.03) 0.94(0.32) 0.95(0.17) 0.91(0.17) 0.96(0.29) 0.97(0.28) 0.89(0.17) 0.95(0.11) 0.92(0.05) 0.86(0.15) 0.94(0.15) 0.90(0.11) 0.88(0.09) 0.95(0.18) 0.90(0.10) 0.90(0.05) 0.88(0.05) 0.89(0.03) 0.87(0.03) 0.87(0.05) 0.90(0.09) 0.87(0.09) 0.89(0.06) 0.92(0.10) 0.88(0.09) 0.87(0.09) 0.85(0.08) 0.88(0.04) 0.91(0.06) 0.91(0.10) 0.90(0.06) 0.88(0.07) 0.85(0.10) 0.86(0.04) 0.86(0.04) 0.86(0.06) 0.86(0.13) 0.87(0.09) 0.86(0.15) 0.91(0.09) 0.93(0.08) 0.90(0.03) 0.86(0.06) 0.86(0.04) 0.83(0.11) 0.81(0.08) 0.83(0.04) 0.85(0.06) 0.84(0.07) 0.86(0.09) 0.86(0.04) 0.83(0.07) 0.83(0.05) 0.83(0.07) 0.80(0.18) 0.88(0.17) 0.84(0.07) 0.83(0.05) 0.85(0.09) 0.81(0.09) 0.82(0.06) 0.84(0.05) 0.84(0.07) 0.83(0.07) 0.81(0.03) 0.86(0.09) 0.83(0.05) 0.83(0.02) 0.84(0.08) 0.80(0.07) 0.88(0.14) 0.95(0.25) 0.97(0.20) 0.91(0.30) 0.83(0.12) 0.87(0.09) 0.81(0.14) 0.85(0.06) 0.88(0.11) 0.81(0.14) 0.86(0.10) 0.82(0.04) 0.83(0.03) 0.83(0.02) 0.80(0.04) 0.81(0.02) 0.81(0.05) 0.81(0.06) 0.82(0.10) 0.79(0.08) 0.81(0.07) 0.82(0.05) 0.83(0.07) 0.83(0.11) 0.82(0.05) 0.81(0.07) 0.81(0.05) 0.80(0.04) 0.78(0.07) 0.80(0.10) 0.78(0.11) 0.78(0.09) 0.78(0.04) 0.78(0.03) 0.79(0.05) 0.79(0.03) 0.80(0.06) 0.79(0.07) 0.79(0.06) 0.78(0.04) 0.80(0.08) 0.77(0.11) 0.78(0.05) 0.79(0.10) 0.79(0.09) 0.77(0.05) 0.76(0.04) 0.75(0.08) 0.75(0.07) 0.75(0.05) 0.74(0.08) 0.71(0.10) 0.72(0.08) 0.76(0.07) 0.75(0.04) 0.75(0.08) 0.75(0.04) 0.75(0.08) 0.77(0.08) 0.75(0.07) 0.75(0.07) 0.74(0.03) 0.72(0.05) 0.75(0.06) 0.73(0.04) 0.75(0.06) 0.73(0.06) 0.78(0.08) 0.78(0.09) 0.78(0.04) 0.74(0.09) 0.69(0.14) 0.73(0.06) 0.69(0.10) 0.70(0.03) 0.73(0.04) 0.71(0.05) 0.72(0.05) 0.68(0.04) 0.72(0.07) 0.71(0.06) 0.75(0.12) 0.73(0.03) 0.76(0.12) 0.70(0.06) 0.71(0.03) 0.70(0.02) 0.69(0.03) 0.69(0.03) 0.67(0.03) 0.68(0.02) 0.66(0.04) 0.69(0.05) 0.67(0.07) 0.68(0.01) 0.69(0.10) 0.75(0.11) 0.76(0.03) 0.76(0.02) 0.71(0.11) 0.68(0.06) 0.71(0.05) 0.69(0.05) 0.72(0.04) 0.69(0.07) 0.72(0.05) 0.72(0.02) 0.72(0.08) 0.69(0.07) 0.73(0.11) 0.70(0.04) 0.74(0.09) 0.71(0.07) 0.74(0.09) 0.73(0.01) 0.75(0.10) 0.74(0.03) 0.77(0.08) 0.76(0.04) 0.74(0.05) 0.75(0.05) 0.72(0.07) 0.77(0.08)
++ Max displacement in automask = 1.15 (mm) at sub-brick 1
++ Max delta displ  in automask = 0.36 (mm) at sub-brick 32
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.sub-S11.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S11.aff12.1D anatSS.sub-S11_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source pb02.sub-S11.r03.tshift+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S11.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S11.r03.tshift+orig.BRIK is 12.407040 degrees from plumb.
++ opened source dataset 'pb02.sub-S11.r03.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1243582464
in use bytes     = 1045987824
Total (incl. mmap):
system bytes     = 1243582464
in use bytes     = 1045987824
max mmap regions =          1
max mmap bytes   =   98738176
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 1142.3 sec
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.407040 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1243582464
in use bytes     = 1045987984
Total (incl. mmap):
system bytes     = 1243582464
in use bytes     = 1045987984
max mmap regions =          1
max mmap bytes   =   98738176
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -cubic -1Dmatrix_save mat.r04.vr.aff12.1D pb02.sub-S11.r04.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.406977 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S11.r04.tshift+orig.BRIK is 18.695126 degrees from plumb.
++ centers of base and input datasets are 15.97 mm apart
++ Reading input dataset ./pb02.sub-S11.r04.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44595 voxels
 + 6237 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.751  pitch=-5.150  yaw=-0.226  dS=-0.970  dL=-0.579  dP=-0.532
++ Mean: roll=-0.680  pitch=-4.985  yaw=-0.104  dS=-0.656  dL=-0.500  dP=-0.344
++ Max : roll=-0.509  pitch=-4.713  yaw=-0.019  dS=-0.496  dL=-0.286  dP=-0.222
++ Max displacements (mm) for each sub-brick:
 8.46(0.00) 8.50(0.08) 8.59(0.09) 8.48(0.12) 8.53(0.06) 8.48(0.06) 8.62(0.15) 8.51(0.11) 8.56(0.06) 8.54(0.03) 8.52(0.03) 8.52(0.03) 8.53(0.03) 8.53(0.04) 8.50(0.04) 8.53(0.04) 8.56(0.06) 8.54(0.02) 8.54(0.06) 8.57(0.04) 8.50(0.08) 8.48(0.03) 8.51(0.04) 8.48(0.03) 8.49(0.02) 8.50(0.05) 8.48(0.06) 8.55(0.07) 8.56(0.04) 8.54(0.04) 8.53(0.02) 8.53(0.02) 8.49(0.05) 8.53(0.04) 8.53(0.03) 8.53(0.03) 8.53(0.02) 8.54(0.04) 8.51(0.05) 8.49(0.03) 8.56(0.09) 8.50(0.07) 8.44(0.06) 8.46(0.02) 8.49(0.03) 8.46(0.05) 8.48(0.05) 8.48(0.02) 8.48(0.06) 8.51(0.05) 8.50(0.02) 8.49(0.06) 8.47(0.04) 8.46(0.02) 8.42(0.05) 8.45(0.03) 8.45(0.02) 8.41(0.04) 8.38(0.04) 8.43(0.05) 8.43(0.02) 8.39(0.04) 8.44(0.05) 8.43(0.02) 8.43(0.05) 8.51(0.09) 8.46(0.05) 8.49(0.05) 8.42(0.08) 8.47(0.06) 8.48(0.01) 8.53(0.06) 8.44(0.09) 8.47(0.03) 8.48(0.02) 8.43(0.05) 8.45(0.03) 8.45(0.01) 8.41(0.04) 8.43(0.04) 8.44(0.03) 8.46(0.04) 8.44(0.04) 8.46(0.03) 8.47(0.02) 8.47(0.05) 8.45(0.06) 8.50(0.05) 8.46(0.04) 8.43(0.03) 8.43(0.01) 8.40(0.04) 8.37(0.03) 8.39(0.04) 8.39(0.04) 8.43(0.05) 8.43(0.02) 8.38(0.07) 8.42(0.05) 8.41(0.01) 8.40(0.05) 8.44(0.06) 8.41(0.03) 8.43(0.03) 8.42(0.02) 8.40(0.03) 8.39(0.03) 8.44(0.05) 8.38(0.06) 8.40(0.04) 8.42(0.03) 8.44(0.02) 8.43(0.03) 8.41(0.02) 8.41(0.02) 8.41(0.03) 8.38(0.02) 8.42(0.04) 8.37(0.06) 8.39(0.03) 8.40(0.05) 8.39(0.03) 8.42(0.04) 8.48(0.06) 8.38(0.12) 8.42(0.04) 8.36(0.14) 8.39(0.06) 8.37(0.10) 8.45(0.10) 8.38(0.07) 8.37(0.04) 8.41(0.07) 8.37(0.05) 8.32(0.05) 8.39(0.07) 8.38(0.01) 8.33(0.06) 8.39(0.06) 8.36(0.04) 8.40(0.04) 8.35(0.05) 8.37(0.09) 8.43(0.14) 8.51(0.25) 8.30(0.24) 8.31(0.10) 8.32(0.04) 8.32(0.03) 8.40(0.08) 8.28(0.13) 8.34(0.07) 8.38(0.05) 8.37(0.03) 8.33(0.04) 8.40(0.07) 8.35(0.06) 8.36(0.03) 8.38(0.04) 8.34(0.05) 8.37(0.04) 8.34(0.04) 8.36(0.04) 8.37(0.03) 8.41(0.04) 8.38(0.03) 8.39(0.04) 8.40(0.02) 8.40(0.02) 8.40(0.06) 8.41(0.05) 8.40(0.01) 8.39(0.03) 8.41(0.03) 8.41(0.03) 8.35(0.09) 8.30(0.10) 8.29(0.18) 8.33(0.16) 8.34(0.06) 8.28(0.10) 8.39(0.18) 8.37(0.04) 8.33(0.05) 8.34(0.04) 8.37(0.03) 8.37(0.02) 8.35(0.06) 8.40(0.05) 8.31(0.09) 8.34(0.03) 8.29(0.05) 8.34(0.06) 8.35(0.02) 8.29(0.07) 8.33(0.05) 8.35(0.04) 8.31(0.04) 8.38(0.08) 8.40(0.03) 8.35(0.11) 8.39(0.09) 8.29(0.10) 8.34(0.05) 8.34(0.02) 8.32(0.04) 8.35(0.03) 8.32(0.03) 8.30(0.03) 8.27(0.03) 8.32(0.05) 8.40(0.10) 8.35(0.10) 8.35(0.05) 8.39(0.04) 8.33(0.06) 8.30(0.05) 8.33(0.04) 8.36(0.04) 8.31(0.05) 8.32(0.02) 8.34(0.05) 8.30(0.04) 8.35(0.08) 8.30(0.06) 8.31(0.02) 8.27(0.05) 8.36(0.09) 8.34(0.06) 8.37(0.05) 8.30(0.07) 8.28(0.05) 8.29(0.04) 8.27(0.03) 8.32(0.05) 8.37(0.05) 8.32(0.05) 8.36(0.05) 8.28(0.08) 8.28(0.03) 8.32(0.05) 8.35(0.05) 8.33(0.05) 8.26(0.07) 8.27(0.04) 8.28(0.06) 8.31(0.05) 8.35(0.04) 8.22(0.13) 8.34(0.13) 8.30(0.05) 8.36(0.06) 8.26(0.10) 8.31(0.06) 8.29(0.03) 8.29(0.02) 8.26(0.07) 8.31(0.06) 8.23(0.09) 8.24(0.02) 8.28(0.05) 8.30(0.07) 8.32(0.04) 8.31(0.05) 8.28(0.12) 8.22(0.07) 8.26(0.05) 8.33(0.08) 8.33(0.04) 8.29(0.05) 8.26(0.08) 8.29(0.04) 8.27(0.06) 8.30(0.06) 8.29(0.03) 8.28(0.02) 8.28(0.02) 8.24(0.19) 8.03(0.30) 8.32(0.34) 8.54(0.24) 8.41(0.18) 8.45(0.10) 8.35(0.11) 8.47(0.13) 8.41(0.07) 8.48(0.11) 8.38(0.13) 8.37(0.04) 8.39(0.14) 8.51(0.23) 8.41(0.10) 8.44(0.11) 8.45(0.02) 8.51(0.07) 8.44(0.08) 8.47(0.04) 8.50(0.04) 8.40(0.10) 8.46(0.07) 8.39(0.08) 8.42(0.05) 8.44(0.05) 8.39(0.07) 8.41(0.02) 8.43(0.03) 8.41(0.03) 8.48(0.08) 8.37(0.11) 8.43(0.06) 8.43(0.03) 8.43(0.03) 8.40(0.04) 8.39(0.04) 8.39(0.04) 8.43(0.05) 8.42(0.04) 8.45(0.06) 8.43(0.06) 8.46(0.04) 8.39(0.08) 8.43(0.05) 8.38(0.05) 8.39(0.05) 8.38(0.04) 8.37(0.01) 8.40(0.04) 8.46(0.07) 8.40(0.07) 8.44(0.04) 8.48(0.05) 8.43(0.07) 8.33(0.10) 8.34(0.04) 8.39(0.06) 8.42(0.05) 8.35(0.08) 8.41(0.08) 8.40(0.02) 8.37(0.03) 8.39(0.02) 8.41(0.03) 8.33(0.09) 8.39(0.10) 8.47(0.13) 8.42(0.07) 8.45(0.05) 8.45(0.02) 8.44(0.02) 8.38(0.06) 8.39(0.03) 8.42(0.04) 8.33(0.09) 8.36(0.05) 8.44(0.09) 8.43(0.05) 8.47(0.08) 8.43(0.10) 8.51(0.19) 8.62(0.43) 8.75(0.29) 8.96(0.32) 8.82(0.22) 8.73(0.10) 8.72(0.06) 8.66(0.06) 8.74(0.10) 8.62(0.14) 8.67(0.12) 8.64(0.05) 8.61(0.03) 8.70(0.10) 8.64(0.07) 8.68(0.06) 8.65(0.03) 8.67(0.04) 8.72(0.06) 8.65(0.07) 8.65(0.05) 8.66(0.01) 8.68(0.04) 8.65(0.03) 8.57(0.08) 8.59(0.03) 8.61(0.03) 8.67(0.07) 8.69(0.06) 8.66(0.04) 8.69(0.07) 8.65(0.05) 8.60(0.07) 8.61(0.03) 8.65(0.06) 8.68(0.07) 8.62(0.06) 8.64(0.02) 8.60(0.04) 8.63(0.06) 8.64(0.10) 8.62(0.06) 8.63(0.02) 8.61(0.06) 8.59(0.04) 8.58(0.02) 8.65(0.07) 8.70(0.10) 8.67(0.05) 8.72(0.06) 8.64(0.08) 8.71(0.07) 8.61(0.10) 8.70(0.11)
++ Max displacement in automask = 8.96 (mm) at sub-brick 361
++ Max delta displ  in automask = 0.43 (mm) at sub-brick 359
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb02.sub-S11.r04.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S11.aff12.1D anatSS.sub-S11_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source pb02.sub-S11.r04.tshift+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r04.warp.aff12.1D -prefix rm.epi.nomask.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S11.r04.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S11.r04.tshift+orig.BRIK is 18.695126 degrees from plumb.
++ opened source dataset 'pb02.sub-S11.r04.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1376321536
in use bytes     = 1178733168
Total (incl. mmap):
system bytes     = 1376321536
in use bytes     = 1178733168
max mmap regions =          1
max mmap bytes   =   98738176
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r04+tlrc.BRIK
++ total Elapsed time = 1808.9 sec
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r04.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r04
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.695126 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1376321536
in use bytes     = 1178733328
Total (incl. mmap):
system bytes     = 1376321536
in use bytes     = 1178733328
max mmap regions =          1
max mmap bytes   =   98738176
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r05.1D -prefix rm.epi.volreg.r05 -cubic -1Dmatrix_save mat.r05.vr.aff12.1D pb02.sub-S11.r05.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.406977 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S11.r05.tshift+orig.BRIK is 18.695126 degrees from plumb.
++ centers of base and input datasets are 15.97 mm apart
++ Reading input dataset ./pb02.sub-S11.r05.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44478 voxels
 + 6226 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 412 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.651  pitch=-5.407  yaw=-0.320  dS=-1.553  dL=-0.529  dP=-0.220
++ Mean: roll=-0.596  pitch=-5.041  yaw=-0.179  dS=-1.236  dL=-0.428  dP=-0.044
++ Max : roll=-0.552  pitch=-4.828  yaw=-0.064  dS=-1.118  dL=-0.298  dP=+0.170
++ Max displacements (mm) for each sub-brick:
 8.87(0.00) 8.91(0.12) 8.99(0.08) 8.91(0.10) 9.05(0.17) 9.08(0.03) 8.92(0.20) 8.91(0.08) 8.96(0.06) 8.97(0.04) 9.00(0.03) 9.02(0.03) 8.99(0.06) 9.01(0.03) 8.98(0.03) 8.99(0.04) 9.00(0.03) 9.00(0.03) 9.00(0.01) 8.98(0.04) 9.02(0.09) 9.03(0.04) 8.91(0.14) 9.04(0.18) 8.94(0.11) 8.91(0.04) 8.93(0.07) 8.90(0.05) 8.93(0.03) 8.89(0.05) 8.86(0.03) 8.94(0.11) 8.89(0.06) 8.90(0.02) 8.90(0.03) 8.91(0.02) 8.87(0.04) 8.92(0.05) 8.93(0.01) 8.93(0.04) 8.92(0.03) 8.93(0.03) 8.92(0.03) 8.90(0.03) 8.92(0.04) 8.93(0.05) 8.90(0.06) 8.92(0.02) 8.92(0.02) 8.88(0.04) 8.89(0.02) 8.88(0.01) 8.85(0.05) 8.89(0.05) 8.88(0.02) 8.85(0.04) 8.88(0.04) 8.91(0.04) 8.93(0.06) 8.88(0.07) 8.90(0.05) 8.92(0.05) 8.91(0.02) 8.85(0.07) 8.94(0.09) 8.94(0.01) 8.89(0.07) 8.88(0.05) 8.92(0.04) 8.88(0.04) 8.88(0.06) 8.88(0.05) 8.83(0.05) 8.88(0.06) 8.90(0.05) 8.88(0.04) 8.81(0.08) 8.91(0.12) 8.88(0.05) 8.83(0.10) 8.89(0.09) 8.85(0.11) 8.94(0.10) 8.85(0.09) 8.90(0.05) 8.89(0.05) 8.88(0.04) 8.91(0.03) 8.78(0.15) 8.85(0.10) 8.93(0.10) 8.85(0.09) 8.89(0.09) 8.86(0.03) 8.88(0.04) 8.94(0.07) 8.89(0.06) 8.94(0.05) 8.82(0.13) 8.85(0.04) 8.87(0.04) 8.91(0.04) 8.90(0.02) 8.84(0.06) 8.92(0.07) 8.93(0.04) 8.95(0.03) 8.90(0.05) 8.90(0.03) 8.88(0.04) 8.94(0.07) 8.89(0.06) 8.92(0.04) 8.92(0.03) 8.89(0.04) 8.92(0.05) 8.85(0.07) 8.89(0.04) 8.88(0.01) 8.87(0.02) 8.88(0.03) 8.84(0.04) 8.86(0.04) 8.89(0.05) 8.82(0.08) 8.88(0.09) 8.87(0.06) 8.90(0.06) 8.86(0.05) 8.87(0.02) 8.84(0.04) 8.86(0.04) 8.77(0.09) 8.85(0.08) 8.78(0.07) 8.84(0.07) 8.84(0.02) 8.82(0.07) 8.83(0.04) 8.85(0.04) 8.93(0.09) 8.86(0.09) 8.93(0.08) 8.81(0.11) 8.84(0.03) 8.85(0.02) 8.84(0.03) 8.91(0.07) 8.87(0.06) 8.93(0.08) 8.78(0.15) 8.79(0.13) 8.88(0.10) 8.87(0.03) 8.91(0.05) 8.84(0.07) 8.91(0.09) 8.87(0.06) 8.92(0.06) 8.87(0.05) 8.87(0.02) 8.83(0.04) 8.90(0.07) 8.86(0.04) 8.89(0.04) 8.93(0.05) 8.92(0.07) 8.89(0.06) 8.87(0.05) 8.90(0.04) 8.84(0.06) 8.85(0.03) 8.86(0.01) 8.84(0.03) 8.85(0.03) 8.84(0.02) 8.79(0.06) 8.85(0.06) 8.86(0.03) 8.84(0.03) 8.85(0.02) 8.86(0.04) 8.80(0.07) 8.85(0.05) 8.85(0.01) 8.83(0.04) 8.85(0.03) 8.81(0.04) 8.76(0.06) 8.76(0.03) 8.74(0.02) 8.77(0.03) 8.77(0.02) 8.79(0.06) 8.89(0.10) 8.84(0.08) 8.87(0.04) 8.84(0.04) 8.83(0.03) 8.85(0.03) 8.86(0.03) 8.84(0.04) 8.86(0.03) 8.84(0.04) 8.79(0.05) 8.83(0.05) 8.81(0.03) 8.75(0.06) 8.82(0.07) 8.75(0.09) 8.75(0.04) 8.77(0.02) 8.80(0.06) 8.84(0.07) 8.74(0.12) 8.81(0.07) 8.76(0.09) 8.80(0.04) 8.77(0.04) 8.78(0.05) 8.75(0.04) 8.75(0.02) 8.77(0.03) 8.72(0.06) 8.73(0.03) 8.68(0.16) 8.83(0.16) 8.71(0.13) 8.77(0.06) 8.68(0.09) 8.74(0.06) 8.68(0.06) 8.72(0.04) 8.74(0.04) 8.75(0.06) 8.84(0.09) 8.73(0.12) 8.79(0.07) 8.78(0.02) 8.76(0.06) 8.76(0.02) 8.73(0.05) 8.75(0.03) 8.80(0.08) 8.82(0.05) 8.87(0.11) 8.84(0.20) 8.99(0.26) 9.18(0.24) 9.07(0.16) 8.99(0.09) 9.12(0.18) 9.05(0.08) 8.97(0.08) 9.10(0.14) 9.06(0.08) 9.02(0.05) 9.08(0.07) 9.01(0.07) 9.04(0.03) 9.06(0.02) 9.00(0.06) 9.03(0.04) 9.01(0.08) 8.95(0.28) 8.89(0.19) 8.86(0.59) 9.17(0.51) 9.23(0.08) 9.21(0.37) 9.31(0.12) 9.21(0.15) 9.23(0.17) 9.13(0.19) 9.11(0.11) 9.21(0.13) 9.66(0.46) 9.47(0.20) 9.33(0.15) 9.40(0.08) 9.35(0.05) 9.32(0.04) 9.30(0.02) 9.39(0.10) 9.28(0.12) 9.31(0.06) 9.29(0.03) 9.30(0.03) 9.30(0.02) 9.27(0.05) 9.23(0.04) 9.27(0.05) 9.24(0.04) 9.26(0.04) 9.25(0.03) 9.23(0.05) 9.24(0.04) 9.24(0.02) 9.27(0.05) 9.27(0.02) 9.25(0.04) 9.24(0.02) 9.21(0.06) 9.26(0.07) 9.26(0.02) 9.26(0.02) 9.28(0.03) 9.25(0.03) 9.27(0.02) 9.27(0.02) 9.25(0.03) 9.26(0.03) 9.20(0.06) 9.28(0.08) 9.25(0.03) 9.25(0.03) 9.28(0.05) 9.23(0.06) 9.23(0.02) 9.24(0.02) 9.23(0.04) 9.26(0.03) 9.21(0.05) 9.20(0.03) 9.22(0.03) 9.22(0.04) 9.21(0.04) 9.22(0.03) 9.27(0.04) 9.19(0.08) 9.22(0.04) 9.25(0.06) 9.22(0.04) 9.21(0.02) 9.21(0.03) 9.16(0.06) 9.22(0.07) 9.16(0.06) 9.20(0.04) 9.18(0.05) 9.20(0.04) 9.17(0.03) 9.13(0.07) 9.16(0.04) 9.14(0.04) 9.18(0.05) 8.99(0.37) 9.01(0.13) 8.97(0.15) 9.04(0.08) 8.98(0.07) 9.02(0.05) 8.94(0.08) 9.03(0.09) 9.01(0.05) 9.02(0.04) 9.06(0.04) 9.02(0.05) 9.07(0.06) 9.02(0.06) 9.05(0.04) 8.97(0.08) 8.99(0.02) 8.95(0.04) 8.97(0.05) 8.94(0.04) 9.00(0.06) 9.06(0.06) 9.04(0.04) 9.02(0.06) 9.02(0.05) 9.13(0.12) 8.92(0.22) 9.03(0.11) 9.05(0.28) 9.03(0.08) 9.01(0.06) 8.97(0.08) 8.97(0.03) 8.99(0.02) 8.98(0.02) 9.01(0.03) 8.96(0.04) 8.99(0.04) 9.01(0.03) 8.99(0.03) 8.99(0.03) 8.92(0.08) 9.04(0.13) 8.94(0.12) 8.90(0.09) 9.00(0.11) 8.99(0.13) 9.06(0.11) 9.05(0.04) 9.00(0.11) 8.99(0.11) 8.88(0.11) 8.98(0.10) 8.95(0.06) 8.96(0.04) 8.95(0.05) 8.98(0.06) 8.93(0.05) 8.96(0.03) 8.96(0.02) 8.94(0.02) 8.96(0.04) 8.94(0.05) 8.89(0.05) 8.96(0.07) 8.91(0.06)
++ Max displacement in automask = 9.66 (mm) at sub-brick 276
++ Max delta displ  in automask = 0.59 (mm) at sub-brick 266
++ Wrote dataset to disk in ./rm.epi.volreg.r05+orig.BRIK
3dcalc -overwrite -a pb02.sub-S11.r05.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S11.aff12.1D anatSS.sub-S11_al_junk_mat.aff12.1D -I mat.r05.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source pb02.sub-S11.r05.tshift+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r05.warp.aff12.1D -prefix rm.epi.nomask.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S11.r05.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S11.r05.tshift+orig.BRIK is 18.695126 degrees from plumb.
++ opened source dataset 'pb02.sub-S11.r05.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1391726592
in use bytes     = 1194134736
Total (incl. mmap):
system bytes     = 1391726592
in use bytes     = 1194134736
max mmap regions =          1
max mmap bytes   =   98738176
++ Warping:..............................................Z
++ Output dataset ./rm.epi.nomask.r05+tlrc.BRIK
++ total Elapsed time = 1835.6 sec
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r05.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r05
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.695126 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1391726592
in use bytes     = 1194134896
Total (incl. mmap):
system bytes     = 1391726592
in use bytes     = 1194134896
max mmap regions =          1
max mmap bytes   =   98738176
3dTstat -min -prefix rm.epi.min.r05 rm.epi.1.r05+tlrc
++ 3dTstat: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r05+tlrc.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r06.1D -prefix rm.epi.volreg.r06 -cubic -1Dmatrix_save mat.r06.vr.aff12.1D pb02.sub-S11.r06.tshift+orig
++ 3dvolreg: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.406977 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.sub-S11.r06.tshift+orig.BRIK is 18.695137 degrees from plumb.
++ centers of base and input datasets are 15.97 mm apart
++ Reading input dataset ./pb02.sub-S11.r06.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 44809 voxels
 + 6223 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 295 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.944  pitch=-5.238  yaw=-0.052  dS=-0.680  dL=-1.006  dP=-0.502
++ Mean: roll=-0.733  pitch=-5.121  yaw=+0.073  dS=-0.184  dL=-0.712  dP=-0.311
++ Max : roll=-0.554  pitch=-4.948  yaw=+0.171  dS=+0.221  dL=-0.431  dP=-0.029
++ Max displacements (mm) for each sub-brick:
 8.50(0.00) 8.46(0.12) 8.51(0.07) 8.56(0.05) 8.42(0.16) 8.54(0.14) 8.42(0.14) 8.43(0.04) 8.49(0.07) 8.40(0.09) 8.45(0.05) 8.51(0.06) 8.51(0.02) 8.51(0.05) 8.43(0.08) 8.43(0.03) 8.53(0.11) 8.37(0.17) 8.45(0.10) 8.46(0.03) 8.48(0.03) 8.37(0.12) 8.39(0.04) 8.45(0.07) 8.48(0.05) 8.32(0.17) 8.43(0.13) 8.41(0.04) 8.49(0.09) 8.34(0.16) 8.42(0.08) 8.42(0.03) 8.40(0.03) 8.33(0.07) 8.47(0.14) 8.34(0.14) 8.35(0.04) 8.40(0.05) 8.36(0.05) 8.34(0.04) 8.39(0.05) 8.39(0.02) 8.45(0.08) 8.36(0.13) 8.44(0.10) 8.40(0.08) 8.45(0.07) 8.44(0.02) 8.40(0.06) 8.34(0.07) 8.34(0.02) 8.38(0.05) 8.42(0.04) 8.34(0.08) 8.33(0.02) 8.37(0.04) 8.43(0.08) 8.41(0.05) 8.40(0.03) 8.33(0.09) 8.39(0.06) 8.34(0.05) 8.33(0.04) 8.39(0.07) 8.39(0.04) 8.38(0.04) 8.33(0.06) 8.37(0.04) 8.32(0.05) 8.38(0.09) 8.32(0.07) 8.33(0.05) 8.41(0.07) 8.39(0.05) 8.34(0.05) 8.35(0.04) 8.34(0.05) 8.32(0.05) 8.33(0.02) 8.38(0.15) 8.35(0.07) 8.28(0.21) 8.40(0.15) 8.33(0.09) 8.37(0.06) 8.34(0.04) 8.38(0.06) 8.28(0.11) 8.35(0.08) 8.31(0.07) 8.28(0.08) 8.43(0.20) 8.28(0.21) 8.20(0.13) 8.42(0.22) 8.36(0.10) 8.38(0.08) 8.35(0.06) 8.39(0.05) 8.38(0.02) 8.37(0.08) 8.40(0.14) 8.48(0.11) 8.33(0.29) 8.47(0.33) 8.60(0.15) 8.52(0.13) 8.59(0.10) 8.55(0.10) 8.58(0.04) 8.57(0.03) 8.59(0.04) 8.58(0.06) 8.58(0.03) 8.54(0.04) 8.60(0.06) 8.64(0.05) 8.65(0.09) 8.70(0.10) 8.68(0.06) 8.65(0.07) 8.74(0.10) 8.77(0.05) 8.73(0.05) 8.73(0.08) 8.72(0.06) 8.70(0.06) 8.66(0.05) 8.74(0.09) 8.75(0.01) 8.64(0.11) 8.68(0.08) 8.74(0.06) 8.76(0.05) 8.71(0.10) 8.57(0.15) 8.62(0.12) 8.67(0.06) 8.67(0.03) 8.71(0.11) 8.69(0.09) 8.70(0.08) 8.67(0.11) 8.69(0.03) 8.66(0.07) 8.69(0.05) 8.69(0.03) 8.72(0.08) 8.76(0.10) 8.67(0.11) 8.75(0.11) 8.66(0.17) 8.71(0.09) 8.65(0.07) 8.71(0.09) 8.66(0.11) 8.70(0.15) 8.69(0.06) 8.67(0.11) 8.74(0.09) 8.69(0.10) 8.72(0.07) 8.72(0.01) 8.71(0.05) 8.75(0.04) 8.73(0.03) 8.79(0.06) 8.78(0.09) 8.81(0.12) 8.87(0.10) 8.87(0.02) 8.88(0.02) 8.84(0.06) 8.87(0.04) 8.87(0.02) 8.85(0.05) 8.89(0.05) 8.89(0.07) 8.87(0.06) 8.89(0.06) 8.88(0.02) 8.84(0.08) 8.90(0.07) 8.87(0.04) 8.88(0.03) 8.88(0.03) 8.86(0.08) 8.85(0.04) 8.84(0.02) 8.87(0.03) 8.85(0.08) 8.89(0.10) 8.88(0.06) 8.90(0.03) 8.93(0.06) 8.90(0.04) 8.93(0.03) 8.89(0.07) 8.91(0.14) 8.93(0.05) 8.91(0.10) 8.91(0.05) 8.94(0.09) 8.89(0.07) 8.94(0.05) 8.92(0.02) 8.95(0.06) 8.94(0.04) 8.88(0.09) 8.93(0.09) 8.93(0.03) 8.87(0.06) 8.95(0.08) 8.92(0.07) 8.93(0.06) 8.88(0.05) 8.97(0.10) 8.96(0.02) 9.00(0.05) 8.97(0.09) 8.99(0.05) 8.95(0.07) 8.99(0.05) 8.95(0.09) 8.96(0.08) 8.97(0.03) 8.93(0.05) 8.97(0.05) 8.94(0.05) 9.03(0.13) 8.94(0.14) 8.95(0.03) 8.95(0.03) 8.93(0.08) 8.92(0.09) 8.93(0.07) 8.99(0.11) 8.98(0.02) 8.98(0.06) 8.94(0.07) 8.92(0.09) 8.98(0.07) 8.92(0.09) 8.95(0.04) 8.93(0.12) 8.93(0.05) 8.86(0.12) 8.89(0.05) 8.89(0.01) 8.88(0.02) 8.92(0.04) 8.89(0.07) 8.92(0.03) 8.87(0.06) 8.92(0.07) 8.92(0.02) 8.98(0.07) 8.95(0.04) 8.97(0.04) 8.92(0.05) 8.93(0.06) 8.81(0.13) 8.97(0.17) 8.87(0.12) 8.99(0.13) 8.95(0.06) 8.93(0.05) 8.87(0.09) 8.99(0.14) 9.05(0.08) 9.04(0.07) 8.99(0.07) 9.08(0.09) 9.05(0.05) 9.08(0.05) 9.15(0.07) 9.11(0.09) 9.11(0.09) 9.12(0.05) 9.13(0.09) 9.09(0.08) 9.12(0.04) 9.10(0.05) 9.07(0.07) 9.13(0.05) 9.08(0.05) 9.15(0.07) 9.14(0.05) 9.19(0.06) 9.18(0.03) 9.16(0.11) 9.03(0.13) 9.12(0.10) 9.09(0.06) 9.04(0.10)
++ Max displacement in automask = 9.19 (mm) at sub-brick 288
++ Max delta displ  in automask = 0.33 (mm) at sub-brick 104
++ Wrote dataset to disk in ./rm.epi.volreg.r06+orig.BRIK
3dcalc -overwrite -a pb02.sub-S11.r06.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE anatQQ.sub-S11.aff12.1D anatSS.sub-S11_al_junk_mat.aff12.1D -I mat.r06.vr.aff12.1D
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source pb02.sub-S11.r06.tshift+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r06.warp.aff12.1D -prefix rm.epi.nomask.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.sub-S11.r06.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.sub-S11.r06.tshift+orig.BRIK is 18.695137 degrees from plumb.
++ opened source dataset 'pb02.sub-S11.r06.tshift+orig'
++ Processing -nwarp 
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1391685632
in use bytes     = 1194089424
Total (incl. mmap):
system bytes     = 1391685632
in use bytes     = 1194089424
max mmap regions =          1
max mmap bytes   =   98738176
++ Warping:..................................................Z
++ Output dataset ./rm.epi.nomask.r06+tlrc.BRIK
++ total Elapsed time = 1296.3 sec
3dNwarpApply -master anatQQ.sub-S11+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anatQQ.sub-S11_WARP.nii mat.r06.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r06
++ 3dNwarpApply: AFNI version=AFNI_20.3.02 (Nov 12 2020) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'anatQQ.sub-S11+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.695137 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
++ Memory usage: enter THD_nwarp_dataset_array
Arena 0:
system bytes     = 1391685632
in use bytes     = 1194089584
Total (incl. mmap):
system bytes     = 1391685632
in use bytes     = 1194089584
max mmap regions =          1
max mmap bytes   =   98738176
